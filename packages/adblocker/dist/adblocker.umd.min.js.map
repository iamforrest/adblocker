{"version":3,"file":"adblocker.umd.min.js","sources":["esm/codebooks/cosmetic-selector.js","esm/codebooks/network-csp.js","esm/codebooks/network-filter.js","esm/codebooks/network-hostname.js","esm/codebooks/network-redirect.js","esm/codebooks/raw-network.js","esm/codebooks/raw-cosmetic.js","esm/compression.js","esm/crc32.js","esm/punycode.js","esm/data-view.js","esm/queue-microtask.js","esm/config.js","esm/events.js","esm/fetch.js","esm/filters/dsl.js","esm/tokens-buffer.js","esm/utils.js","esm/request.js","esm/engine/domains.js","esm/html-filtering.js","esm/filters/cosmetic.js","esm/filters/network.js","esm/preprocessor.js","esm/lists.js","esm/resources.js","esm/compact-set.js","esm/engine/optimizer.js","esm/engine/reverse-index.js","esm/engine/bucket/filters.js","esm/engine/bucket/cosmetic.js","esm/engine/bucket/network.js","esm/engine/map.js","esm/engine/metadata/categories.js","esm/engine/metadata/organizations.js","esm/engine/metadata/patterns.js","esm/engine/metadata.js","esm/engine/bucket/preprocessor.js","esm/engine/engine.js","esm/encoding.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* eslint-disable prettier/prettier */\nexport default [\n    \"%3D%3D%2527%252Cnecessary%3Atrue%252Cpreferences%3Afalse%252Cstatistics%3Afalse%252Cmarketing%3Afalse%252Cmethod%3A%2527explicit%2\",\n    \"div[style=\\\"position: absolute; inset: 0px; overflow: hidden; z-index: 160; background: transparent none repeat scroll 0% 0%; displ\",\n    \"div[style=\\\"position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 30\",\n    \"document.currentScript.textContent%3Ddocument.currentScript.textContent.replace(%2F%5C%2F%5C*start%5C*%5C%2F(.*)%5C%2F%5C*end%5C*%\",\n    \"acs, atob, %2FpopundersPerIP%5B%5Cs%5CS%5D*%3FDate%5B%5Cs%5CS%5D*%3FgetElementsByTagName%5B%5Cs%5CS%5D*%3FinsertBefore%2F\",\n    \"\\\"]:not([style^=\\\"width: 1px; height: 1px; position: absolute; left: -10000px; top: -\\\"])\",\n    \"acs, document.createElement, %2Fl%5C.parentNode%5C.insertBefore%5C(s%2F\",\n    \"%2Fvisit%2F%22%5D%5Btitle%5E%3D%22https%3A%2F%2F%22%5D, %5Btitle%5D\",\n    \"rmnt, script, %2Fh%3DdecodeURIComponent%7CpopundersPerIP%2F\",\n    \":not([style^=\\\"position: absolute; left: -5000px\\\"])\",\n    \", OptanonConsent, groups%3DC0001%253A1%252CC000\",\n    \"href-sanitizer, a%5Bhref%5E%3D%22https%3A%2F%2F\",\n    \"ra, oncontextmenu%7Condragstart%7Conselectstart\",\n    \", OptanonAlertBoxClosed, %24currentDate%24\",\n    \"acs, document.querySelectorAll, popMagic\",\n    \"acs, addEventListener, google_ad_client\",\n    \"aost, String.prototype.charCodeAt, ai_\",\n    \"aopr, app_vars.force_disable_adblock\",\n    \"acs, document.addEventListener, \",\n    \"acs, document.getElementById, \",\n    \"no-fetch-if, googlesyndication\",\n    \"aopr, document.dispatchEvent\",\n    \"no-xhr-if, googlesyndication\",\n    \", document.createElement, \",\n    \"acs, String.fromCharCode, \",\n    \"%2522%253Afalse%252C%2522\",\n    \", document.oncontextmenu\",\n    \"aeld, DOMContentLoaded, \",\n    \"nosiif, visibility, 1000\",\n    \"set-local-storage-item, \",\n    \"trusted-click-element, \",\n    \"set, blurred, false\",\n    \"acs, eval, replace\",\n    \"decodeURIComponent\",\n    \"[target=\\\"_blank\\\"]\",\n    \"%22%3Afalse%2C%22\",\n    \"^script:has-text(\",\n    \"[href^=\\\"https://\",\n    \"[href^=\\\"http://\",\n    \"[href=\\\"https://\",\n    \"[src^=\\\"https://\",\n    \"[data-testid=\\\"\",\n    \"modal-backdrop\",\n    \"rmnt, script, \",\n    \"BlockDetected\",\n    \"trusted-set-\",\n    \".prototype.\",\n    \"contextmenu\",\n    \"no-fetch-if\",\n    \"otification\",\n    \":has-text(\",\n    \"background\",\n    \"[class*=\\\"\",\n    \"[class^=\\\"\",\n    \"body,html\",\n    \"container\",\n    \"Container\",\n    \"decodeURI\",\n    \"div[class\",\n    \"div[id^=\\\"\",\n    \"div[style\",\n    \"document.\",\n    \"no-xhr-if\",\n    \"ompliance\",\n    \"placehold\",\n    \"sbygoogle\",\n    \"[href*=\\\"\",\n    \"#wpsafe-\",\n    \"AAAAAAAA\",\n    \"Detector\",\n    \"disclaim\",\n    \"nano-sib\",\n    \"nextFunc\",\n    \"noopFunc\",\n    \"nostif, \",\n    \"nowebrtc\",\n    \".com/\\\"]\",\n    \"300x250\",\n    \"article\",\n    \"consent\",\n    \"Consent\",\n    \"content\",\n    \"display\",\n    \"keydown\",\n    \"message\",\n    \"Message\",\n    \"overlay\",\n    \"privacy\",\n    \"sidebar\",\n    \"sponsor\",\n    \"wrapper\",\n    \"[data-\",\n    \"728x90\",\n    \"accept\",\n    \"Accept\",\n    \"aopr, \",\n    \"banner\",\n    \"bottom\",\n    \"cookie\",\n    \"Cookie\",\n    \"nosiif\",\n    \"notice\",\n    \"nowoif\",\n    \"policy\",\n    \"Policy\",\n    \"script\",\n    \"widget\",\n    \":has(\",\n    \":not(\",\n    \"block\",\n    \"Block\",\n    \"click\",\n    \"deskt\",\n    \"disab\",\n    \"fixed\",\n    \"frame\",\n    \"modal\",\n    \"popup\",\n    \"video\",\n    \"2%3A\",\n    \"aeld\",\n    \"body\",\n    \"butt\",\n    \"foot\",\n    \"gdpr\",\n    \"goog\",\n    \"html\",\n    \"icky\",\n    \"ight\",\n    \"show\",\n    \"tion\",\n    \"true\",\n    \" > \",\n    \"%3D\",\n    \"%7C\",\n    \"age\",\n    \"box\",\n    \"div\",\n    \"dow\",\n    \"ent\",\n    \"out\",\n    \"rap\",\n    \"set\",\n    \"__\",\n    \", \",\n    \"\\\"]\",\n    \"%2\",\n    \"%5\",\n    \"=\\\"\",\n    \"00\",\n    \"ac\",\n    \"ad\",\n    \"Ad\",\n    \"al\",\n    \"an\",\n    \"ar\",\n    \"at\",\n    \"e-\",\n    \"ed\",\n    \"en\",\n    \"er\",\n    \"he\",\n    \"id\",\n    \"in\",\n    \"la\",\n    \"le\",\n    \"lo\",\n    \"od\",\n    \"ol\",\n    \"om\",\n    \"on\",\n    \"op\",\n    \"or\",\n    \"re\",\n    \"s_\",\n    \"s-\",\n    \"se\",\n    \"st\",\n    \"t-\",\n    \"te\",\n    \"ti\",\n    \"un\",\n    \" \",\n    \"_\",\n    \"-\",\n    \";\",\n    \":\",\n    \".\",\n    \"(\",\n    \")\",\n    \"[\",\n    \"]\",\n    \"*\",\n    \"/\",\n    \"#\",\n    \"^\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"b\",\n    \"B\",\n    \"c\",\n    \"C\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"E\",\n    \"f\",\n    \"F\",\n    \"g\",\n    \"G\",\n    \"h\",\n    \"H\",\n    \"I\",\n    \"j\",\n    \"J\",\n    \"k\",\n    \"K\",\n    \"l\",\n    \"L\",\n    \"m\",\n    \"M\",\n    \"n\",\n    \"N\",\n    \"o\",\n    \"O\",\n    \"p\",\n    \"P\",\n    \"q\",\n    \"Q\",\n    \"r\",\n    \"R\",\n    \"s\",\n    \"S\",\n    \"t\",\n    \"T\",\n    \"u\",\n    \"U\",\n    \"v\",\n    \"V\",\n    \"w\",\n    \"W\",\n    \"x\",\n    \"y\",\n    \"Y\",\n    \"z\",\n    \"Z\"\n];\n//# sourceMappingURL=cosmetic-selector.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* eslint-disable prettier/prettier */\nexport default [\n    \"sandbox allow-forms allow-same-origin allow-scripts allow-modals allow-orientation-lock allow-pointer-lock allow-presentation allow-top-navigation\",\n    \"script-src 'self' 'unsafe-inline' 'unsafe-eval' \",\n    \" *.google.com *.gstatic.com *.googleapis.com\",\n    \".com *.google.com *.googletagmanager.com *.\",\n    \"script-src 'self' '*' 'unsafe-inline'\",\n    \"default-src 'unsafe-inline' 'self'\",\n    \"script-src 'self' 'unsafe-eval' \",\n    \" *.google.com *.gstatic.com *.\",\n    \"t-src 'self' 'unsafe-inline' \",\n    \"script-src * 'unsafe-inline'\",\n    \".com *.googleapis.com *.\",\n    \" *.googletagmanager.com\",\n    \".com *.bootstrapcdn.com\",\n    \"default-src 'self' *.\",\n    \"frame-src 'self' *\",\n    \" *.cloudflare.com\",\n    \"child-src 'none';\",\n    \"worker-src 'none'\",\n    \"google-analytics\",\n    \"'unsafe-inline'\",\n    \"*.googleapis\",\n    \"connect-src \",\n    \"child-src *\",\n    \" *.gstatic\",\n    \"script-src\",\n    \"style-src \",\n    \"frame-src\",\n    \"facebook\",\n    \"https://\",\n    \" 'self'\",\n    \".com *.\",\n    \".net *.\",\n    \"addthis\",\n    \"captcha\",\n    \"gstatic\",\n    \"https: \",\n    \"youtube\",\n    \"defaul\",\n    \"disqus\",\n    \"google\",\n    \"jquery\",\n    \"blob:\",\n    \"data:\",\n    \"http:\",\n    \"media\",\n    \"scrip\",\n    \"-src\",\n    \".com\",\n    \".net\",\n    \"n.cc\",\n    \" *.\",\n    \"age\",\n    \"img\",\n    \"str\",\n    \"vic\",\n    \" *\",\n    \"*.\",\n    \"bo\",\n    \"cd\",\n    \"ch\",\n    \"el\",\n    \"le\",\n    \"m:\",\n    \"ns\",\n    \"pi\",\n    \"ra\",\n    \"re\",\n    \"te\",\n    \"wi\",\n    \"wp\",\n    \"yt\",\n    \" \",\n    \"-\",\n    \";\",\n    \":\",\n    \".\",\n    \"'\",\n    \"*\",\n    \"/\",\n    \"3\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\"\n];\n//# sourceMappingURL=network-csp.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* eslint-disable prettier/prettier */\nexport default [\n    \"/homad-global-configs.schneevonmorgen.com/global_config\",\n    \"/videojs-vast-vpaid@2.0.2/bin/videojs_5.vast.vpaid.min\",\n    \"/etc.clientlibs/logitech-common/clientlibs/onetrust.\",\n    \"[\\\\/]{1,}.*[a-zA-Z0-9]{3,7}\\\\/[a-zA-Z0-9]{6,}\\\\/.*/\",\n    \"/^https?:\\\\/\\\\/[-a-z]{8,15}\\\\.(?:com|net)\\\\/\",\n    \"/pagead/managed/js/gpt/*/pubads_impl\",\n    \"/pagead/js/adsbygoogle.js\",\n    \"/vans-adapter-google-ima\",\n    \"/js/sdkloader/ima3_dai\",\n    \"/js/sdkloader/ima3.js\",\n    \"/videojs-contrib-ads\",\n    \"/wp-content/plugins/\",\n    \"/wp-content/uploads/\",\n    \"/wp-content/themes/\",\n    \"/detroitchicago/\",\n    \"/appmeasurement\",\n    \"/413gkwmt/init\",\n    \"/cdn-cgi/trace\",\n    \"/^https?:\\\\/\\\\/\",\n    \"[a-zA-Z0-9]{\",\n    \"/^https:\\\\/\\\\/\",\n    \"notification\",\n    \"\\\\/[a-z0-9]{\",\n    \"fingerprint\",\n    \"/ljub4etb/\",\n    \"compliance\",\n    \"impression\",\n    \"/plugins/\",\n    \"/template\",\n    \"affiliate\",\n    \"analytics\",\n    \"telemetry\",\n    \"(.+?\\\\.)?\",\n    \"[0-9a-z]\",\n    \"/assets/\",\n    \"/images/\",\n    \"/pagead/\",\n    \"tracking\",\n    \"/public\",\n    \"300x250\",\n    \"collect\",\n    \"consent\",\n    \"content\",\n    \"counter\",\n    \"default\",\n    \"metrics\",\n    \"privacy\",\n    \"[a-z]{\",\n    \"728x90\",\n    \"banner\",\n    \"bundle\",\n    \"client\",\n    \"cookie\",\n    \"detect\",\n    \"dn-cgi\",\n    \"google\",\n    \"iframe\",\n    \"module\",\n    \"prebid\",\n    \"script\",\n    \"source\",\n    \"widget\",\n    \".aspx\",\n    \".cgi?\",\n    \".com/\",\n    \".html\",\n    \"/api/\",\n    \"/beac\",\n    \"/html\",\n    \"/img/\",\n    \"/java\",\n    \"/stat\",\n    \"block\",\n    \"click\",\n    \"count\",\n    \"event\",\n    \"manag\",\n    \"media\",\n    \"pixel\",\n    \"popup\",\n    \"track\",\n    \"type=\",\n    \"video\",\n    \"visit\",\n    \".css\",\n    \".gif\",\n    \".jpg\",\n    \".min\",\n    \".php\",\n    \".png\",\n    \"/jqu\",\n    \"/js/\",\n    \"/lib\",\n    \"/log\",\n    \"/web\",\n    \"/wp-\",\n    \"468x\",\n    \"data\",\n    \"gdpr\",\n    \"gi-b\",\n    \"http\",\n    \"ight\",\n    \"plug\",\n    \"show\",\n    \"stat\",\n    \"view\",\n    \".js\",\n    \"/ad\",\n    \"=*&\",\n    \"age\",\n    \"gpt\",\n    \"id=\",\n    \"jax\",\n    \"key\",\n    \"lay\",\n    \"log\",\n    \"new\",\n    \"sdk\",\n    \"tag\",\n    \"web\",\n    \"ync\",\n    \"*/\",\n    \"*^\",\n    \"/_\",\n    \"/?\",\n    \"/*\",\n    \"/d\",\n    \"/f\",\n    \"/g\",\n    \"/h\",\n    \"/l\",\n    \"/n\",\n    \"/p\",\n    \"/r\",\n    \"/w\",\n    \"^*\",\n    \"00\",\n    \"1/\",\n    \"ac\",\n    \"ad\",\n    \"al\",\n    \"am\",\n    \"an\",\n    \"ap\",\n    \"ar\",\n    \"as\",\n    \"at\",\n    \"bo\",\n    \"ch\",\n    \"ck\",\n    \"de\",\n    \"e-\",\n    \"e/\",\n    \"ed\",\n    \"el\",\n    \"em\",\n    \"en\",\n    \"er\",\n    \"es\",\n    \"et\",\n    \"ex\",\n    \"g/\",\n    \"ic\",\n    \"id\",\n    \"ig\",\n    \"il\",\n    \"im\",\n    \"in\",\n    \"is\",\n    \"it\",\n    \"js\",\n    \"la\",\n    \"le\",\n    \"li\",\n    \"lo\",\n    \"ma\",\n    \"mp\",\n    \"o/\",\n    \"ol\",\n    \"om\",\n    \"on\",\n    \"op\",\n    \"or\",\n    \"ot\",\n    \"re\",\n    \"ro\",\n    \"s_\",\n    \"s-\",\n    \"s?\",\n    \"s/\",\n    \"si\",\n    \"sp\",\n    \"st\",\n    \"t/\",\n    \"te\",\n    \"ti\",\n    \"tm\",\n    \"tr\",\n    \"ub\",\n    \"um\",\n    \"un\",\n    \"up\",\n    \"ur\",\n    \"us\",\n    \"ut\",\n    \"ve\",\n    \"_\",\n    \"-\",\n    \":\",\n    \"?\",\n    \".\",\n    \"}\",\n    \"*\",\n    \"/\",\n    \"\\\\\",\n    \"&\",\n    \"^\",\n    \"=\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\"\n];\n//# sourceMappingURL=network-filter.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* eslint-disable prettier/prettier */\nexport default [\n    \"securepubads.g.doubleclick\",\n    \".actonservice.com\",\n    \"googlesyndication\",\n    \"imasdk.googleapis\",\n    \".cloudfront.net\",\n    \"analytics.\",\n    \"marketing.\",\n    \"tracking.\",\n    \"metrics.\",\n    \"images.\",\n    \".co.uk\",\n    \"a8clk.\",\n    \"stats.\",\n    \"a8cv.\",\n    \"media\",\n    \"track\",\n    \".com\",\n    \".net\",\n    \".top\",\n    \".xyz\",\n    \"ight\",\n    \"tion\",\n    \"www.\",\n    \".io\",\n    \".jp\",\n    \"app\",\n    \"cdn\",\n    \"new\",\n    \"web\",\n    \".b\",\n    \".c\",\n    \".d\",\n    \".f\",\n    \".h\",\n    \".k\",\n    \".m\",\n    \".n\",\n    \".p\",\n    \".s\",\n    \".t\",\n    \".v\",\n    \".w\",\n    \"a1\",\n    \"a2\",\n    \"a4\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"af\",\n    \"ag\",\n    \"ah\",\n    \"ai\",\n    \"ak\",\n    \"al\",\n    \"am\",\n    \"an\",\n    \"ap\",\n    \"ar\",\n    \"as\",\n    \"at\",\n    \"au\",\n    \"av\",\n    \"aw\",\n    \"ax\",\n    \"ay\",\n    \"az\",\n    \"be\",\n    \"bl\",\n    \"bo\",\n    \"br\",\n    \"bu\",\n    \"ca\",\n    \"ce\",\n    \"ch\",\n    \"ci\",\n    \"ck\",\n    \"cl\",\n    \"cr\",\n    \"ct\",\n    \"cu\",\n    \"de\",\n    \"di\",\n    \"do\",\n    \"dr\",\n    \"ds\",\n    \"dy\",\n    \"e-\",\n    \"eb\",\n    \"ec\",\n    \"ed\",\n    \"ef\",\n    \"eg\",\n    \"el\",\n    \"em\",\n    \"en\",\n    \"ep\",\n    \"er\",\n    \"es\",\n    \"et\",\n    \"eu\",\n    \"ev\",\n    \"ew\",\n    \"ex\",\n    \"fe\",\n    \"fi\",\n    \"fl\",\n    \"fo\",\n    \"fr\",\n    \"ge\",\n    \"gh\",\n    \"gl\",\n    \"go\",\n    \"gr\",\n    \"gs\",\n    \"gu\",\n    \"he\",\n    \"ho\",\n    \"ia\",\n    \"ib\",\n    \"ic\",\n    \"id\",\n    \"ie\",\n    \"if\",\n    \"ig\",\n    \"ik\",\n    \"il\",\n    \"im\",\n    \"in\",\n    \"io\",\n    \"ip\",\n    \"ir\",\n    \"is\",\n    \"it\",\n    \"iv\",\n    \"ix\",\n    \"iz\",\n    \"jo\",\n    \"ke\",\n    \"ks\",\n    \"la\",\n    \"ld\",\n    \"le\",\n    \"li\",\n    \"ll\",\n    \"lo\",\n    \"lu\",\n    \"ly\",\n    \"ma\",\n    \"me\",\n    \"mo\",\n    \"mp\",\n    \"my\",\n    \"ne\",\n    \"no\",\n    \"ob\",\n    \"od\",\n    \"of\",\n    \"ok\",\n    \"ol\",\n    \"om\",\n    \"on\",\n    \"oo\",\n    \"op\",\n    \"or\",\n    \"ot\",\n    \"ou\",\n    \"ov\",\n    \"ow\",\n    \"pa\",\n    \"pe\",\n    \"ph\",\n    \"pl\",\n    \"po\",\n    \"pr\",\n    \"pu\",\n    \"qu\",\n    \"re\",\n    \"ro\",\n    \"ru\",\n    \"s-\",\n    \"sc\",\n    \"se\",\n    \"sh\",\n    \"si\",\n    \"sk\",\n    \"so\",\n    \"sp\",\n    \"ss\",\n    \"st\",\n    \"su\",\n    \"sw\",\n    \"sy\",\n    \"t-\",\n    \"ta\",\n    \"te\",\n    \"th\",\n    \"ti\",\n    \"tn\",\n    \"to\",\n    \"tr\",\n    \"ts\",\n    \"tu\",\n    \"tw\",\n    \"ty\",\n    \"ub\",\n    \"ud\",\n    \"ul\",\n    \"um\",\n    \"un\",\n    \"up\",\n    \"ur\",\n    \"us\",\n    \"ut\",\n    \"ve\",\n    \"vi\",\n    \"we\",\n    \"-\",\n    \".\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\"\n];\n//# sourceMappingURL=network-hostname.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* eslint-disable prettier/prettier */\nexport default [\n    \"google-analytics.com/analytics.js\",\n    \"googlesyndication_adsbygoogle.js\",\n    \"googletagmanager.com/gtm.js\",\n    \"googletagservices_gpt.js\",\n    \"googletagmanager_gtm.js\",\n    \"fuckadblock.js-3.2.0\",\n    \"amazon_apstag.js\",\n    \"google-analytics\",\n    \"fingerprint2.js\",\n    \"noop-1s.mp4:10\",\n    \"google-ima.js\",\n    \"noop-0.1s.mp3\",\n    \"prebid-ads.js\",\n    \"nobab2.js:10\",\n    \"noopmp3-0.1s\",\n    \"noop-1s.mp4\",\n    \"hd-main.js\",\n    \"noopmp4-1s\",\n    \"32x32.png\",\n    \"noop.html\",\n    \"noopframe\",\n    \"noop.txt\",\n    \"nooptext\",\n    \"1x1.gif\",\n    \"2x2.png\",\n    \"noop.js\",\n    \"noopjs\",\n    \".com/\",\n    \".js:5\",\n    \"noop\",\n    \":10\",\n    \".js\",\n    \"ads\",\n    \"bea\",\n    \"_a\",\n    \":5\",\n    \"am\",\n    \"ar\",\n    \"ch\",\n    \"ic\",\n    \"in\",\n    \"le\",\n    \"on\",\n    \"re\",\n    \"st\",\n    \"_\",\n    \"-\",\n    \":\",\n    \".\",\n    \"/\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\"\n];\n//# sourceMappingURL=network-redirect.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* eslint-disable prettier/prettier */\nexport default [\n    \"/js/sdkloader/ima3.j\",\n    \".com^$third-party\",\n    \"googlesyndication\",\n    \"imasdk.googleapis\",\n    \".cloudfront.net^\",\n    \"$script,domain=\",\n    \"redirect-rule=\",\n    \"xmlhttprequest\",\n    \".actonservice\",\n    \"^$third-party\",\n    \"3p,denyallow=\",\n    \"redirect=noop\",\n    \"||smetrics.\",\n    \"third-party\",\n    \"marketing.\",\n    \"analytics\",\n    \",domain=\",\n    \"$script,\",\n    \"metrics.\",\n    \"tracking\",\n    \".co.uk\",\n    \"$ghide\",\n    \"a8clk.\",\n    \"cookie\",\n    \"google\",\n    \"script\",\n    \".com^\",\n    \".top^\",\n    \".xyz^\",\n    \"/wp-c\",\n    \"$doma\",\n    \"a8cv.\",\n    \"image\",\n    \"media\",\n    \"track\",\n    \".au^\",\n    \".com\",\n    \".gif\",\n    \".jp^\",\n    \".net\",\n    \"/js/\",\n    \"$doc\",\n    \"$xhr\",\n    \"www.\",\n    \".jp\",\n    \".js\",\n    \"app\",\n    \"cdn\",\n    \"new\",\n    \"web\",\n    \".b\",\n    \".c\",\n    \".f\",\n    \".m\",\n    \".n\",\n    \".p\",\n    \".s\",\n    \"@@\",\n    \"/*\",\n    \"/p\",\n    \"||\",\n    \"1p\",\n    \"a1\",\n    \"a2\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"af\",\n    \"ag\",\n    \"ai\",\n    \"ak\",\n    \"al\",\n    \"am\",\n    \"an\",\n    \"ap\",\n    \"ar\",\n    \"as\",\n    \"at\",\n    \"au\",\n    \"av\",\n    \"aw\",\n    \"ax\",\n    \"ay\",\n    \"az\",\n    \"be\",\n    \"bo\",\n    \"br\",\n    \"ca\",\n    \"ce\",\n    \"ch\",\n    \"ck\",\n    \"cl\",\n    \"ct\",\n    \"de\",\n    \"di\",\n    \"do\",\n    \"e-\",\n    \"e^\",\n    \"eb\",\n    \"ec\",\n    \"ed\",\n    \"el\",\n    \"em\",\n    \"en\",\n    \"ep\",\n    \"er\",\n    \"es\",\n    \"et\",\n    \"ev\",\n    \"ew\",\n    \"ex\",\n    \"fe\",\n    \"ff\",\n    \"fi\",\n    \"fo\",\n    \"fr\",\n    \"g^\",\n    \"ge\",\n    \"gi\",\n    \"go\",\n    \"gr\",\n    \"gu\",\n    \"he\",\n    \"hi\",\n    \"ho\",\n    \"hp\",\n    \"ht\",\n    \"ic\",\n    \"id\",\n    \"ig\",\n    \"il\",\n    \"im\",\n    \"in\",\n    \"io\",\n    \"ip\",\n    \"ir\",\n    \"is\",\n    \"it\",\n    \"ix\",\n    \"iz\",\n    \"jo\",\n    \"js\",\n    \"ke\",\n    \"ld\",\n    \"le\",\n    \"li\",\n    \"lo\",\n    \"lu\",\n    \"ly\",\n    \"ma\",\n    \"me\",\n    \"mo\",\n    \"mp\",\n    \"my\",\n    \"no\",\n    \"od\",\n    \"ok\",\n    \"ol\",\n    \"om\",\n    \"on\",\n    \"op\",\n    \"or\",\n    \"ot\",\n    \"pl\",\n    \"po\",\n    \"pr\",\n    \"qu\",\n    \"re\",\n    \"ri\",\n    \"ro\",\n    \"ru\",\n    \"s-\",\n    \"s/\",\n    \"sc\",\n    \"se\",\n    \"sh\",\n    \"si\",\n    \"sk\",\n    \"so\",\n    \"sp\",\n    \"ss\",\n    \"st\",\n    \"su\",\n    \"sw\",\n    \"t-\",\n    \"te\",\n    \"th\",\n    \"ti\",\n    \"to\",\n    \"tr\",\n    \"ts\",\n    \"tv\",\n    \"ty\",\n    \"ub\",\n    \"ud\",\n    \"ul\",\n    \"um\",\n    \"un\",\n    \"up\",\n    \"ur\",\n    \"us\",\n    \"ut\",\n    \"ve\",\n    \"vi\",\n    \"we\",\n    \"yo\",\n    \"_\",\n    \"-\",\n    \",\",\n    \"?\",\n    \".\",\n    \"*\",\n    \"/\",\n    \"^\",\n    \"=\",\n    \"|\",\n    \"~\",\n    \"$\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\"\n];\n//# sourceMappingURL=raw-network.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* eslint-disable prettier/prettier */\nexport default [\n    \"-webkit-touch-callo\",\n    \", googlesyndication\",\n    \"position: initial !\",\n    \"set-local-storage-i\",\n    \"set, blurred, false\",\n    \"user-select: text !\",\n    \"decodeURIComponent\",\n    \"[href^=\\\"https://\",\n    \"rmnt, script, \",\n    \"ut: default !\",\n    \" !important)\",\n    \"trusted-set-\",\n    \", document.\",\n    \", noopFunc)\",\n    \"##body,html\",\n    \"contextmenu\",\n    \"no-fetch-if\",\n    \"otification\",\n    \":has-text(\",\n    \".com##+js(\",\n    \"=\\\"https://\",\n    \"background\",\n    \"important;\",\n    \" -webkit-\",\n    \"container\",\n    \": auto !\",\n    \"AAAAAAAA\",\n    \"nostif, \",\n    \",google\",\n    \":style(\",\n    \"consent\",\n    \"message\",\n    \"nowoif)\",\n    \"privacy\",\n    \"-wrapp\",\n    \",kayak\",\n    \".co.uk\",\n    \"[class\",\n    \"##+js(\",\n    \"accept\",\n    \"aopr, \",\n    \"banner\",\n    \"bottom\",\n    \"cookie\",\n    \"Cookie\",\n    \"notice\",\n    \"policy\",\n    \"widget\",\n    \":has(\",\n    \"##div\",\n    \"block\",\n    \"cript\",\n    \"true)\",\n    \".co.\",\n    \".com\",\n    \".de,\",\n    \".fr,\",\n    \".net\",\n    \".nl,\",\n    \".pl,\",\n    \".xyz\",\n    \"#@#.\",\n    \"2%3A\",\n    \"gdpr\",\n    \"goog\",\n    \"html\",\n    \"ight\",\n    \"news\",\n    \"wrap\",\n    \" > \",\n    \",xh\",\n    \"##.\",\n    \"###\",\n    \"%3D\",\n    \"%7C\",\n    \"ent\",\n    \"lay\",\n    \"web\",\n    \"xxx\",\n    \"__\",\n    \"-s\",\n    \", \",\n    \",b\",\n    \",c\",\n    \",f\",\n    \",g\",\n    \",h\",\n    \",m\",\n    \",p\",\n    \",s\",\n    \",t\",\n    \": \",\n    \".*\",\n    \".b\",\n    \".c\",\n    \".m\",\n    \".p\",\n    \".s\",\n    \"\\\"]\",\n    \"##\",\n    \"%2\",\n    \"%5\",\n    \"=\\\"\",\n    \"00\",\n    \"a-\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"Ad\",\n    \"af\",\n    \"ag\",\n    \"ak\",\n    \"al\",\n    \"am\",\n    \"an\",\n    \"ap\",\n    \"ar\",\n    \"as\",\n    \"at\",\n    \"au\",\n    \"av\",\n    \"ay\",\n    \"az\",\n    \"bo\",\n    \"ch\",\n    \"ck\",\n    \"cl\",\n    \"ct\",\n    \"de\",\n    \"di\",\n    \"do\",\n    \"e-\",\n    \"ed\",\n    \"el\",\n    \"em\",\n    \"en\",\n    \"er\",\n    \"es\",\n    \"et\",\n    \"ew\",\n    \"ex\",\n    \"fi\",\n    \"fo\",\n    \"gr\",\n    \"he\",\n    \"ic\",\n    \"id\",\n    \"if\",\n    \"ig\",\n    \"il\",\n    \"im\",\n    \"in\",\n    \"is\",\n    \"it\",\n    \"iv\",\n    \"le\",\n    \"lo\",\n    \"mo\",\n    \"ol\",\n    \"om\",\n    \"on\",\n    \"op\",\n    \"or\",\n    \"ot\",\n    \"ov\",\n    \"ow\",\n    \"pl\",\n    \"po\",\n    \"re\",\n    \"ro\",\n    \"s_\",\n    \"s-\",\n    \"se\",\n    \"sh\",\n    \"si\",\n    \"sp\",\n    \"st\",\n    \"t-\",\n    \"th\",\n    \"ti\",\n    \"tr\",\n    \"tv\",\n    \"ub\",\n    \"ul\",\n    \"um\",\n    \"un\",\n    \"up\",\n    \"ur\",\n    \"us\",\n    \"ut\",\n    \"vi\",\n    \" \",\n    \"_\",\n    \"-\",\n    \",\",\n    \";\",\n    \":\",\n    \".\",\n    \"(\",\n    \")\",\n    \"[\",\n    \"*\",\n    \"/\",\n    \"^\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"a\",\n    \"b\",\n    \"B\",\n    \"c\",\n    \"C\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"E\",\n    \"f\",\n    \"F\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"I\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"L\",\n    \"m\",\n    \"M\",\n    \"n\",\n    \"N\",\n    \"o\",\n    \"O\",\n    \"p\",\n    \"P\",\n    \"q\",\n    \"r\",\n    \"R\",\n    \"s\",\n    \"S\",\n    \"t\",\n    \"T\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\"\n];\n//# sourceMappingURL=raw-cosmetic.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { Smaz } from '@remusao/smaz';\nimport cosmeticSelectorCodebook from './codebooks/cosmetic-selector.js';\nimport networkCSPCodebook from './codebooks/network-csp.js';\nimport networkFilterCodebook from './codebooks/network-filter.js';\nimport networkHostnameCodebook from './codebooks/network-hostname.js';\nimport networkRedirectCodebook from './codebooks/network-redirect.js';\nimport networkRawCodebook from './codebooks/raw-network.js';\nimport cosmeticRawCodebook from './codebooks/raw-cosmetic.js';\nexport default class Compression {\n    constructor() {\n        this.cosmeticSelector = new Smaz(cosmeticSelectorCodebook);\n        this.networkCSP = new Smaz(networkCSPCodebook);\n        this.networkRedirect = new Smaz(networkRedirectCodebook);\n        this.networkHostname = new Smaz(networkHostnameCodebook);\n        this.networkFilter = new Smaz(networkFilterCodebook);\n        this.networkRaw = new Smaz(networkRawCodebook);\n        this.cosmeticRaw = new Smaz(cosmeticRawCodebook);\n    }\n}\n//# sourceMappingURL=compression.js.map","/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* From: https://github.com/SheetJS/js-crc32/ */\nconst T = (() => {\n    let c = 0;\n    const table = new Int32Array(256);\n    for (let n = 0; n !== 256; n += 1) {\n        c = n;\n        c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n        c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n        c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n        c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n        c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n        c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n        c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n        c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n        table[n] = c;\n    }\n    return table;\n})();\nexport default function crc32(buf, start, end) {\n    let C = 0 ^ -1;\n    const L = end - 7;\n    let i = start;\n    while (i < L) {\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    }\n    while (i < L + 7) {\n        C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    }\n    return (C ^ -1) >>> 0;\n}\n//# sourceMappingURL=crc32.js.map","/*!\n * Copyright Mathias Bynens <https://mathiasbynens.be/>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n/** Regular expressions */\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nconst errors = {\n    'invalid-input': 'Invalid input',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'overflow': 'Overflow: input needs wider integers to process',\n};\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\n/*--------------------------------------------------------------------------*/\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n    throw new RangeError(errors[type]);\n}\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(str) {\n    const output = [];\n    let counter = 0;\n    const length = str.length;\n    while (counter < length) {\n        const value = str.charCodeAt(counter++);\n        if (value >= 0xd800 && value <= 0xdbff && counter < length) {\n            // It's a high surrogate, and there is a next character.\n            const extra = str.charCodeAt(counter++);\n            if ((extra & 0xfc00) === 0xdc00) {\n                // Low surrogate.\n                output.push(((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\n            }\n            else {\n                // It's an unmatched surrogate; only append this code unit, in case the\n                // next code unit is the high surrogate of a surrogate pair.\n                output.push(value);\n                counter--;\n            }\n        }\n        else {\n            output.push(value);\n        }\n    }\n    return output;\n}\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint) {\n    if (codePoint - 0x30 < 0x0a) {\n        return codePoint - 0x16;\n    }\n    if (codePoint - 0x41 < 0x1a) {\n        return codePoint - 0x41;\n    }\n    if (codePoint - 0x61 < 0x1a) {\n        return codePoint - 0x61;\n    }\n    return base;\n}\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26 ? 1 : 0) - ((flag !== 0 ? 1 : 0) << 5);\n}\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n    let k = 0;\n    delta = firstTime ? Math.floor(delta / damp) : delta >> 1;\n    delta += Math.floor(delta / numPoints);\n    for (; /* no initialization */ delta > (baseMinusTMin * tMax) >> 1; k += base) {\n        delta = Math.floor(delta / baseMinusTMin);\n    }\n    return Math.floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew));\n}\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input) {\n    // Don't use UCS-2.\n    const output = [];\n    const inputLength = input.length;\n    let i = 0;\n    let n = initialN;\n    let bias = initialBias;\n    // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n    let basic = input.lastIndexOf(delimiter);\n    if (basic < 0) {\n        basic = 0;\n    }\n    for (let j = 0; j < basic; ++j) {\n        // if it's not a basic code point\n        if (input.charCodeAt(j) >= 0x80) {\n            error('not-basic');\n        }\n        output.push(input.charCodeAt(j));\n    }\n    // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n    for (let index = basic > 0 ? basic + 1 : 0; index < inputLength /* no final expression */;) {\n        // `index` is the index of the next character to be consumed.\n        // Decode a generalized variable-length integer into `delta`,\n        // which gets added to `i`. The overflow checking is easier\n        // if we increase `i` as we go, then subtract off its starting\n        // value at the end to obtain `delta`.\n        const oldi = i;\n        for (let w = 1, k = base /* no condition */;; k += base) {\n            if (index >= inputLength) {\n                error('invalid-input');\n            }\n            const digit = basicToDigit(input.charCodeAt(index++));\n            if (digit >= base || digit > Math.floor((maxInt - i) / w)) {\n                error('overflow');\n            }\n            i += digit * w;\n            const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n            if (digit < t) {\n                break;\n            }\n            const baseMinusT = base - t;\n            if (w > Math.floor(maxInt / baseMinusT)) {\n                error('overflow');\n            }\n            w *= baseMinusT;\n        }\n        const out = output.length + 1;\n        bias = adapt(i - oldi, out, oldi === 0);\n        // `i` was supposed to wrap around from `out` to `0`,\n        // incrementing `n` each time, so we'll fix that now:\n        if (Math.floor(i / out) > maxInt - n) {\n            error('overflow');\n        }\n        n += Math.floor(i / out);\n        i %= out;\n        // Insert `n` at position `i` of the output.\n        output.splice(i++, 0, n);\n    }\n    return String.fromCodePoint.apply(null, output);\n}\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(str) {\n    const output = [];\n    // Convert the input in UCS-2 to an array of Unicode code points.\n    const input = ucs2decode(str);\n    // Cache the length.\n    const inputLength = input.length;\n    // Initialize the state.\n    let n = initialN;\n    let delta = 0;\n    let bias = initialBias;\n    // Handle the basic code points.\n    for (let i = 0; i < input.length; i += 1) {\n        const currentValue = input[i];\n        if (currentValue < 0x80) {\n            output.push(String.fromCharCode(currentValue));\n        }\n    }\n    const basicLength = output.length;\n    let handledCPCount = basicLength;\n    // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string with a delimiter unless it's empty.\n    if (basicLength) {\n        output.push(delimiter);\n    }\n    // Main encoding loop:\n    while (handledCPCount < inputLength) {\n        // All non-basic code points < n have been handled already. Find the next\n        // larger one:\n        let m = maxInt;\n        for (let i = 0; i < input.length; i += 1) {\n            const currentValue = input[i];\n            if (currentValue >= n && currentValue < m) {\n                m = currentValue;\n            }\n        }\n        // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n        // but guard against overflow.\n        const handledCPCountPlusOne = handledCPCount + 1;\n        if (m - n > Math.floor((maxInt - delta) / handledCPCountPlusOne)) {\n            error('overflow');\n        }\n        delta += (m - n) * handledCPCountPlusOne;\n        n = m;\n        for (let i = 0; i < input.length; i += 1) {\n            const currentValue = input[i];\n            if (currentValue < n && ++delta > maxInt) {\n                error('overflow');\n            }\n            if (currentValue === n) {\n                // Represent delta as a generalized variable-length integer.\n                let q = delta;\n                for (let k = base /* no condition */;; k += base) {\n                    const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n                    if (q < t) {\n                        break;\n                    }\n                    const qMinusT = q - t;\n                    const baseMinusT = base - t;\n                    output.push(String.fromCharCode(digitToBasic(t + (qMinusT % baseMinusT), 0)));\n                    q = Math.floor(qMinusT / baseMinusT);\n                }\n                output.push(String.fromCharCode(digitToBasic(q, 0)));\n                bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n                delta = 0;\n                ++handledCPCount;\n            }\n        }\n        ++delta;\n        ++n;\n    }\n    return output.join('');\n}\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input) {\n    const labels = input.replace(regexSeparators, '\\x2E').split('.');\n    const encoded = [];\n    for (let i = 0; i < labels.length; i += 1) {\n        encoded.push(labels[i].startsWith('xn--') ? decode(labels[i].slice(4).toLowerCase()) : labels[i]);\n    }\n    return encoded.join('.');\n}\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input) {\n    // Avoid `split(regex)` for IE8 compatibility. See #17.\n    const labels = input.replace(regexSeparators, '\\x2E').split('.');\n    const encoded = [];\n    for (let i = 0; i < labels.length; i += 1) {\n        encoded.push(regexNonASCII.test(labels[i]) ? 'xn--' + encode(labels[i]) : labels[i]);\n    }\n    return encoded.join('.');\n}\n/**\n * A string representing the current Punycode.js version number.\n * @memberOf punycode\n * @type String\n */\nexport const version = '2.1.0';\n//# sourceMappingURL=punycode.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport Compression from './compression.js';\nimport crc32 from './crc32.js';\nimport { decode, encode } from './punycode.js';\nexport const EMPTY_UINT8_ARRAY = new Uint8Array(0);\nexport const EMPTY_UINT32_ARRAY = new Uint32Array(0);\n// Check if current architecture is little endian\nconst LITTLE_ENDIAN = new Int8Array(new Int16Array([1]).buffer)[0] === 1;\n// Store compression in a lazy, global singleton\nlet getCompressionSingleton = () => {\n    const COMPRESSION = new Compression();\n    getCompressionSingleton = () => COMPRESSION;\n    return COMPRESSION;\n};\nfunction align4(pos) {\n    // From: https://stackoverflow.com/a/2022194\n    return (pos + 3) & ~0x03;\n}\n/**\n * Return size of of a serialized byte value.\n */\nexport function sizeOfByte() {\n    return 1;\n}\n/**\n * Return size of of a serialized boolean value.\n */\nexport function sizeOfBool() {\n    return 1;\n}\n/**\n * Return number of bytes needed to serialize `length`.\n */\nexport function sizeOfLength(length) {\n    return length <= 127 ? 1 : 5;\n}\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytes(array, align) {\n    return sizeOfBytesWithLength(array.length, align);\n}\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytesWithLength(length, align) {\n    // Alignment is a tricky thing because it depends on the current offset in\n    // the buffer at the time of serialization; which we cannot anticipate\n    // before actually starting serialization. This means that we need to\n    // potentially over-estimate the size (at most by 3 bytes) to make sure the\n    // final size is at least equal or a bit bigger than necessary.\n    return (align ? 3 : 0) + length + sizeOfLength(length);\n}\n/**\n * Return number of bytes needed to serialize `str` ASCII string.\n */\nexport function sizeOfASCII(str) {\n    return str.length + sizeOfLength(str.length);\n}\n/**\n * Return number of bytes needed to serialize `str` UTF8 string.\n */\nexport function sizeOfUTF8(str) {\n    const encodedLength = encode(str).length;\n    return encodedLength + sizeOfLength(encodedLength);\n}\n/**\n * Return number of bytes needed to serialize `array`.\n */\nexport function sizeOfUint32Array(array) {\n    return array.byteLength + sizeOfLength(array.length);\n}\nexport function sizeOfNetworkRedirect(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkRedirect.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfNetworkHostname(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkHostname.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfNetworkCSP(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkCSP.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfNetworkFilter(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkFilter.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfCosmeticSelector(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().cosmeticSelector.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfRawNetwork(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkRaw.getCompressedSize(encode(str)), false)\n        : sizeOfUTF8(str);\n}\nexport function sizeOfRawCosmetic(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().cosmeticRaw.getCompressedSize(encode(str)), false)\n        : sizeOfUTF8(str);\n}\n/**\n * This abstraction allows to serialize efficiently low-level values of types:\n * string, uint8, uint16, uint32, etc. while hiding the complexity of managing\n * the current offset and growing. It should always be instantiated with a\n * big-enough length because this will not allow for resizing. To allow\n * deciding the required total size, function estimating the size needed to\n * store different primitive values are exposes as static methods.\n *\n * This class is also more efficient than the built-in `DataView`.\n *\n * The way this is used in practice is that you write pairs of function to\n * serialize and deserialize a given structure/class (with code being pretty\n * symetrical). In the serializer you `pushX` values, and in the deserializer\n * you use `getX` functions to get back the values.\n */\nexport class StaticDataView {\n    /**\n     * Create an empty (i.e.: size = 0) StaticDataView.\n     */\n    static empty(options) {\n        return StaticDataView.fromUint8Array(EMPTY_UINT8_ARRAY, options);\n    }\n    /**\n     * Instantiate a StaticDataView instance from `array` of type Uint8Array.\n     */\n    static fromUint8Array(array, options) {\n        return new StaticDataView(array, options);\n    }\n    /**\n     * Instantiate a StaticDataView with given `capacity` number of bytes.\n     */\n    static allocate(capacity, options) {\n        return new StaticDataView(new Uint8Array(capacity), options);\n    }\n    constructor(buffer, { enableCompression }) {\n        if (LITTLE_ENDIAN === false) {\n            // This check makes sure that we will not load the adblocker on a\n            // big-endian system. This would not work since byte ordering is important\n            // at the moment (mainly for performance reasons).\n            throw new Error('Adblocker currently does not support Big-endian systems');\n        }\n        if (enableCompression === true) {\n            this.enableCompression();\n        }\n        this.buffer = buffer;\n        this.pos = 0;\n    }\n    enableCompression() {\n        this.compression = getCompressionSingleton();\n    }\n    checksum() {\n        return crc32(this.buffer, 0, this.pos);\n    }\n    dataAvailable() {\n        return this.pos < this.buffer.byteLength;\n    }\n    setPos(pos) {\n        this.pos = pos;\n    }\n    getPos() {\n        return this.pos;\n    }\n    seekZero() {\n        this.pos = 0;\n    }\n    slice() {\n        this.checkSize();\n        return this.buffer.slice(0, this.pos);\n    }\n    subarray() {\n        if (this.pos === this.buffer.byteLength) {\n            return this.buffer;\n        }\n        this.checkSize();\n        return this.buffer.subarray(0, this.pos);\n    }\n    /**\n     * Make sure that `this.pos` is aligned on a multiple of 4.\n     */\n    align4() {\n        this.pos = align4(this.pos);\n    }\n    set(buffer) {\n        this.buffer = new Uint8Array(buffer);\n        this.seekZero();\n    }\n    pushBool(bool) {\n        this.pushByte(Number(bool));\n    }\n    getBool() {\n        return Boolean(this.getByte());\n    }\n    setByte(pos, byte) {\n        this.buffer[pos] = byte;\n    }\n    pushByte(octet) {\n        this.pushUint8(octet);\n    }\n    getByte() {\n        return this.getUint8();\n    }\n    pushBytes(bytes, align = false) {\n        this.pushLength(bytes.length);\n        if (align === true) {\n            this.align4();\n        }\n        this.buffer.set(bytes, this.pos);\n        this.pos += bytes.byteLength;\n    }\n    getBytes(align = false) {\n        const numberOfBytes = this.getLength();\n        if (align === true) {\n            this.align4();\n        }\n        const bytes = this.buffer.subarray(this.pos, this.pos + numberOfBytes);\n        this.pos += numberOfBytes;\n        return bytes;\n    }\n    /**\n     * Allows row access to the internal buffer through a Uint32Array acting like\n     * a view. This is used for super fast writing/reading of large chunks of\n     * Uint32 numbers in the byte array.\n     */\n    getUint32ArrayView(desiredSize) {\n        // Round this.pos to next multiple of 4 for alignement\n        this.align4();\n        // Short-cut when empty array\n        if (desiredSize === 0) {\n            return EMPTY_UINT32_ARRAY;\n        }\n        // Create non-empty view\n        const view = new Uint32Array(this.buffer.buffer, this.pos + this.buffer.byteOffset, desiredSize);\n        this.pos += desiredSize * 4;\n        return view;\n    }\n    pushUint8(uint8) {\n        this.buffer[this.pos++] = uint8;\n    }\n    getUint8() {\n        return this.buffer[this.pos++];\n    }\n    pushUint16(uint16) {\n        this.buffer[this.pos++] = uint16 >>> 8;\n        this.buffer[this.pos++] = uint16;\n    }\n    getUint16() {\n        return ((this.buffer[this.pos++] << 8) | this.buffer[this.pos++]) >>> 0;\n    }\n    pushUint32(uint32) {\n        this.buffer[this.pos++] = uint32 >>> 24;\n        this.buffer[this.pos++] = uint32 >>> 16;\n        this.buffer[this.pos++] = uint32 >>> 8;\n        this.buffer[this.pos++] = uint32;\n    }\n    getUint32() {\n        return ((((this.buffer[this.pos++] << 24) >>> 0) +\n            ((this.buffer[this.pos++] << 16) |\n                (this.buffer[this.pos++] << 8) |\n                this.buffer[this.pos++])) >>>\n            0);\n    }\n    pushUint32Array(arr) {\n        this.pushLength(arr.length);\n        // TODO - use `set` to push the full buffer at once?\n        for (const n of arr) {\n            this.pushUint32(n);\n        }\n    }\n    getUint32Array() {\n        const length = this.getLength();\n        const arr = new Uint32Array(length);\n        // TODO - use `subarray`?\n        for (let i = 0; i < length; i += 1) {\n            arr[i] = this.getUint32();\n        }\n        return arr;\n    }\n    pushUTF8(raw) {\n        const str = encode(raw);\n        this.pushLength(str.length);\n        for (let i = 0; i < str.length; i += 1) {\n            this.buffer[this.pos++] = str.charCodeAt(i);\n        }\n    }\n    getUTF8() {\n        const byteLength = this.getLength();\n        this.pos += byteLength;\n        return decode(String.fromCharCode.apply(null, \n        // @ts-ignore\n        this.buffer.subarray(this.pos - byteLength, this.pos)));\n    }\n    pushASCII(str) {\n        this.pushLength(str.length);\n        for (let i = 0; i < str.length; i += 1) {\n            this.buffer[this.pos++] = str.charCodeAt(i);\n        }\n    }\n    getASCII() {\n        const byteLength = this.getLength();\n        this.pos += byteLength;\n        // @ts-ignore\n        return String.fromCharCode.apply(null, this.buffer.subarray(this.pos - byteLength, this.pos));\n    }\n    pushNetworkRedirect(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkRedirect.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getNetworkRedirect() {\n        if (this.compression !== undefined) {\n            return this.compression.networkRedirect.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushNetworkHostname(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkHostname.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getNetworkHostname() {\n        if (this.compression !== undefined) {\n            return this.compression.networkHostname.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushNetworkCSP(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkCSP.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getNetworkCSP() {\n        if (this.compression !== undefined) {\n            return this.compression.networkCSP.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushNetworkFilter(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkFilter.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getNetworkFilter() {\n        if (this.compression !== undefined) {\n            return this.compression.networkFilter.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushCosmeticSelector(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.cosmeticSelector.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getCosmeticSelector() {\n        if (this.compression !== undefined) {\n            return this.compression.cosmeticSelector.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushRawCosmetic(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.cosmeticRaw.compress(encode(str)));\n        }\n        else {\n            this.pushUTF8(str);\n        }\n    }\n    getRawCosmetic() {\n        if (this.compression !== undefined) {\n            return decode(this.compression.cosmeticRaw.decompress(this.getBytes()));\n        }\n        return this.getUTF8();\n    }\n    pushRawNetwork(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkRaw.compress(encode(str)));\n        }\n        else {\n            this.pushUTF8(str);\n        }\n    }\n    getRawNetwork() {\n        if (this.compression !== undefined) {\n            return decode(this.compression.networkRaw.decompress(this.getBytes()));\n        }\n        return this.getUTF8();\n    }\n    checkSize() {\n        if (this.pos !== 0 && this.pos > this.buffer.byteLength) {\n            throw new Error(`StaticDataView too small: ${this.buffer.byteLength}, but required ${this.pos} bytes`);\n        }\n    }\n    // Serialiez `length` with variable encoding to save space\n    pushLength(length) {\n        if (length <= 127) {\n            this.pushUint8(length);\n        }\n        else {\n            this.pushUint8(128);\n            this.pushUint32(length);\n        }\n    }\n    getLength() {\n        const lengthShort = this.getUint8();\n        return lengthShort === 128 ? this.getUint32() : lengthShort;\n    }\n}\n//# sourceMappingURL=data-view.js.map","/**\n * The MIT License (MIT)\n *\n * Copyright (c) Feross Aboukhadijeh\n *\n * Originally from: https://github.com/feross/queue-microtask\n */\nlet promise;\nexport const queueMicrotask = typeof window !== 'undefined' && typeof window.queueMicrotask === 'function'\n    ? (cb) => window.queueMicrotask(cb)\n    : // reuse resolved promise, and allocate it lazily\n        (cb) => (promise || (promise = Promise.resolve())).then(cb).catch((err) => setTimeout(() => {\n            throw err;\n        }, 0));\n//# sourceMappingURL=queue-microtask.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { sizeOfBool } from './data-view.js';\nexport default class Config {\n    static deserialize(buffer) {\n        return new Config({\n            debug: buffer.getBool(),\n            enableCompression: buffer.getBool(),\n            enableHtmlFiltering: buffer.getBool(),\n            enableInMemoryCache: buffer.getBool(),\n            enableMutationObserver: buffer.getBool(),\n            enableOptimizations: buffer.getBool(),\n            enablePushInjectionsOnNavigationEvents: buffer.getBool(),\n            guessRequestTypeFromUrl: buffer.getBool(),\n            integrityCheck: buffer.getBool(),\n            loadCSPFilters: buffer.getBool(),\n            loadCosmeticFilters: buffer.getBool(),\n            loadExceptionFilters: buffer.getBool(),\n            loadExtendedSelectors: buffer.getBool(),\n            loadGenericCosmeticsFilters: buffer.getBool(),\n            loadNetworkFilters: buffer.getBool(),\n            loadPreprocessors: buffer.getBool(),\n        });\n    }\n    constructor({ debug = false, enableCompression = false, enableHtmlFiltering = false, enableInMemoryCache = true, enableMutationObserver = true, enableOptimizations = true, enablePushInjectionsOnNavigationEvents = true, guessRequestTypeFromUrl = false, integrityCheck = true, loadCSPFilters = true, loadCosmeticFilters = true, loadExceptionFilters = true, loadExtendedSelectors = false, loadGenericCosmeticsFilters = true, loadNetworkFilters = true, loadPreprocessors = false, } = {}) {\n        this.debug = debug;\n        this.enableCompression = enableCompression;\n        this.enableHtmlFiltering = enableHtmlFiltering;\n        this.enableInMemoryCache = enableInMemoryCache;\n        this.enableMutationObserver = enableMutationObserver;\n        this.enableOptimizations = enableOptimizations;\n        this.enablePushInjectionsOnNavigationEvents = enablePushInjectionsOnNavigationEvents;\n        this.guessRequestTypeFromUrl = guessRequestTypeFromUrl;\n        this.integrityCheck = integrityCheck;\n        this.loadCSPFilters = loadCSPFilters;\n        this.loadCosmeticFilters = loadCosmeticFilters;\n        this.loadExceptionFilters = loadExceptionFilters;\n        this.loadExtendedSelectors = loadExtendedSelectors;\n        this.loadGenericCosmeticsFilters = loadGenericCosmeticsFilters;\n        this.loadNetworkFilters = loadNetworkFilters;\n        this.loadPreprocessors = loadPreprocessors;\n    }\n    getSerializedSize() {\n        // NOTE: this should always be the number of attributes and needs to be\n        // updated when `Config` changes.\n        return 16 * sizeOfBool();\n    }\n    serialize(buffer) {\n        buffer.pushBool(this.debug);\n        buffer.pushBool(this.enableCompression);\n        buffer.pushBool(this.enableHtmlFiltering);\n        buffer.pushBool(this.enableInMemoryCache);\n        buffer.pushBool(this.enableMutationObserver);\n        buffer.pushBool(this.enableOptimizations);\n        buffer.pushBool(this.enablePushInjectionsOnNavigationEvents);\n        buffer.pushBool(this.guessRequestTypeFromUrl);\n        buffer.pushBool(this.integrityCheck);\n        buffer.pushBool(this.loadCSPFilters);\n        buffer.pushBool(this.loadCosmeticFilters);\n        buffer.pushBool(this.loadExceptionFilters);\n        buffer.pushBool(this.loadExtendedSelectors);\n        buffer.pushBool(this.loadGenericCosmeticsFilters);\n        buffer.pushBool(this.loadNetworkFilters);\n        buffer.pushBool(this.loadPreprocessors);\n    }\n}\n//# sourceMappingURL=config.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { queueMicrotask } from './queue-microtask.js';\n/**\n * Add `callback` listener for `event` in `listeners` Map.\n */\nfunction registerCallback(event, callback, listeners) {\n    let listenersForEvent = listeners.get(event);\n    if (listenersForEvent === undefined) {\n        listenersForEvent = [];\n        listeners.set(event, listenersForEvent);\n    }\n    listenersForEvent.push(callback);\n}\n/**\n * Remove `callback` listener for `event` from `listeners` Map.\n */\nfunction unregisterCallback(event, callback, listeners) {\n    const listenersForEvent = listeners.get(event);\n    if (listenersForEvent !== undefined) {\n        const indexOfCallback = listenersForEvent.indexOf(callback);\n        if (indexOfCallback !== -1) {\n            listenersForEvent.splice(indexOfCallback, 1);\n        }\n    }\n}\n/**\n * Call all registered listeners for `event` with `args` as arguments. Return\n * `true` if at least one callback was registered and `false` otherwise.\n */\nfunction triggerCallback(event, args, listeners) {\n    // Fast-path for cases where no listener is registered\n    if (listeners.size === 0) {\n        return false;\n    }\n    const listenersForEvent = listeners.get(event);\n    if (listenersForEvent !== undefined) {\n        queueMicrotask(() => {\n            for (const listener of listenersForEvent) {\n                listener(...args);\n            }\n        });\n        return true;\n    }\n    return false;\n}\n/**\n * Simple and efficient `EventEmitter` abstraction (following conventions from\n * Node.js) allowing partially typed event emitting. The set of event names is\n * specified as a type parameter while instantiating the event emitter.\n */\nexport class EventEmitter {\n    constructor() {\n        this.onceListeners = new Map();\n        this.onListeners = new Map();\n    }\n    /**\n     * Register an event listener for `event`.\n     */\n    on(event, callback) {\n        registerCallback(event, callback, this.onListeners);\n    }\n    /**\n     * Register an event listener for `event`; but only listen to first instance\n     * of this event. The listener is automatically deleted afterwards.\n     */\n    once(event, callback) {\n        registerCallback(event, callback, this.onceListeners);\n    }\n    /**\n     * Remove `callback` from list of listeners for `event`.\n     */\n    unsubscribe(event, callback) {\n        unregisterCallback(event, callback, this.onListeners);\n        unregisterCallback(event, callback, this.onceListeners);\n    }\n    /**\n     * Emit an event. Call all registered listeners to this event.\n     */\n    emit(event, ...args) {\n        triggerCallback(event, args, this.onListeners);\n        if (triggerCallback(event, args, this.onceListeners) === true) {\n            this.onceListeners.delete(event);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/**\n * Built-in fetch helpers can be used to initialize the adblocker from\n * pre-built presets or raw lists (fetched from multiple sources). In case of\n * failure (e.g. timeout), the whole process of initialization fails. Timeouts\n * are not so uncommon, and retrying to fetch usually succeeds.\n */\nexport function fetchWithRetry(fetch, url) {\n    let retry = 3;\n    // Wrap `fetch` into a lightweight retry function which makes sure that if\n    // fetching fails, it can be retried up to three times. Failure can happen if\n    // the remote server times-out, but retrying fetching of the same URL will\n    // usually succeed.\n    const fetchWrapper = () => {\n        return fetch(url).catch((ex) => {\n            if (retry > 0) {\n                retry -= 1;\n                return new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        fetchWrapper().then(resolve).catch(reject);\n                    }, 500);\n                });\n            }\n            throw ex;\n        });\n    };\n    return fetchWrapper();\n}\nfunction fetchResource(fetch, url) {\n    return fetchWithRetry(fetch, url).then((response) => response.text());\n}\nconst PREFIX = 'https://raw.githubusercontent.com/ghostery/adblocker/master/packages/adblocker/assets';\nexport const adsLists = [\n    `${PREFIX}/easylist/easylist.txt`,\n    `${PREFIX}/peter-lowe/serverlist.txt`,\n    `${PREFIX}/ublock-origin/badware.txt`,\n    `${PREFIX}/ublock-origin/filters-2020.txt`,\n    `${PREFIX}/ublock-origin/filters-2021.txt`,\n    `${PREFIX}/ublock-origin/filters-2022.txt`,\n    `${PREFIX}/ublock-origin/filters-2023.txt`,\n    `${PREFIX}/ublock-origin/filters-2024.txt`,\n    `${PREFIX}/ublock-origin/filters.txt`,\n    `${PREFIX}/ublock-origin/quick-fixes.txt`,\n    `${PREFIX}/ublock-origin/resource-abuse.txt`,\n    `${PREFIX}/ublock-origin/unbreak.txt`,\n];\nexport const adsAndTrackingLists = [\n    ...adsLists,\n    `${PREFIX}/easylist/easyprivacy.txt`,\n    `${PREFIX}/ublock-origin/privacy.txt`,\n];\nexport const fullLists = [\n    ...adsAndTrackingLists,\n    `${PREFIX}/easylist/easylist-cookie.txt`,\n    `${PREFIX}/ublock-origin/annoyances-others.txt`,\n    `${PREFIX}/ublock-origin/annoyances-cookies.txt`,\n];\n/**\n * Fetch latest version of enabledByDefault blocking lists.\n */\nexport function fetchLists(fetch, urls) {\n    return Promise.all(urls.map((url) => fetchResource(fetch, url)));\n}\n/**\n * Fetch latest version of uBlock Origin's resources, used to inject scripts in\n * the page or redirect request to data URLs.\n */\nexport function fetchResources(fetch) {\n    return fetchResource(fetch, `${PREFIX}/ublock-origin/resources.txt`);\n}\n//# sourceMappingURL=fetch.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nclass HidingBuilder {\n}\nclass NetworkBuilder {\n    constructor() {\n        this.options = new Set();\n        this.prefix = undefined;\n        this.infix = undefined;\n        this.suffix = undefined;\n        this.redirect = undefined;\n    }\n    blockRequestsWithType(t) {\n        if (this.options.has(t)) {\n            throw new Error(`Already blocking type ${t}`);\n        }\n        this.options.add(t);\n        return this;\n    }\n    images() {\n        return this.blockRequestsWithType('image');\n    }\n    scripts() {\n        return this.blockRequestsWithType('script');\n    }\n    frames() {\n        return this.blockRequestsWithType('frame');\n    }\n    fonts() {\n        return this.blockRequestsWithType('font');\n    }\n    medias() {\n        return this.blockRequestsWithType('media');\n    }\n    styles() {\n        return this.blockRequestsWithType('css');\n    }\n    redirectTo(redirect) {\n        if (this.redirect !== undefined) {\n            throw new Error(`Already redirecting: ${this.redirect}`);\n        }\n        this.redirect = `redirect=${redirect}`;\n        return this;\n    }\n    urlContains(infix) {\n        if (this.infix !== undefined) {\n            throw new Error(`Already matching pattern: ${this.infix}`);\n        }\n        this.infix = infix;\n        return this;\n    }\n    urlStartsWith(prefix) {\n        if (this.prefix !== undefined) {\n            throw new Error(`Already matching prefix: ${this.prefix}`);\n        }\n        this.prefix = `|${prefix}`;\n        return this;\n    }\n    urlEndsWith(suffix) {\n        if (this.suffix !== undefined) {\n            throw new Error(`Already matching suffix: ${this.suffix}`);\n        }\n        this.suffix = `${suffix}|`;\n        return this;\n    }\n    withHostname(hostname) {\n        if (this.prefix !== undefined) {\n            throw new Error(`Cannot match hostname if filter already has prefix: ${this.prefix}`);\n        }\n        this.prefix = `||${hostname}^`;\n        return this;\n    }\n    toString() {\n        const parts = [];\n        if (this.prefix !== undefined) {\n            parts.push(this.prefix);\n        }\n        if (this.infix !== undefined) {\n            parts.push(this.infix);\n        }\n        if (this.suffix !== undefined) {\n            parts.push(this.suffix);\n        }\n        const options = ['important'];\n        if (this.options.size !== 0) {\n            for (const option of this.options) {\n                options.push(option);\n            }\n        }\n        if (this.redirect !== undefined) {\n            options.push(this.redirect);\n        }\n        return `${parts.length === 0 ? '*' : parts.join('*')}$${options.join(',')}`;\n    }\n}\nexport function block() {\n    return new NetworkBuilder();\n}\nexport function hide() {\n    return new HidingBuilder();\n}\n//# sourceMappingURL=dsl.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/**\n * Thin abstraction around a Uint32Array which allows to push tokens\n * whithout caring for the offset. It is used as a way to avoid multiple\n * allocations while calling tokenization (mostly beneficitial for\n * `NetworkFilter.getTokens()`).\n */\nexport class TokensBuffer {\n    constructor(size) {\n        this.pos = 0;\n        this.buffer = new Uint32Array(size);\n    }\n    reset() {\n        this.pos = 0;\n    }\n    slice() {\n        return this.buffer.slice(0, this.pos);\n    }\n    push(token) {\n        this.buffer[this.pos++] = token;\n    }\n    empty() {\n        return this.pos === 0;\n    }\n    full() {\n        return this.pos === this.buffer.length;\n    }\n    remaining() {\n        return this.buffer.length - this.pos;\n    }\n}\nexport const TOKENS_BUFFER = new TokensBuffer(1024);\n//# sourceMappingURL=tokens-buffer.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { TOKENS_BUFFER } from './tokens-buffer.js';\nexport const HASH_INTERNAL_MULT = 37;\nexport const HASH_SEED = 5011;\n/***************************************************************************\n *  Bitwise helpers\n * ************************************************************************* */\n// From: https://stackoverflow.com/a/43122214/1185079\nexport function bitCount(n) {\n    n = n - ((n >> 1) & 0x55555555);\n    n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n    return (((n + (n >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n}\nexport function getBit(n, mask) {\n    return !!(n & mask);\n}\nexport function setBit(n, mask) {\n    return n | mask;\n}\nexport function clearBit(n, mask) {\n    return n & ~mask;\n}\nexport function fastHashBetween(str, begin, end) {\n    let hash = HASH_SEED;\n    for (let i = begin; i < end; i += 1) {\n        hash = (hash * HASH_INTERNAL_MULT) ^ str.charCodeAt(i);\n    }\n    return hash >>> 0;\n}\nexport function fastHash(str) {\n    if (typeof str !== 'string') {\n        return HASH_SEED;\n    }\n    if (str.length === 0) {\n        return HASH_SEED;\n    }\n    return fastHashBetween(str, 0, str.length);\n}\nexport function hashStrings(strings) {\n    const result = new Uint32Array(strings.length);\n    let index = 0;\n    for (const str of strings) {\n        result[index++] = fastHash(str);\n    }\n    return result;\n}\n// https://jsperf.com/string-startswith/21\nexport function fastStartsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    const ceil = needle.length;\n    for (let i = 0; i < ceil; i += 1) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function fastStartsWithFrom(haystack, needle, start) {\n    if (haystack.length - start < needle.length) {\n        return false;\n    }\n    const ceil = start + needle.length;\n    for (let i = start; i < ceil; i += 1) {\n        if (haystack[i] !== needle[i - start]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isDigit(ch) {\n    // 48 == '0'\n    // 57 == '9'\n    return ch >= 48 && ch <= 57;\n}\nexport function isAlpha(ch) {\n    // 65 == 'A'\n    // 90 == 'Z'\n    // 97 == 'a'\n    // 122 === 'z'\n    return (ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90);\n}\nfunction isAlphaExtended(ch) {\n    // 192 -> 450\n    // À  Á  Â  Ã  Ä  Å  Æ  Ç  È  É  Ê  Ë  Ì  Í  Î  Ï  Ð  Ñ  Ò  Ó  Ô  Õ  Ö  ×  Ø\n    // Ù  Ú  Û  Ü  Ý  Þ  ß  à  á  â  ã  ä  å  æ  ç  è  é  ê  ë  ì  í  î  ï  ð  ñ\n    // ò  ó  ô  õ  ö  ÷  ø  ù  ú  û  ü  ý  þ  ÿ  Ā  ā  Ă  ă  Ą  ą  Ć  ć  Ĉ  ĉ  Ċ\n    // ċ  Č  č  Ď  ď  Đ  đ  Ē  ē  Ĕ  ĕ  Ė  ė  Ę  ę  Ě  ě  Ĝ  ĝ  Ğ  ğ  Ġ  ġ  Ģ  ģ\n    // Ĥ  ĥ  Ħ  ħ  Ĩ  ĩ  Ī  ī  Ĭ  ĭ  Į  į  İ  ı  Ĳ  ĳ  Ĵ  ĵ  Ķ  ķ  ĸ  Ĺ  ĺ  Ļ  ļ\n    // Ľ  ľ  Ŀ  ŀ  Ł  ł  Ń  ń  Ņ  ņ  Ň  ň  ŉ  Ŋ  ŋ  Ō  ō  Ŏ  ŏ  Ő  ő  Œ  œ  Ŕ  ŕ\n    // Ŗ  ŗ  Ř  ř  Ś  ś  Ŝ  ŝ  Ş  ş  Š  š  Ţ  ţ  Ť  ť  Ŧ  ŧ  Ũ  ũ  Ū  ū  Ŭ  ŭ  Ů\n    // ů  Ű  ű  Ų  ų  Ŵ  ŵ  Ŷ  ŷ  Ÿ  Ź  ź  Ż  ż  Ž  ž  ſ  ƀ  Ɓ  Ƃ  ƃ  Ƅ  ƅ  Ɔ  Ƈ\n    // ƈ  Ɖ  Ɗ  Ƌ  ƌ  ƍ  Ǝ  Ə  Ɛ  Ƒ  ƒ  Ɠ  Ɣ  ƕ  Ɩ  Ɨ  Ƙ  ƙ  ƚ  ƛ  Ɯ  Ɲ  ƞ  Ɵ  Ơ\n    // ơ  Ƣ  ƣ  Ƥ  ƥ  Ʀ  Ƨ  ƨ  Ʃ  ƪ  ƫ  Ƭ  ƭ  Ʈ  Ư  ư  Ʊ  Ʋ  Ƴ  ƴ  Ƶ  ƶ  Ʒ  Ƹ  ƹ\n    // ƺ  ƻ  Ƽ  ƽ  ƾ  ƿ  ǀ  ǁ  ǂ\n    return ch >= 192 && ch <= 450;\n}\nfunction isCyrillic(ch) {\n    // 1024 -> 1279\n    // Ѐ Ё Ђ Ѓ Є Ѕ І Ї Ј Љ Њ Ћ Ќ Ѝ Ў Џ А Б В Г Д Е Ж З И Й К Л М Н О П Р С Т У Ф Х\n    // Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы\n    // ь э ю я ѐ ё ђ ѓ є ѕ і ї ј љ њ ћ ќ ѝ ў џ Ѡ ѡ Ѣ ѣ Ѥ ѥ Ѧ ѧ Ѩ ѩ Ѫ ѫ Ѭ ѭ Ѯ ѯ\n    // Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ Ѹ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ Ҁ ҁ ҂ ҃ ҄ ҅ ҆ ҇ ҈ ҉ Ҋ ҋ Ҍ ҍ Ҏ ҏ Ґ ґ Ғ ғ Ҕ ҕ Җ җ Ҙ ҙ\n    // Қ қ Ҝ ҝ Ҟ ҟ Ҡ ҡ Ң ң Ҥ ҥ Ҧ ҧ Ҩ ҩ Ҫ ҫ Ҭ ҭ Ү ү Ұ ұ Ҳ ҳ Ҵ ҵ Ҷ ҷ Ҹ ҹ Һ һ Ҽ ҽ Ҿ\n    // ҿ Ӏ Ӂ ӂ Ӄ ӄ Ӆ ӆ Ӈ ӈ Ӊ ӊ Ӌ ӌ Ӎ ӎ ӏ Ӑ ӑ Ӓ ӓ Ӕ ӕ Ӗ ӗ Ә ә Ӛ ӛ Ӝ ӝ Ӟ ӟ Ӡ ӡ Ӣ ӣ Ӥ\n    // ӥ Ӧ ӧ Ө ө Ӫ ӫ Ӭ ӭ Ӯ ӯ Ӱ ӱ Ӳ ӳ Ӵ ӵ Ӷ ӷ Ӹ ӹ Ӻ ӻ Ӽ ӽ Ӿ ӿ\n    return ch >= 1024 && ch <= 1279;\n}\nfunction isAllowedCode(ch) {\n    return (isAlpha(ch) || isDigit(ch) || ch === 37 /* '%' */ || isAlphaExtended(ch) || isCyrillic(ch));\n}\nexport function tokenizeWithWildcardsInPlace(pattern, skipFirstToken, skipLastToken, buffer) {\n    // TODO maybe better to check if buffer is full?\n    // Otherwise we are under-using the space.\n    const len = Math.min(pattern.length, buffer.remaining() * 2);\n    let inside = false;\n    let precedingCh = 0;\n    let start = 0;\n    let hash = HASH_SEED;\n    for (let i = 0; i < len; i += 1) {\n        const ch = pattern.charCodeAt(i);\n        if (isAllowedCode(ch) === true) {\n            if (inside === false) {\n                hash = HASH_SEED;\n                inside = true;\n                start = i;\n            }\n            hash = (hash * HASH_INTERNAL_MULT) ^ ch;\n        }\n        else {\n            if (inside === true) {\n                inside = false;\n                if (i - start > 1 && // Ignore tokens of 1 character\n                    ch !== 42 && // Ignore tokens followed by a '*'\n                    precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n                    (skipFirstToken === false || start !== 0)) {\n                    buffer.push(hash >>> 0);\n                }\n            }\n            precedingCh = ch;\n        }\n    }\n    if (skipLastToken === false &&\n        inside === true &&\n        precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n        pattern.length - start > 1 && // Ignore tokens of 1 character\n        buffer.full() === false) {\n        buffer.push(hash >>> 0);\n    }\n}\nexport function tokenizeInPlace(pattern, skipFirstToken, skipLastToken, buffer) {\n    const len = Math.min(pattern.length, buffer.remaining() * 2);\n    let inside = false;\n    let start = 0;\n    let hash = HASH_SEED;\n    for (let i = 0; i < len; i += 1) {\n        const ch = pattern.charCodeAt(i);\n        if (isAllowedCode(ch) === true) {\n            if (inside === false) {\n                hash = HASH_SEED;\n                inside = true;\n                start = i;\n            }\n            hash = (hash * HASH_INTERNAL_MULT) ^ ch;\n        }\n        else if (inside === true) {\n            inside = false;\n            if (i - start > 1 && // Ignore tokens of 1 character\n                (skipFirstToken === false || start !== 0)) {\n                buffer.push(hash >>> 0);\n            }\n        }\n    }\n    if (inside === true &&\n        skipLastToken === false &&\n        pattern.length - start > 1 && // Ignore tokens of 1 character\n        buffer.full() === false) {\n        buffer.push(hash >>> 0);\n    }\n}\nexport function tokenizeNoSkipInPlace(pattern, buffer) {\n    const len = Math.min(pattern.length, buffer.remaining() * 2);\n    let inside = false;\n    let start = 0;\n    let hash = HASH_SEED;\n    for (let i = 0; i < len; i += 1) {\n        const ch = pattern.charCodeAt(i);\n        if (isAllowedCode(ch) === true) {\n            if (inside === false) {\n                hash = HASH_SEED;\n                inside = true;\n                start = i;\n            }\n            hash = (hash * HASH_INTERNAL_MULT) ^ ch;\n        }\n        else if (inside === true) {\n            inside = false;\n            if (i - start > 1) {\n                buffer.push(hash >>> 0);\n            }\n        }\n    }\n    if (inside === true && pattern.length - start > 1 && buffer.full() === false) {\n        buffer.push(hash >>> 0);\n    }\n}\nexport function tokenizeNoSkip(pattern) {\n    TOKENS_BUFFER.reset();\n    tokenizeNoSkipInPlace(pattern, TOKENS_BUFFER);\n    return TOKENS_BUFFER.slice();\n}\nexport function tokenizeWithWildcards(pattern, skipFirstToken, skipLastToken) {\n    TOKENS_BUFFER.reset();\n    tokenizeWithWildcardsInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n    return TOKENS_BUFFER.slice();\n}\nexport function tokenize(pattern, skipFirstToken, skipLastToken) {\n    TOKENS_BUFFER.reset();\n    tokenizeInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n    return TOKENS_BUFFER.slice();\n}\nexport function tokenizeRegexInPlace(selector, tokens) {\n    let end = selector.length - 1;\n    let begin = 1;\n    let prev = 0;\n    // Try to find the longest safe *prefix* that we can tokenize\n    for (; begin < end; begin += 1) {\n        const code = selector.charCodeAt(begin);\n        // If we encounter '|' before any other opening bracket, then it's not safe\n        // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n        // to be safe.\n        if (code === 124 /* '|' */) {\n            return;\n        }\n        if (code === 40 /* '(' */ ||\n            code === 42 /* '*' */ ||\n            code === 43 /* '+' */ ||\n            code === 63 /* '?' */ ||\n            code === 91 /* '[' */ ||\n            code === 123 /* '{' */ ||\n            (code === 46 /* '.' */ && prev !== 92) /* '\\' */ ||\n            (code === 92 /* '\\' */ && isAlpha(selector.charCodeAt(begin + 1)))) {\n            break;\n        }\n        prev = code;\n    }\n    // Try to find the longest safe *suffix* that we can tokenize\n    prev = 0;\n    for (; end >= begin; end -= 1) {\n        const code = selector.charCodeAt(end);\n        // If we encounter '|' before any other opening bracket, then it's not safe\n        // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n        // to be safe.\n        if (code === 124 /* '|' */) {\n            return;\n        }\n        if (code === 41 /* ')' */ ||\n            code === 42 /* '*' */ ||\n            code === 43 /* '+' */ ||\n            code === 63 /* '?' */ ||\n            code === 93 /* ']' */ ||\n            code === 125 /* '}' */ ||\n            (code === 46 /* '.' */ && selector.charCodeAt(end - 1) !== 92) /* '\\' */ ||\n            (code === 92 /* '\\' */ && isAlpha(prev))) {\n            break;\n        }\n        prev = code;\n    }\n    if (end < begin) {\n        // Full selector is safe\n        const skipFirstToken = selector.charCodeAt(1) !== 94; /* '^' */\n        const skipLastToken = selector.charCodeAt(selector.length - 1) !== 36; /* '$' */\n        tokenizeInPlace(selector.slice(1, selector.length - 1), skipFirstToken, skipLastToken, tokens);\n    }\n    else {\n        // Tokenize prefix\n        if (begin > 1) {\n            tokenizeInPlace(selector.slice(1, begin), selector.charCodeAt(1) !== 94 /* '^' */, // skipFirstToken\n            true, tokens);\n        }\n        // Tokenize suffix\n        if (end < selector.length - 1) {\n            tokenizeInPlace(selector.slice(end + 1, selector.length - 1), true, selector.charCodeAt(selector.length - 1) !== 94 /* '^' */, // skipLastToken\n            tokens);\n        }\n    }\n}\nexport function binSearch(arr, elt) {\n    if (arr.length === 0) {\n        return -1;\n    }\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        const mid = (low + high) >>> 1;\n        const midVal = arr[mid];\n        if (midVal < elt) {\n            low = mid + 1;\n        }\n        else if (midVal > elt) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -1;\n}\nexport function binLookup(arr, elt) {\n    return binSearch(arr, elt) !== -1;\n}\n// eslint-disable-next-line no-control-regex\nconst hasUnicodeRe = /[^\\u0000-\\u00ff]/;\nexport function hasUnicode(str) {\n    return hasUnicodeRe.test(str);\n}\n/**\n * Finds the last index of an unescaped character in the given string.\n * This function tries to find the match from the backward.\n * When this function sees an escaping character, it will jump to the next index.\n */\nexport function findLastIndexOfUnescapedCharacter(text, character) {\n    let lastIndex = text.lastIndexOf(character);\n    if (lastIndex === -1) {\n        return -1;\n    }\n    while (lastIndex > 0 && text.charCodeAt(lastIndex - 1) === 92 /* '\\\\' */) {\n        lastIndex = text.lastIndexOf(character, lastIndex - 1);\n    }\n    return lastIndex;\n}\n//# sourceMappingURL=utils.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport guessUrlType from '@remusao/guess-url-type';\nimport { parse } from 'tldts-experimental';\nimport { EMPTY_UINT32_ARRAY } from './data-view.js';\nimport { TOKENS_BUFFER } from './tokens-buffer.js';\nimport { fastHash, tokenizeNoSkipInPlace, HASH_SEED, HASH_INTERNAL_MULT } from './utils.js';\nconst TLDTS_OPTIONS = {\n    extractHostname: true,\n    mixedInputs: false,\n    validateHostname: false,\n};\nexport const NORMALIZED_TYPE_TOKEN = {\n    beacon: fastHash('type:beacon'),\n    cspReport: fastHash('type:csp'),\n    csp_report: fastHash('type:csp'),\n    cspviolationreport: fastHash('type:cspviolationreport'),\n    document: fastHash('type:document'),\n    eventsource: fastHash('type:other'),\n    fetch: fastHash('type:xhr'),\n    font: fastHash('type:font'),\n    image: fastHash('type:image'),\n    imageset: fastHash('type:image'),\n    mainFrame: fastHash('type:document'),\n    main_frame: fastHash('type:document'),\n    manifest: fastHash('type:other'),\n    media: fastHash('type:media'),\n    object: fastHash('type:object'),\n    object_subrequest: fastHash('type:object'),\n    other: fastHash('type:other'),\n    ping: fastHash('type:ping'),\n    prefetch: fastHash('type:other'),\n    preflight: fastHash('type:preflight'),\n    script: fastHash('type:script'),\n    signedexchange: fastHash('type:signedexchange'),\n    speculative: fastHash('type:other'),\n    stylesheet: fastHash('type:stylesheet'),\n    subFrame: fastHash('type:subdocument'),\n    sub_frame: fastHash('type:subdocument'),\n    texttrack: fastHash('type:other'),\n    webSocket: fastHash('type:websocket'),\n    web_manifest: fastHash('type:other'),\n    websocket: fastHash('type:websocket'),\n    xhr: fastHash('type:xhr'),\n    xml_dtd: fastHash('type:other'),\n    xmlhttprequest: fastHash('type:xhr'),\n    xslt: fastHash('type:other'),\n};\nexport function hashHostnameBackward(hostname) {\n    let hash = HASH_SEED;\n    for (let j = hostname.length - 1; j >= 0; j -= 1) {\n        hash = (hash * HASH_INTERNAL_MULT) ^ hostname.charCodeAt(j);\n    }\n    return hash >>> 0;\n}\nexport function getHashesFromLabelsBackward(hostname, end, startOfDomain) {\n    TOKENS_BUFFER.reset();\n    let hash = HASH_SEED;\n    // Compute hash backward, label per label\n    for (let i = end - 1; i >= 0; i -= 1) {\n        const code = hostname.charCodeAt(i);\n        // Process label\n        if (code === 46 /* '.' */ && i < startOfDomain) {\n            TOKENS_BUFFER.push(hash >>> 0);\n        }\n        // Update hash\n        hash = (hash * HASH_INTERNAL_MULT) ^ code;\n    }\n    TOKENS_BUFFER.push(hash >>> 0);\n    return TOKENS_BUFFER.slice();\n}\n/**\n * Given a hostname and its domain, return the hostname without the public\n * suffix. We know that the domain, with one less label on the left, will be a\n * the public suffix; and from there we know which trailing portion of\n * `hostname` we should remove.\n */\nexport function getHostnameWithoutPublicSuffix(hostname, domain) {\n    let hostnameWithoutPublicSuffix = null;\n    const indexOfDot = domain.indexOf('.');\n    if (indexOfDot !== -1) {\n        const publicSuffix = domain.slice(indexOfDot + 1);\n        hostnameWithoutPublicSuffix = hostname.slice(0, -publicSuffix.length - 1);\n    }\n    return hostnameWithoutPublicSuffix;\n}\nexport function getEntityHashesFromLabelsBackward(hostname, domain) {\n    const hostnameWithoutPublicSuffix = getHostnameWithoutPublicSuffix(hostname, domain);\n    if (hostnameWithoutPublicSuffix !== null) {\n        return getHashesFromLabelsBackward(hostnameWithoutPublicSuffix, hostnameWithoutPublicSuffix.length, hostnameWithoutPublicSuffix.length);\n    }\n    return EMPTY_UINT32_ARRAY;\n}\nexport function getHostnameHashesFromLabelsBackward(hostname, domain) {\n    return getHashesFromLabelsBackward(hostname, hostname.length, hostname.length - domain.length);\n}\nfunction isThirdParty(hostname, domain, sourceHostname, sourceDomain, type) {\n    if (type === 'main_frame' || type === 'mainFrame') {\n        return false;\n    }\n    else if (domain.length !== 0 && sourceDomain.length !== 0) {\n        return domain !== sourceDomain;\n    }\n    else if (domain.length !== 0 && sourceHostname.length !== 0) {\n        return domain !== sourceHostname;\n    }\n    else if (sourceDomain.length !== 0 && hostname.length !== 0) {\n        return hostname !== sourceDomain;\n    }\n    return false;\n}\nexport default class Request {\n    /**\n     * Create an instance of `Request` from raw request details.\n     */\n    static fromRawDetails({ requestId = '0', tabId = 0, url = '', hostname, domain, sourceUrl = '', sourceHostname, sourceDomain, type = 'main_frame', _originalRequestDetails, }) {\n        url = url.toLowerCase();\n        if (hostname === undefined || domain === undefined) {\n            const parsed = parse(url, TLDTS_OPTIONS);\n            hostname = hostname || parsed.hostname || '';\n            domain = domain || parsed.domain || '';\n        }\n        // Initialize source URL\n        if (sourceHostname === undefined || sourceDomain === undefined) {\n            const parsed = parse(sourceHostname || sourceDomain || sourceUrl, TLDTS_OPTIONS);\n            sourceHostname = sourceHostname || parsed.hostname || '';\n            sourceDomain = sourceDomain || parsed.domain || sourceHostname || '';\n        }\n        return new Request({\n            requestId,\n            tabId,\n            domain,\n            hostname,\n            url,\n            sourceDomain,\n            sourceHostname,\n            sourceUrl,\n            type,\n            _originalRequestDetails,\n        });\n    }\n    constructor({ requestId, tabId, type, domain, hostname, url, sourceDomain, sourceHostname, _originalRequestDetails, }) {\n        // Lazy attributes\n        this.tokens = undefined;\n        this.hostnameHashes = undefined;\n        this.entityHashes = undefined;\n        this._originalRequestDetails = _originalRequestDetails;\n        this.id = requestId;\n        this.tabId = tabId;\n        this.type = type;\n        this.url = url;\n        this.hostname = hostname;\n        this.domain = domain;\n        this.sourceHostnameHashes =\n            sourceHostname.length === 0\n                ? EMPTY_UINT32_ARRAY\n                : getHostnameHashesFromLabelsBackward(sourceHostname, sourceDomain);\n        this.sourceEntityHashes =\n            sourceHostname.length === 0\n                ? EMPTY_UINT32_ARRAY\n                : getEntityHashesFromLabelsBackward(sourceHostname, sourceDomain);\n        // Decide on partiness\n        this.isThirdParty = isThirdParty(hostname, domain, sourceHostname, sourceDomain, type);\n        this.isFirstParty = !this.isThirdParty;\n        // Check protocol\n        this.isSupported = true;\n        if (this.type === 'websocket' || this.url.startsWith('ws:') || this.url.startsWith('wss:')) {\n            this.isHttp = false;\n            this.isHttps = false;\n            this.type = 'websocket';\n            this.isSupported = true;\n        }\n        else if (this.url.startsWith('http:')) {\n            this.isHttp = true;\n            this.isHttps = false;\n        }\n        else if (this.url.startsWith('https:')) {\n            this.isHttps = true;\n            this.isHttp = false;\n        }\n        else if (this.url.startsWith('data:')) {\n            this.isHttp = false;\n            this.isHttps = false;\n            // Only keep prefix of URL\n            const indexOfComa = this.url.indexOf(',');\n            if (indexOfComa !== -1) {\n                this.url = this.url.slice(0, indexOfComa);\n            }\n        }\n        else {\n            this.isHttp = false;\n            this.isHttps = false;\n            this.isSupported = false;\n        }\n    }\n    getHostnameHashes() {\n        if (this.hostnameHashes === undefined) {\n            this.hostnameHashes =\n                this.hostname.length === 0\n                    ? EMPTY_UINT32_ARRAY\n                    : getHostnameHashesFromLabelsBackward(this.hostname, this.domain);\n        }\n        return this.hostnameHashes;\n    }\n    getEntityHashes() {\n        if (this.entityHashes === undefined) {\n            this.entityHashes =\n                this.hostname.length === 0\n                    ? EMPTY_UINT32_ARRAY\n                    : getEntityHashesFromLabelsBackward(this.hostname, this.domain);\n        }\n        return this.entityHashes;\n    }\n    getTokens() {\n        if (this.tokens === undefined) {\n            TOKENS_BUFFER.reset();\n            for (const hash of this.sourceHostnameHashes) {\n                TOKENS_BUFFER.push(hash);\n            }\n            // Add token corresponding to request type\n            TOKENS_BUFFER.push(NORMALIZED_TYPE_TOKEN[this.type]);\n            tokenizeNoSkipInPlace(this.url, TOKENS_BUFFER);\n            this.tokens = TOKENS_BUFFER.slice();\n        }\n        return this.tokens;\n    }\n    isMainFrame() {\n        return this.type === 'main_frame' || this.type === 'mainFrame';\n    }\n    isSubFrame() {\n        return this.type === 'sub_frame' || this.type === 'subFrame';\n    }\n    /**\n     * Calling this method will attempt to guess the type of a request based on\n     * information found in `url` only. This can be useful to try and fine-tune\n     * the type of a Request when it is not otherwise available or if it was\n     * inferred as 'other'.\n     */\n    guessTypeOfRequest() {\n        const currentType = this.type;\n        this.type = guessUrlType(this.url);\n        if (currentType !== this.type) {\n            this.tokens = undefined;\n        }\n        return this.type;\n    }\n}\n/**\n * Kept for backward compatibility. The recommended way is to call\n * `Request.fromRawDetails` directly.\n */\nexport function makeRequest(details) {\n    return Request.fromRawDetails(details);\n}\n//# sourceMappingURL=request.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { hashHostnameBackward } from '../request.js';\nimport { toASCII } from '../punycode.js';\nimport { sizeOfUint32Array, sizeOfUTF8 } from '../data-view.js';\nimport { binLookup, hasUnicode, HASH_INTERNAL_MULT } from '../utils.js';\nexport class Domains {\n    static parse(parts, debug = false) {\n        if (parts.length === 0) {\n            return undefined;\n        }\n        const entities = [];\n        const notEntities = [];\n        const hostnames = [];\n        const notHostnames = [];\n        for (let hostname of parts) {\n            if (hasUnicode(hostname)) {\n                hostname = toASCII(hostname);\n            }\n            const negation = hostname.charCodeAt(0) === 126; /* '~' */\n            const entity = hostname.charCodeAt(hostname.length - 1) === 42 /* '*' */ &&\n                hostname.charCodeAt(hostname.length - 2) === 46; /* '.' */\n            const start = negation ? 1 : 0;\n            const end = entity ? hostname.length - 2 : hostname.length;\n            const hash = hashHostnameBackward(negation === true || entity === true ? hostname.slice(start, end) : hostname);\n            if (negation) {\n                if (entity) {\n                    notEntities.push(hash);\n                }\n                else {\n                    notHostnames.push(hash);\n                }\n            }\n            else {\n                if (entity) {\n                    entities.push(hash);\n                }\n                else {\n                    hostnames.push(hash);\n                }\n            }\n        }\n        return new Domains({\n            entities: entities.length !== 0 ? new Uint32Array(entities).sort() : undefined,\n            hostnames: hostnames.length !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n            notEntities: notEntities.length !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n            notHostnames: notHostnames.length !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n            parts: debug === true ? parts.join(',') : undefined,\n        });\n    }\n    static deserialize(buffer) {\n        const optionalParts = buffer.getUint8();\n        // The order of these fields should be the same as when we serialize them.\n        return new Domains({\n            entities: (optionalParts & 1) === 1 ? buffer.getUint32Array() : undefined,\n            hostnames: (optionalParts & 2) === 2 ? buffer.getUint32Array() : undefined,\n            notEntities: (optionalParts & 4) === 4 ? buffer.getUint32Array() : undefined,\n            notHostnames: (optionalParts & 8) === 8 ? buffer.getUint32Array() : undefined,\n            parts: (optionalParts & 16) === 16 ? buffer.getUTF8() : undefined,\n        });\n    }\n    constructor({ entities, hostnames, notEntities, notHostnames, parts, }) {\n        // Hostname constraints\n        this.entities = entities;\n        this.hostnames = hostnames;\n        // Hostname exceptions\n        this.notEntities = notEntities;\n        this.notHostnames = notHostnames;\n        // Debug\n        this.parts = parts;\n    }\n    updateId(hash) {\n        const { hostnames, entities, notHostnames, notEntities } = this;\n        if (hostnames !== undefined) {\n            for (const hostname of hostnames) {\n                hash = (hash * HASH_INTERNAL_MULT) ^ hostname;\n            }\n        }\n        if (entities !== undefined) {\n            for (const entity of entities) {\n                hash = (hash * HASH_INTERNAL_MULT) ^ entity;\n            }\n        }\n        if (notHostnames !== undefined) {\n            for (const notHostname of notHostnames) {\n                hash = (hash * HASH_INTERNAL_MULT) ^ notHostname;\n            }\n        }\n        if (notEntities !== undefined) {\n            for (const notEntity of notEntities) {\n                hash = (hash * HASH_INTERNAL_MULT) ^ notEntity;\n            }\n        }\n        return hash;\n    }\n    serialize(buffer) {\n        // Mandatory fields\n        const index = buffer.getPos();\n        buffer.pushUint8(0);\n        // This bit-mask indicates which optional parts of the filter were serialized.\n        let optionalParts = 0;\n        if (this.entities !== undefined) {\n            optionalParts |= 1;\n            buffer.pushUint32Array(this.entities);\n        }\n        if (this.hostnames !== undefined) {\n            optionalParts |= 2;\n            buffer.pushUint32Array(this.hostnames);\n        }\n        if (this.notEntities !== undefined) {\n            optionalParts |= 4;\n            buffer.pushUint32Array(this.notEntities);\n        }\n        if (this.notHostnames !== undefined) {\n            optionalParts |= 8;\n            buffer.pushUint32Array(this.notHostnames);\n        }\n        if (this.parts !== undefined) {\n            optionalParts |= 16;\n            buffer.pushUTF8(this.parts);\n        }\n        buffer.setByte(index, optionalParts);\n    }\n    getSerializedSize() {\n        let estimate = 1; // optional parts (1 byte)\n        if (this.entities !== undefined) {\n            estimate += sizeOfUint32Array(this.entities);\n        }\n        if (this.hostnames !== undefined) {\n            estimate += sizeOfUint32Array(this.hostnames);\n        }\n        if (this.notHostnames !== undefined) {\n            estimate += sizeOfUint32Array(this.notHostnames);\n        }\n        if (this.notEntities !== undefined) {\n            estimate += sizeOfUint32Array(this.notEntities);\n        }\n        if (this.parts !== undefined) {\n            estimate += sizeOfUTF8(this.parts);\n        }\n        return estimate;\n    }\n    match(hostnameHashes, entityHashes) {\n        // Check if `hostname` is blacklisted\n        if (this.notHostnames !== undefined) {\n            for (const hash of hostnameHashes) {\n                if (binLookup(this.notHostnames, hash)) {\n                    return false;\n                }\n            }\n        }\n        // Check if `hostname` is blacklisted by *entity*\n        if (this.notEntities !== undefined) {\n            for (const hash of entityHashes) {\n                if (binLookup(this.notEntities, hash)) {\n                    return false;\n                }\n            }\n        }\n        // Check if `hostname` is allowed\n        if (this.hostnames !== undefined || this.entities !== undefined) {\n            if (this.hostnames !== undefined) {\n                for (const hash of hostnameHashes) {\n                    if (binLookup(this.hostnames, hash)) {\n                        return true;\n                    }\n                }\n            }\n            if (this.entities !== undefined) {\n                for (const hash of entityHashes) {\n                    if (binLookup(this.entities, hash)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=domains.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nexport function extractHTMLSelectorFromRule(rule) {\n    if (rule.startsWith('^script') === false) {\n        return undefined;\n    }\n    const prefix = ':has-text(';\n    const selectors = [];\n    let index = 7;\n    // ^script:has-text\n    //        ^ 7\n    // Prepare for finding one or more ':has-text(' selectors in a row\n    while (rule.startsWith(prefix, index)) {\n        index += prefix.length;\n        let currentParsingDepth = 1;\n        const startOfSelectorIndex = index;\n        let prev = -1; // previous character\n        for (; index < rule.length && currentParsingDepth !== 0; index += 1) {\n            const code = rule.charCodeAt(index);\n            if (prev !== 92 /* '\\' */) {\n                if (code === 40 /* '(' */) {\n                    currentParsingDepth += 1;\n                }\n                if (code === 41 /* ')' */) {\n                    currentParsingDepth -= 1;\n                }\n            }\n            prev = code;\n        }\n        selectors.push(rule.slice(startOfSelectorIndex, index - 1));\n    }\n    if (index !== rule.length) {\n        return undefined;\n    }\n    return ['script', selectors];\n}\nexport function extractTagsFromHtml(html, tag) {\n    const tags = [];\n    const prefix = `<${tag}`;\n    const suffix = `</${tag}>`;\n    // Keep track of the beginning of current identified tag\n    let index = html.indexOf(prefix);\n    // Keep tracks of index immediately following last extracted tag\n    let endOfLastTag = 0;\n    while (index !== -1) {\n        // Find index of end of current tag. If we do not find it, it could be\n        // because it will come in the next chunk and we should try parsing it\n        // again then.\n        const endOfTagIndex = html.indexOf('>', index + prefix.length);\n        if (endOfTagIndex === -1) {\n            return [tags, html.slice(0, index), html.slice(index)];\n        }\n        // Handle short tag form <tag/> which will not have a closing tag.\n        if (html.charCodeAt(endOfTagIndex - 1) === 47 /* '/' */) {\n            endOfLastTag = endOfTagIndex + 1;\n            tags.push([index, html.slice(index, endOfLastTag)]);\n        }\n        else {\n            // Find index of closing tag '</tag>'. If we do not find it, again, it\n            // could mean that it will come in next chunk and we need to try parsing\n            // it again with more input.\n            const indexOfClosingTag = html.indexOf(suffix, endOfTagIndex);\n            if (indexOfClosingTag === -1) {\n                return [tags, html.slice(0, index), html.slice(index)];\n            }\n            tags.push([index, html.slice(index, indexOfClosingTag + suffix.length)]);\n            endOfLastTag = indexOfClosingTag + suffix.length;\n        }\n        index = html.indexOf(prefix, endOfLastTag);\n    }\n    // Make sure we consume as much input as possible so that we do not parse the\n    // same portion of HTML again next time and we can stream chunks as early as\n    // possible.\n    //\n    // We check if there is at least one '<' char after the end of the last\n    // extracted tag; this would indicate that the next chunk might contain the\n    // remaining of a valid tag. We then look up to N characters after this '<'\n    // character, where N is the size of 'prefix'. The rational is that if we\n    // reached this part of the code, then it cannot be a match otherwise we\n    // would have returned earlier (from the loop).\n    let lastClosingTagIndex = html.lastIndexOf('>');\n    if (lastClosingTagIndex === -1) {\n        lastClosingTagIndex = endOfLastTag;\n    }\n    const indexOfNextTag = html.indexOf('<', lastClosingTagIndex);\n    // If no '<' in the remaining of input, then it means we can count this chunk\n    // as fully parsed (i.e.: next chunk can be parsed independently without\n    // missing a tag which would start in this one).\n    if (indexOfNextTag === -1) {\n        return [tags, html, ''];\n    }\n    // In case of a partial tag ending this 'html' chunk. Then check if we have\n    // enough information to discard it already based on the kind of tags we are\n    // looking for.\n    if (html.length - indexOfNextTag >= prefix.length ||\n        prefix.startsWith(html.slice(indexOfNextTag)) === false) {\n        return [tags, html, ''];\n    }\n    return [tags, html.slice(0, indexOfNextTag), html.slice(indexOfNextTag)];\n}\nexport function extractSelectorsFromRules(filter) {\n    const patterns = [];\n    for (const [, selectors] of filter) {\n        const plainPatterns = [];\n        const regexpPatterns = [];\n        for (const selector of selectors) {\n            if (selector.charCodeAt(0) === 47 /* '/' */) {\n                if (selector.endsWith('/')) {\n                    regexpPatterns.push(new RegExp(selector.slice(1, -1)));\n                }\n                else if (selector.endsWith('/i')) {\n                    regexpPatterns.push(new RegExp(selector.slice(1, -2), 'i'));\n                }\n            }\n            else {\n                plainPatterns.push(selector);\n            }\n        }\n        if (plainPatterns.length !== 0 || regexpPatterns.length !== 0) {\n            patterns.push([plainPatterns, regexpPatterns]);\n        }\n    }\n    return patterns;\n}\n/**\n * Check if `tag` should be removed from HTML based on `plainPatterns` and\n * `regexpPatterns`. For a tag to be removed, all elements from `plainPatterns`\n * and `regexpPatterns` must match.\n */\nfunction tagShouldBeRemoved(tag, plainPatterns, regexpPatterns) {\n    for (const pattern of plainPatterns) {\n        if (tag.indexOf(pattern) === -1) {\n            return false;\n        }\n    }\n    for (const pattern of regexpPatterns) {\n        if (pattern.test(tag) === false) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function selectTagsToRemove(patterns, tags) {\n    const toRemove = [];\n    for (const tag of tags) {\n        for (const [plainPatterns, regexpPatterns] of patterns) {\n            if (tagShouldBeRemoved(tag[1], plainPatterns, regexpPatterns)) {\n                toRemove.push(tag);\n                break;\n            }\n        }\n    }\n    return toRemove;\n}\nexport function removeTagsFromHtml(html, toRemove) {\n    if (toRemove.length === 0) {\n        return html;\n    }\n    let filteredHtml = html;\n    toRemove.reverse(); // make sure to remove from last to first tag (preserve indices)\n    for (const [index, tag] of toRemove) {\n        filteredHtml = filteredHtml.slice(0, index) + filteredHtml.slice(index + tag.length);\n    }\n    return filteredHtml;\n}\nexport default class StreamingHtmlFilter {\n    constructor(selectors) {\n        this.buffer = '';\n        this.patterns = extractSelectorsFromRules(selectors);\n    }\n    flush() {\n        return this.buffer;\n    }\n    write(chunk) {\n        // If there are no valid selectors, abort.\n        if (this.patterns.length === 0) {\n            return chunk;\n        }\n        // If given an empty string, abort.\n        if (chunk.length === 0) {\n            return chunk;\n        }\n        // Accumulate buffer + new data\n        this.buffer += chunk;\n        // Parse tags from `this.buffer`\n        const [tags, parsed, rest] = extractTagsFromHtml(this.buffer, 'script');\n        this.buffer = rest;\n        // If no tags were found, just return the parsed version\n        if (tags.length === 0) {\n            return parsed;\n        }\n        // Perform tags filtering using `this.patterns` and `this.regexps`.\n        return removeTagsFromHtml(parsed, selectTagsToRemove(this.patterns, tags));\n    }\n}\n//# sourceMappingURL=html-filtering.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { classifySelector, SelectorType, parse as parseCssSelector, } from '@cliqz/adblocker-extended-selectors';\nimport { Domains } from '../engine/domains.js';\nimport { EMPTY_UINT32_ARRAY, sizeOfASCII, sizeOfCosmeticSelector, sizeOfUTF8, sizeOfRawCosmetic, } from '../data-view.js';\nimport { getHostnameHashesFromLabelsBackward, getEntityHashesFromLabelsBackward, } from '../request.js';\nimport { fastHash, fastHashBetween, fastStartsWithFrom, getBit, hasUnicode, setBit, tokenize, HASH_SEED, HASH_INTERNAL_MULT, } from '../utils.js';\nimport { extractHTMLSelectorFromRule } from '../html-filtering.js';\nconst EMPTY_TOKENS = [EMPTY_UINT32_ARRAY];\nexport const DEFAULT_HIDDING_STYLE = 'display: none !important;';\nconst REGEXP_UNICODE_COMMA = new RegExp(/\\\\u002C/, 'g');\nconst REGEXP_UNICODE_BACKSLASH = new RegExp(/\\\\u005C/, 'g');\nconst REGEXP_ESCAPED_COMMA = new RegExp(/\\\\,/, 'g');\n/**\n * Given a `selector` starting with either '#' or '.' check if what follows is\n * a simple CSS selector: /^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/\n */\nfunction isSimpleSelector(selector) {\n    for (let i = 1; i < selector.length; i += 1) {\n        const code = selector.charCodeAt(i);\n        if (!(code === 45 /* '-' */ ||\n            code === 95 /* '_' */ ||\n            (code >= 48 && code <= 57) /* [0-9] */ ||\n            (code >= 65 && code <= 90) /* [A-Z] */ ||\n            (code >= 97 && code <= 122)) /* [a-z] */) {\n            if (i < selector.length - 1) {\n                // Check if what follows is a ' >' or ' ~' or ' +', in which case we\n                // also consider it a simple selector and the token this filter can be\n                // indexed with is the first selector.\n                const nextCode = selector.charCodeAt(i + 1);\n                if (code === 91 /* '[' */ ||\n                    code === 46 /* '.' */ ||\n                    code === 58 /* ':' */ ||\n                    (code === 32 /* ' ' */ &&\n                        (nextCode === 62 /* '>' */ ||\n                            nextCode === 43 /* '+' */ ||\n                            nextCode === 126 /* '~' */ ||\n                            nextCode === 46 /* '.' */ ||\n                            nextCode === 35)) /* '#' */) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Given a `selector` starting with either 'a[' or '[', check if what follows\n * is a simple href attribute selector of the form: 'href^=' or 'href*='.\n */\nfunction isSimpleHrefSelector(selector, start) {\n    return (selector.startsWith('href^=\"', start) ||\n        selector.startsWith('href*=\"', start) ||\n        selector.startsWith('href=\"', start));\n}\n/**\n * Validate CSS selector. There is a fast path for simple selectors (e.g.: #foo\n * or .bar) which are the most common case. For complex ones, we rely on\n * `Element.matches` (if available).\n */\nconst isValidCss = (() => {\n    const div = typeof document !== 'undefined'\n        ? document.createElement('div')\n        : {\n            matches: () => {\n                /* noop */\n            },\n        };\n    const matches = (selector) => div.matches(selector);\n    const validSelectorRe = /^[#.]?[\\w-.]+$/;\n    return function isValidCssImpl(selector) {\n        if (validSelectorRe.test(selector)) {\n            return true;\n        }\n        try {\n            matches(selector);\n        }\n        catch (ex) {\n            return false;\n        }\n        return true;\n    };\n})();\n/**\n * Masks used to store options of cosmetic filters in a bitmask.\n */\nvar COSMETICS_MASK;\n(function (COSMETICS_MASK) {\n    COSMETICS_MASK[COSMETICS_MASK[\"unhide\"] = 1] = \"unhide\";\n    COSMETICS_MASK[COSMETICS_MASK[\"scriptInject\"] = 2] = \"scriptInject\";\n    COSMETICS_MASK[COSMETICS_MASK[\"isUnicode\"] = 4] = \"isUnicode\";\n    COSMETICS_MASK[COSMETICS_MASK[\"isClassSelector\"] = 8] = \"isClassSelector\";\n    COSMETICS_MASK[COSMETICS_MASK[\"isIdSelector\"] = 16] = \"isIdSelector\";\n    COSMETICS_MASK[COSMETICS_MASK[\"isHrefSelector\"] = 32] = \"isHrefSelector\";\n    COSMETICS_MASK[COSMETICS_MASK[\"remove\"] = 64] = \"remove\";\n    COSMETICS_MASK[COSMETICS_MASK[\"extended\"] = 128] = \"extended\";\n})(COSMETICS_MASK || (COSMETICS_MASK = {}));\nfunction computeFilterId(mask, selector, domains, style) {\n    let hash = (HASH_SEED * HASH_INTERNAL_MULT) ^ mask;\n    if (selector !== undefined) {\n        for (let i = 0; i < selector.length; i += 1) {\n            hash = (hash * HASH_INTERNAL_MULT) ^ selector.charCodeAt(i);\n        }\n    }\n    if (domains !== undefined) {\n        hash = domains.updateId(hash);\n    }\n    if (style !== undefined) {\n        for (let i = 0; i < style.length; i += 1) {\n            hash = (hash * HASH_INTERNAL_MULT) ^ style.charCodeAt(i);\n        }\n    }\n    return hash >>> 0;\n}\n/***************************************************************************\n *  Cosmetic filters parsing\n * ************************************************************************ */\nexport default class CosmeticFilter {\n    /**\n     * Given a line that we know contains a cosmetic filter, create a CosmeticFiler\n     * instance out of it. This function should be *very* efficient, as it will be\n     * used to parse tens of thousands of lines.\n     */\n    static parse(line, debug = false) {\n        const rawLine = line;\n        // Mask to store attributes. Each flag (unhide, scriptInject, etc.) takes\n        // only 1 bit at a specific offset defined in COSMETICS_MASK.\n        // cf: COSMETICS_MASK for the offset of each property\n        let mask = 0;\n        let selector;\n        let domains;\n        let style;\n        const sharpIndex = line.indexOf('#');\n        // Start parsing the line\n        const afterSharpIndex = sharpIndex + 1;\n        let suffixStartIndex = afterSharpIndex + 1;\n        // hostname1,hostname2#?#.selector\n        // hostname1,hostname2#@#.selector\n        //                    ^^ ^\n        //                    || |\n        //                    || suffixStartIndex\n        //                    |afterSharpIndex\n        //                    sharpIndex\n        // Check if unhide\n        if (line.length > afterSharpIndex) {\n            if (line[afterSharpIndex] === '@') {\n                mask = setBit(mask, COSMETICS_MASK.unhide);\n                suffixStartIndex += 1;\n            }\n            else if (line[afterSharpIndex] === '?') {\n                suffixStartIndex += 1;\n            }\n        }\n        if (suffixStartIndex >= line.length) {\n            return null;\n        }\n        // Parse hostnames and entitites as well as their negations.\n        //\n        // - ~hostname##.selector\n        // - hostname##.selector\n        // - entity.*##.selector\n        // - ~entity.*##.selector\n        //\n        // Each kind will have its own Uint32Array containing hashes, sorted by\n        // number of labels considered. This allows a compact representation of\n        // hostnames and fast matching without any string copy.\n        if (sharpIndex > 0) {\n            domains = Domains.parse(line.slice(0, sharpIndex).split(','), debug);\n        }\n        if (line.endsWith(':remove()')) {\n            // ##selector:remove()\n            mask = setBit(mask, COSMETICS_MASK.remove);\n            mask = setBit(mask, COSMETICS_MASK.extended);\n            line = line.slice(0, -9);\n        }\n        else if (line.length - suffixStartIndex >= 8 &&\n            line.endsWith(')') &&\n            line.indexOf(':style(', suffixStartIndex) !== -1) {\n            // ##selector:style(...)\n            const indexOfStyle = line.indexOf(':style(', suffixStartIndex);\n            style = line.slice(indexOfStyle + 7, -1);\n            line = line.slice(0, indexOfStyle);\n        }\n        // Deal with HTML filters\n        if (line.charCodeAt(suffixStartIndex) === 94 /* '^' */) {\n            if (fastStartsWithFrom(line, 'script:has-text(', suffixStartIndex + 1) === false ||\n                line.charCodeAt(line.length - 1) !== 41 /* ')' */) {\n                return null;\n            }\n            // NOTE: currently only ^script:has-text(...) is supported.\n            //\n            //   ^script:has-text(selector)\n            //   ^                         ^\n            //   |                         |\n            //   |                         |\n            //   |                         line.length\n            //   |\n            //   suffixStartIndex\n            //\n            selector = line.slice(suffixStartIndex, line.length);\n            if (extractHTMLSelectorFromRule(selector) === undefined) {\n                return null;\n            }\n        }\n        else if (line.length - suffixStartIndex > 4 &&\n            line.charCodeAt(suffixStartIndex) === 43 /* '+' */ &&\n            fastStartsWithFrom(line, '+js(', suffixStartIndex)) {\n            // Generic scriptlets are invalid, unless they are un-hide\n            if ((domains === undefined ||\n                (domains.hostnames === undefined && domains.entities === undefined)) &&\n                getBit(mask, COSMETICS_MASK.unhide) === false) {\n                return null;\n            }\n            mask = setBit(mask, COSMETICS_MASK.scriptInject);\n            selector = line.slice(suffixStartIndex + 4, line.length - 1);\n            // An empty scriptlet (i.e. '+js()') can be specified to cancel injections\n            // on a specific domain or globally. It does not make sense though to have\n            // an empty scriptlet without an exception (i.e. '#@#' is mandatory).\n            if (getBit(mask, COSMETICS_MASK.unhide) === false && selector.length === 0) {\n                return null;\n            }\n        }\n        else {\n            selector = line.slice(suffixStartIndex);\n            const selectorType = classifySelector(selector);\n            if (selectorType === SelectorType.Extended) {\n                mask = setBit(mask, COSMETICS_MASK.extended);\n            }\n            else if (selectorType === SelectorType.Invalid || !isValidCss(selector)) {\n                // console.error('Invalid', line);\n                // TODO - maybe perform `isValidCss` from the other module.\n                return null;\n            }\n        }\n        // Extended selectors should always be specific to some domain.\n        if (domains === undefined && getBit(mask, COSMETICS_MASK.extended) === true) {\n            return null;\n        }\n        if (selector !== undefined) {\n            // Check if unicode appears in selector\n            if (hasUnicode(selector)) {\n                mask = setBit(mask, COSMETICS_MASK.isUnicode);\n            }\n            // Classify selector\n            if (getBit(mask, COSMETICS_MASK.scriptInject) === false &&\n                getBit(mask, COSMETICS_MASK.remove) === false &&\n                getBit(mask, COSMETICS_MASK.extended) === false &&\n                selector.startsWith('^') === false) {\n                const c0 = selector.charCodeAt(0);\n                const c1 = selector.charCodeAt(1);\n                const c2 = selector.charCodeAt(2);\n                // Check if we have a specific case of simple selector (id, class or\n                // href) These are the most common filters and will benefit greatly from\n                // a custom dispatch mechanism.\n                if (getBit(mask, COSMETICS_MASK.scriptInject) === false) {\n                    if (c0 === 46 /* '.' */ && isSimpleSelector(selector)) {\n                        mask = setBit(mask, COSMETICS_MASK.isClassSelector);\n                    }\n                    else if (c0 === 35 /* '#' */ && isSimpleSelector(selector)) {\n                        mask = setBit(mask, COSMETICS_MASK.isIdSelector);\n                    }\n                    else if (c0 === 97 /* a */ &&\n                        c1 === 91 /* '[' */ &&\n                        c2 === 104 /* 'h' */ &&\n                        isSimpleHrefSelector(selector, 2)) {\n                        mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n                    }\n                    else if (c0 === 91 /* '[' */ &&\n                        c1 === 104 /* 'h' */ &&\n                        isSimpleHrefSelector(selector, 1)) {\n                        mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n                    }\n                }\n            }\n        }\n        return new CosmeticFilter({\n            mask,\n            rawLine: debug === true ? rawLine : undefined,\n            selector,\n            style,\n            domains,\n        });\n    }\n    /**\n     * Deserialize cosmetic filters. The code accessing the buffer should be\n     * symetrical to the one in `serializeCosmeticFilter`.\n     */\n    static deserialize(buffer) {\n        const mask = buffer.getUint8();\n        const isUnicode = getBit(mask, COSMETICS_MASK.isUnicode);\n        const optionalParts = buffer.getUint8();\n        const selector = isUnicode ? buffer.getUTF8() : buffer.getCosmeticSelector();\n        // The order of these fields should be the same as when we serialize them.\n        return new CosmeticFilter({\n            // Mandatory fields\n            mask,\n            selector,\n            // Optional fields\n            domains: (optionalParts & 1) === 1 ? Domains.deserialize(buffer) : undefined,\n            rawLine: (optionalParts & 2) === 2 ? buffer.getRawCosmetic() : undefined,\n            style: (optionalParts & 4) === 4 ? buffer.getASCII() : undefined,\n        });\n    }\n    constructor({ mask, selector, domains, rawLine, style, }) {\n        this.mask = mask;\n        this.selector = selector;\n        this.domains = domains;\n        this.style = style;\n        this.id = undefined;\n        this.rawLine = rawLine;\n    }\n    isCosmeticFilter() {\n        return true;\n    }\n    isNetworkFilter() {\n        return false;\n    }\n    /**\n     * The format of a cosmetic filter is:\n     *\n     * | mask | selector length | selector... | hostnames length | hostnames...\n     *   32     16                              16\n     *\n     * The header (mask) is 32 bits, then we have a total of 32 bits to store the\n     * length of `selector` and `hostnames` (16 bits each).\n     *\n     * Improvements similar to the onces mentioned in `serializeNetworkFilters`\n     * could be applied here, to get a more compact representation.\n     */\n    serialize(buffer) {\n        // Mandatory fields\n        buffer.pushUint8(this.mask);\n        const index = buffer.getPos();\n        buffer.pushUint8(0);\n        if (this.isUnicode()) {\n            buffer.pushUTF8(this.selector);\n        }\n        else {\n            buffer.pushCosmeticSelector(this.selector);\n        }\n        // This bit-mask indicates which optional parts of the filter were serialized.\n        let optionalParts = 0;\n        if (this.domains !== undefined) {\n            optionalParts |= 1;\n            this.domains.serialize(buffer);\n        }\n        if (this.rawLine !== undefined) {\n            optionalParts |= 2;\n            buffer.pushRawCosmetic(this.rawLine);\n        }\n        if (this.style !== undefined) {\n            optionalParts |= 4;\n            buffer.pushASCII(this.style);\n        }\n        buffer.setByte(index, optionalParts);\n    }\n    /**\n     * Return an estimation of the size (in bytes) needed to persist this filter\n     * in a DataView. This does not need to be 100% accurate but should be an\n     * upper-bound. It should also be as fast as possible.\n     */\n    getSerializedSize(compression) {\n        let estimate = 1 + 1; // mask (1 byte) + optional parts (1 byte)\n        if (this.isUnicode()) {\n            estimate += sizeOfUTF8(this.selector);\n        }\n        else {\n            estimate += sizeOfCosmeticSelector(this.selector, compression);\n        }\n        if (this.domains !== undefined) {\n            estimate += this.domains.getSerializedSize();\n        }\n        if (this.rawLine !== undefined) {\n            estimate += sizeOfRawCosmetic(this.rawLine, compression);\n        }\n        if (this.style !== undefined) {\n            estimate += sizeOfASCII(this.style);\n        }\n        return estimate;\n    }\n    /**\n     * Create a more human-readable version of this filter. It is mainly used for\n     * debugging purpose, as it will expand the values stored in the bit mask.\n     */\n    toString() {\n        if (this.rawLine !== undefined) {\n            return this.rawLine;\n        }\n        let filter = '';\n        if (this.domains !== undefined) {\n            if (this.domains.parts !== undefined) {\n                filter += this.domains.parts;\n            }\n            else {\n                filter += '<hostnames>';\n            }\n        }\n        if (this.isUnhide()) {\n            filter += '#@#';\n        }\n        else {\n            filter += '##';\n        }\n        if (this.isScriptInject()) {\n            filter += '+js(';\n            filter += this.selector;\n            filter += ')';\n        }\n        else {\n            filter += this.selector;\n        }\n        return filter;\n    }\n    match(hostname, domain) {\n        // Not constraint on hostname, match is true\n        if (this.hasHostnameConstraint() === false) {\n            return true;\n        }\n        // No `hostname` available but this filter has some constraints on hostname.\n        if (!hostname && this.hasHostnameConstraint()) {\n            return false;\n        }\n        if (this.domains !== undefined) {\n            // TODO - this hashing could be re-used between cosmetics by using an\n            // abstraction like `Request` (similar to network filters matching).\n            // Maybe could we reuse `Request` directly without any change?\n            return this.domains.match(hostname.length === 0\n                ? EMPTY_UINT32_ARRAY\n                : getHostnameHashesFromLabelsBackward(hostname, domain), hostname.length === 0\n                ? EMPTY_UINT32_ARRAY\n                : getEntityHashesFromLabelsBackward(hostname, domain));\n        }\n        return true;\n    }\n    /**\n     * Get tokens for this filter. It can be indexed multiple times if multiple\n     * hostnames are specified (e.g.: host1,host2##.selector).\n     */\n    getTokens() {\n        const tokens = [];\n        // Note, we do not need to use negated domains or entities as tokens here\n        // since they will by definition not match on their own, unless accompanied\n        // by a domain or entity. Instead, they are handled in\n        // `CosmeticFilterBucket.getCosmeticsFilters(...)`.\n        if (this.domains !== undefined) {\n            const { hostnames, entities } = this.domains;\n            if (hostnames !== undefined) {\n                for (const hostname of hostnames) {\n                    tokens.push(new Uint32Array([hostname]));\n                }\n            }\n            if (entities !== undefined) {\n                for (const entity of entities) {\n                    tokens.push(new Uint32Array([entity]));\n                }\n            }\n        }\n        // Here we only take selector into account if the filter is not unHide.\n        if (tokens.length === 0 && this.isUnhide() === false) {\n            if (this.isIdSelector() || this.isClassSelector()) {\n                // Here we try to identify the end of selector si that we can extract a\n                // valid token out of it. In all these examples, 'selector' is our\n                // token:\n                //\n                //   .selector[...]\n                //   #selector[...]\n                //   #selector ~ foo\n                //   .selector:not(...)\n                //   .selector.foo\n                //\n                // We now try to identify the first valid end of selector which will\n                // also be the end of our token: space, bracket, colon, dot.\n                let endOfSelector = 1;\n                const selector = this.selector;\n                for (; endOfSelector < selector.length; endOfSelector += 1) {\n                    const code = selector.charCodeAt(endOfSelector);\n                    if (code === 32 /* ' ' */ ||\n                        code === 46 /* '.' */ ||\n                        code === 58 /* ':' */ ||\n                        code === 91 /* '[' */) {\n                        break;\n                    }\n                }\n                const arr = new Uint32Array(1);\n                arr[0] = fastHashBetween(selector, 1, endOfSelector);\n                tokens.push(arr);\n            }\n            else if (this.isHrefSelector() === true) {\n                const selector = this.getSelector();\n                // Locate 'href' in selector\n                let hrefIndex = selector.indexOf('href');\n                if (hrefIndex === -1) {\n                    return EMPTY_TOKENS;\n                }\n                hrefIndex += 4;\n                // Tokenize optimally depending on the kind of selector: 'href=',\n                // 'href*=', 'href^='.\n                let skipFirstToken = false;\n                let skipLastToken = true;\n                if (selector.charCodeAt(hrefIndex) === 42 /* '*' */) {\n                    // skip: '*'\n                    skipFirstToken = true;\n                    hrefIndex += 1;\n                }\n                else if (selector.charCodeAt(hrefIndex) === 94 /* '^' */) {\n                    // skip: '^'\n                    hrefIndex += 1;\n                }\n                else {\n                    skipLastToken = false;\n                }\n                hrefIndex += 2; // skip:  '=\"'\n                // Locate end of href\n                const hrefEnd = selector.indexOf('\"', hrefIndex);\n                if (hrefEnd === -1) {\n                    // That cannot happen unless the filter is not well-formed. In this\n                    // case, we just return no tokens, which will result in this filter\n                    // ending up in the \"wildcard\" bucket of the index.\n                    return EMPTY_TOKENS;\n                }\n                tokens.push(tokenize(this.selector.slice(hrefIndex, hrefEnd), skipFirstToken, skipLastToken));\n            }\n        }\n        if (tokens.length === 0) {\n            return EMPTY_TOKENS;\n        }\n        return tokens;\n    }\n    parseScript() {\n        const selector = this.getSelector();\n        if (selector.length === 0) {\n            return undefined;\n        }\n        const parts = [];\n        let index = 0;\n        let lastComaIndex = -1;\n        let inDoubleQuotes = false;\n        let inSingleQuotes = false;\n        let inRegexp = false;\n        let objectNesting = 0;\n        let lastCharIsBackslash = false;\n        let inArgument = false;\n        for (; index < selector.length; index += 1) {\n            const char = selector[index];\n            if (lastCharIsBackslash === false) {\n                if (inDoubleQuotes === true) {\n                    if (char === '\"') {\n                        inDoubleQuotes = false;\n                    }\n                }\n                else if (inSingleQuotes === true) {\n                    if (char === \"'\") {\n                        inSingleQuotes = false;\n                    }\n                }\n                else if (objectNesting !== 0) {\n                    if (char === '{') {\n                        objectNesting += 1;\n                    }\n                    else if (char === '}') {\n                        objectNesting -= 1;\n                    }\n                    else if (char === '\"') {\n                        inDoubleQuotes = true;\n                    }\n                    else if (char === \"'\") {\n                        inSingleQuotes = true;\n                    }\n                }\n                else if (inRegexp === true) {\n                    if (char === '/') {\n                        inRegexp = false;\n                    }\n                }\n                else {\n                    if (inArgument === false) {\n                        if (char === ' ') {\n                            // ignore\n                        }\n                        else if (char === '\"' && selector.indexOf('\"', index + 1) > 0) {\n                            inDoubleQuotes = true;\n                        }\n                        else if (char === \"'\" && selector.indexOf(\"'\", index + 1) > 0) {\n                            inSingleQuotes = true;\n                        }\n                        else if (char === '{' && selector.indexOf('}', index + 1) > 0) {\n                            objectNesting += 1;\n                        }\n                        else if (char === '/' && selector.indexOf('/', index + 1) > 0) {\n                            inRegexp = true;\n                        }\n                        else {\n                            inArgument = true;\n                        }\n                    }\n                    if (char === ',') {\n                        parts.push(selector.slice(lastComaIndex + 1, index).trim());\n                        lastComaIndex = index;\n                        inArgument = false;\n                    }\n                }\n            }\n            lastCharIsBackslash = char === '\\\\';\n        }\n        parts.push(selector.slice(lastComaIndex + 1).trim());\n        if (parts.length === 0) {\n            return undefined;\n        }\n        const args = parts\n            .slice(1)\n            .map((part) => {\n            if ((part.startsWith(`'`) && part.endsWith(`'`)) ||\n                (part.startsWith(`\"`) && part.endsWith(`\"`))) {\n                return part.substring(1, part.length - 1);\n            }\n            return part;\n        })\n            .map((part) => part\n            .replace(REGEXP_UNICODE_COMMA, ',')\n            .replace(REGEXP_UNICODE_BACKSLASH, '\\\\')\n            .replace(REGEXP_ESCAPED_COMMA, ','));\n        return { name: parts[0], args };\n    }\n    getScript(js) {\n        const parsed = this.parseScript();\n        if (parsed === undefined) {\n            return undefined;\n        }\n        const { name, args } = parsed;\n        let script = js.get(name);\n        if (script !== undefined) {\n            for (let i = 0; i < args.length; i += 1) {\n                // escape some characters so they wont get evaluated with escape characters during script injection\n                const arg = args[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n                script = script.replace(`{{${i + 1}}}`, arg);\n            }\n            return script;\n        } // TODO - else throw an exception?\n        return undefined;\n    }\n    hasHostnameConstraint() {\n        return this.domains !== undefined;\n    }\n    getId() {\n        if (this.id === undefined) {\n            this.id = computeFilterId(this.mask, this.selector, this.domains, this.style);\n        }\n        return this.id;\n    }\n    hasCustomStyle() {\n        return this.style !== undefined;\n    }\n    getStyle() {\n        return this.style || DEFAULT_HIDDING_STYLE;\n    }\n    getStyleAttributeHash() {\n        return `s${fastHash(this.getStyle())}`;\n    }\n    getSelector() {\n        return this.selector;\n    }\n    getSelectorAST() {\n        return parseCssSelector(this.getSelector());\n    }\n    getExtendedSelector() {\n        return extractHTMLSelectorFromRule(this.selector);\n    }\n    isExtended() {\n        return getBit(this.mask, COSMETICS_MASK.extended);\n    }\n    isRemove() {\n        return getBit(this.mask, COSMETICS_MASK.remove);\n    }\n    isUnhide() {\n        return getBit(this.mask, COSMETICS_MASK.unhide);\n    }\n    isScriptInject() {\n        return getBit(this.mask, COSMETICS_MASK.scriptInject);\n    }\n    isCSS() {\n        return this.isScriptInject() === false;\n    }\n    isIdSelector() {\n        return getBit(this.mask, COSMETICS_MASK.isIdSelector);\n    }\n    isClassSelector() {\n        return getBit(this.mask, COSMETICS_MASK.isClassSelector);\n    }\n    isHrefSelector() {\n        return getBit(this.mask, COSMETICS_MASK.isHrefSelector);\n    }\n    isUnicode() {\n        return getBit(this.mask, COSMETICS_MASK.isUnicode);\n    }\n    isHtmlFiltering() {\n        return this.getSelector().startsWith('^');\n    }\n    // A generic hide cosmetic filter is one that:\n    //\n    // * Do not have a domain specified. \"Hide this element on all domains\"\n    // * Have only domain exceptions specified. \"Hide this element on all domains except example.com\"\n    //\n    // For example: ~example.com##.ad  is a generic filter as well!\n    isGenericHide() {\n        var _a, _b;\n        return ((_a = this === null || this === void 0 ? void 0 : this.domains) === null || _a === void 0 ? void 0 : _a.hostnames) === undefined && ((_b = this === null || this === void 0 ? void 0 : this.domains) === null || _b === void 0 ? void 0 : _b.entities) === undefined;\n    }\n}\n//# sourceMappingURL=cosmetic.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { Domains } from '../engine/domains.js';\nimport { sizeOfNetworkCSP, sizeOfNetworkFilter, sizeOfNetworkHostname, sizeOfNetworkRedirect, sizeOfUTF8, sizeOfRawNetwork, } from '../data-view.js';\nimport { toASCII } from '../punycode.js';\nimport { NORMALIZED_TYPE_TOKEN } from '../request.js';\nimport { TOKENS_BUFFER } from '../tokens-buffer.js';\nimport { bitCount, clearBit, fastHash, fastStartsWith, fastStartsWithFrom, getBit, hasUnicode, isAlpha, isDigit, setBit, tokenizeInPlace, tokenizeRegexInPlace, tokenizeWithWildcardsInPlace, HASH_SEED, HASH_INTERNAL_MULT, findLastIndexOfUnescapedCharacter, } from '../utils.js';\nconst HTTP_HASH = fastHash('http');\nconst HTTPS_HASH = fastHash('https');\nfunction isAllowedHostname(ch) {\n    return (isDigit(ch) || isAlpha(ch) || ch === 95 /* '_' */ || ch === 45 /* '-' */ || ch === 46 /* '.' */);\n}\nconst NORMALIZE_OPTIONS = {\n    'document': 'doc',\n    'first-party': '1p',\n    'generichide': 'ghide',\n    'object-subrequest': 'object',\n    'stylesheet': 'css',\n    'subdocument': 'frame',\n    'third-party': '3p',\n    'xmlhttprequest': 'xhr',\n    '~first-party': '3p',\n    '~third-party': '1p',\n    'all': '',\n};\n/**\n * Normalize a raw filter by replacing options with their canonical forms. For\n * example `||foo.com$stylesheet,first-party,xhr` would be normalized to\n * `||foo.com$css,1p,xhr`.\n */\nconst REGEX = /all|~third-party|~first-party|third-party|first-party|object-subrequest|stylesheet|subdocument|xmlhttprequest|document|generichide/g;\nexport function normalizeRawFilterOptions(rawFilter) {\n    rawFilter = rawFilter.toLowerCase();\n    let indexOfOptions = rawFilter.lastIndexOf('$');\n    if (indexOfOptions === -1) {\n        return rawFilter;\n    }\n    // Remove trailing '*' if possible\n    if (indexOfOptions !== 0 && rawFilter[indexOfOptions - 1] === '*') {\n        rawFilter = rawFilter.slice(0, indexOfOptions - 1) + rawFilter.slice(indexOfOptions);\n        indexOfOptions -= 1;\n    }\n    // Normalize options\n    const options = rawFilter.slice(indexOfOptions + 1);\n    const normalizedOptions = options\n        .replace(REGEX, (option) => {\n        const normalized = NORMALIZE_OPTIONS[option];\n        if (normalized === undefined) {\n            return option;\n        }\n        return normalized;\n    })\n        .split(',')\n        .sort()\n        .join(',');\n    if (options === normalizedOptions) {\n        return rawFilter;\n    }\n    if (normalizedOptions === '') {\n        return rawFilter.slice(0, indexOfOptions);\n    }\n    return `${rawFilter.slice(0, indexOfOptions)}$${normalizedOptions}`;\n}\n/**\n * Masks used to store options of network filters in a bitmask.\n */\nexport var NETWORK_FILTER_MASK;\n(function (NETWORK_FILTER_MASK) {\n    // Request Type\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromDocument\"] = 1] = \"fromDocument\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromFont\"] = 2] = \"fromFont\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromHttp\"] = 4] = \"fromHttp\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromHttps\"] = 8] = \"fromHttps\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromImage\"] = 16] = \"fromImage\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromMedia\"] = 32] = \"fromMedia\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromObject\"] = 64] = \"fromObject\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromOther\"] = 128] = \"fromOther\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromPing\"] = 256] = \"fromPing\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromScript\"] = 512] = \"fromScript\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromStylesheet\"] = 1024] = \"fromStylesheet\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromSubdocument\"] = 2048] = \"fromSubdocument\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromWebsocket\"] = 4096] = \"fromWebsocket\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"fromXmlHttpRequest\"] = 8192] = \"fromXmlHttpRequest\";\n    // Partiness\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"firstParty\"] = 16384] = \"firstParty\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"thirdParty\"] = 32768] = \"thirdParty\";\n    // Options\n    // FREE - 1 << 16\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isBadFilter\"] = 131072] = \"isBadFilter\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isCSP\"] = 262144] = \"isCSP\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isGenericHide\"] = 524288] = \"isGenericHide\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isImportant\"] = 1048576] = \"isImportant\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isSpecificHide\"] = 2097152] = \"isSpecificHide\";\n    // Kind of patterns\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isFullRegex\"] = 4194304] = \"isFullRegex\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isRegex\"] = 8388608] = \"isRegex\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isUnicode\"] = 16777216] = \"isUnicode\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isLeftAnchor\"] = 33554432] = \"isLeftAnchor\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isRightAnchor\"] = 67108864] = \"isRightAnchor\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isException\"] = 134217728] = \"isException\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isHostnameAnchor\"] = 268435456] = \"isHostnameAnchor\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isRedirectRule\"] = 536870912] = \"isRedirectRule\";\n    NETWORK_FILTER_MASK[NETWORK_FILTER_MASK[\"isRedirect\"] = 1073741824] = \"isRedirect\";\n})(NETWORK_FILTER_MASK || (NETWORK_FILTER_MASK = {}));\n/**\n * Mask used when a network filter can be applied on any content type.\n */\nconst FROM_ANY = NETWORK_FILTER_MASK.fromDocument |\n    NETWORK_FILTER_MASK.fromFont |\n    NETWORK_FILTER_MASK.fromImage |\n    NETWORK_FILTER_MASK.fromMedia |\n    NETWORK_FILTER_MASK.fromObject |\n    NETWORK_FILTER_MASK.fromOther |\n    NETWORK_FILTER_MASK.fromPing |\n    NETWORK_FILTER_MASK.fromScript |\n    NETWORK_FILTER_MASK.fromStylesheet |\n    NETWORK_FILTER_MASK.fromSubdocument |\n    NETWORK_FILTER_MASK.fromWebsocket |\n    NETWORK_FILTER_MASK.fromXmlHttpRequest;\n/**\n * Map content type value to mask the corresponding mask.\n * ref: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIContentPolicy\n */\nconst REQUEST_TYPE_TO_MASK = {\n    beacon: NETWORK_FILTER_MASK.fromPing, // fromOther?\n    document: NETWORK_FILTER_MASK.fromDocument,\n    cspviolationreport: NETWORK_FILTER_MASK.fromOther,\n    fetch: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n    font: NETWORK_FILTER_MASK.fromFont,\n    image: NETWORK_FILTER_MASK.fromImage,\n    imageset: NETWORK_FILTER_MASK.fromImage,\n    mainFrame: NETWORK_FILTER_MASK.fromDocument,\n    main_frame: NETWORK_FILTER_MASK.fromDocument,\n    media: NETWORK_FILTER_MASK.fromMedia,\n    object: NETWORK_FILTER_MASK.fromObject,\n    object_subrequest: NETWORK_FILTER_MASK.fromObject,\n    ping: NETWORK_FILTER_MASK.fromPing, // fromOther?\n    script: NETWORK_FILTER_MASK.fromScript,\n    stylesheet: NETWORK_FILTER_MASK.fromStylesheet,\n    subFrame: NETWORK_FILTER_MASK.fromSubdocument,\n    sub_frame: NETWORK_FILTER_MASK.fromSubdocument,\n    webSocket: NETWORK_FILTER_MASK.fromWebsocket,\n    websocket: NETWORK_FILTER_MASK.fromWebsocket,\n    xhr: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n    xmlhttprequest: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n    // Other\n    cspReport: NETWORK_FILTER_MASK.fromOther,\n    csp_report: NETWORK_FILTER_MASK.fromOther,\n    eventsource: NETWORK_FILTER_MASK.fromOther,\n    manifest: NETWORK_FILTER_MASK.fromOther,\n    other: NETWORK_FILTER_MASK.fromOther,\n    prefetch: NETWORK_FILTER_MASK.fromOther,\n    preflight: NETWORK_FILTER_MASK.fromOther,\n    signedexchange: NETWORK_FILTER_MASK.fromOther,\n    speculative: NETWORK_FILTER_MASK.fromOther,\n    texttrack: NETWORK_FILTER_MASK.fromOther,\n    web_manifest: NETWORK_FILTER_MASK.fromOther,\n    xml_dtd: NETWORK_FILTER_MASK.fromOther,\n    xslt: NETWORK_FILTER_MASK.fromOther,\n};\nfunction getListOfRequestTypesNegated(filter) {\n    const types = [];\n    if (filter.fromDocument() === false) {\n        types.push('document');\n    }\n    if (filter.fromImage() === false) {\n        types.push('image');\n    }\n    if (filter.fromMedia() === false) {\n        types.push('media');\n    }\n    if (filter.fromObject() === false) {\n        types.push('object');\n    }\n    if (filter.fromOther() === false) {\n        types.push('other');\n    }\n    if (filter.fromPing() === false) {\n        types.push('ping');\n    }\n    if (filter.fromScript() === false) {\n        types.push('script');\n    }\n    if (filter.fromStylesheet() === false) {\n        types.push('stylesheet');\n    }\n    if (filter.fromSubdocument() === false) {\n        types.push('sub_frame');\n    }\n    if (filter.fromWebsocket() === false) {\n        types.push('websocket');\n    }\n    if (filter.fromXmlHttpRequest() === false) {\n        types.push('xhr');\n    }\n    if (filter.fromFont() === false) {\n        types.push('font');\n    }\n    return types;\n}\nfunction getListOfRequestTypes(filter) {\n    const types = [];\n    if (filter.fromDocument()) {\n        types.push('document');\n    }\n    if (filter.fromImage()) {\n        types.push('image');\n    }\n    if (filter.fromMedia()) {\n        types.push('media');\n    }\n    if (filter.fromObject()) {\n        types.push('object');\n    }\n    if (filter.fromOther()) {\n        types.push('other');\n    }\n    if (filter.fromPing()) {\n        types.push('ping');\n    }\n    if (filter.fromScript()) {\n        types.push('script');\n    }\n    if (filter.fromStylesheet()) {\n        types.push('stylesheet');\n    }\n    if (filter.fromSubdocument()) {\n        types.push('sub_frame');\n    }\n    if (filter.fromWebsocket()) {\n        types.push('websocket');\n    }\n    if (filter.fromXmlHttpRequest()) {\n        types.push('xhr');\n    }\n    if (filter.fromFont()) {\n        types.push('font');\n    }\n    return types;\n}\nfunction computeFilterId(mask, filter, hostname, domains, denyallow, optionValue) {\n    let hash = (HASH_SEED * HASH_INTERNAL_MULT) ^ mask;\n    if (domains !== undefined) {\n        hash = domains.updateId(hash);\n    }\n    if (denyallow !== undefined) {\n        hash = denyallow.updateId(hash);\n    }\n    if (filter !== undefined) {\n        for (let i = 0; i < filter.length; i += 1) {\n            hash = (hash * HASH_INTERNAL_MULT) ^ filter.charCodeAt(i);\n        }\n    }\n    if (hostname !== undefined) {\n        for (let i = 0; i < hostname.length; i += 1) {\n            hash = (hash * HASH_INTERNAL_MULT) ^ hostname.charCodeAt(i);\n        }\n    }\n    if (optionValue !== undefined) {\n        for (let i = 0; i < optionValue.length; i += 1) {\n            hash = (hash * HASH_INTERNAL_MULT) ^ optionValue.charCodeAt(i);\n        }\n    }\n    return hash >>> 0;\n}\n/**\n * Compiles a filter pattern to a regex. This is only performed *lazily* for\n * filters containing at least a * or ^ symbol. Because Regexes are expansive,\n * we try to convert some patterns to plain filters.\n */\nfunction compileRegex(filter, isLeftAnchor, isRightAnchor, isFullRegex) {\n    if (isFullRegex === true) {\n        return new RegExp(filter.slice(1, filter.length - 1), 'i');\n    }\n    // Escape special regex characters: |.$+?{}()[]\\\n    filter = filter.replace(/([|.$+?{}()[\\]\\\\])/g, '\\\\$1');\n    // * can match anything\n    filter = filter.replace(/\\*/g, '.*');\n    // ^ can match any separator or the end of the pattern\n    filter = filter.replace(/\\^/g, '(?:[^\\\\w\\\\d_.%-]|$)');\n    // Should match end of url\n    if (isRightAnchor) {\n        filter = `${filter}$`;\n    }\n    if (isLeftAnchor) {\n        filter = `^${filter}`;\n    }\n    return new RegExp(filter);\n}\n/**\n * Collects a filter option key until the function sees the special character.\n * This function will stop iterating over the given string if it sees equal sign or comma sign.\n * If there's an equal sign, it means that we'll see the value.\n * Otherwise, if there's a comma sign, it means that the option doesn't have any values.\n */\nfunction getFilterOptionName(line, pos, end) {\n    const start = pos;\n    for (; pos < end; pos++) {\n        const code = line.charCodeAt(pos);\n        if (code === 61 /* '=' */ || code === 44 /* ',' */) {\n            end = pos;\n            break;\n        }\n    }\n    return [pos, line.slice(start, end)];\n}\n/**\n * Collects a filter option value until the function sees the special character.\n * This function respects the escaping characters, so we can safely collect the full value\n * including the special characters which are not allowed normally.\n * This function will stop if it sees a comma sign.\n */\nfunction getFilterOptionValue(line, pos, end) {\n    let start = pos;\n    let value = '';\n    for (; pos < end; pos++) {\n        const code = line.charCodeAt(pos);\n        if (code === 92 /* '\\\\' */) {\n            value += line.slice(start, pos);\n            start = ++pos;\n        }\n        else if (code === 44 /* ',' */) {\n            break;\n        }\n    }\n    if (start - pos !== 0) {\n        value += line.slice(start, pos);\n    }\n    return [pos, value];\n}\n/**\n * Collects an array of filter options from the given index.\n * This function leverages `getFilterOptionKey`, `getFilterOptionValue`, and every extension functions.\n * Depending on the filter option key, the function to collect filter option value can vary.\n * For the generic filter option value, it'll use `getFilterOptionValue` function to get the value.\n */\nfunction getFilterOptions(line, pos, end) {\n    const options = [];\n    let name;\n    let value;\n    for (; pos < end; pos++) {\n        [pos, name] = getFilterOptionName(line, pos, end);\n        if (name !== undefined) {\n            if (line.charCodeAt(pos) === 61 /* '=' */) {\n                pos++;\n            }\n            [pos, value] = getFilterOptionValue(line, pos, end);\n            options.push([name, value]);\n        }\n    }\n    return options;\n}\nconst MATCH_ALL = new RegExp('');\nexport default class NetworkFilter {\n    static parse(line, debug = false) {\n        // Represent options as a bitmask\n        let mask = NETWORK_FILTER_MASK.thirdParty |\n            NETWORK_FILTER_MASK.firstParty |\n            NETWORK_FILTER_MASK.fromHttps |\n            NETWORK_FILTER_MASK.fromHttp;\n        // Temporary masks for positive (e.g.: $script) and negative (e.g.: $~script)\n        // content type options.\n        let cptMaskPositive = 0;\n        let cptMaskNegative = FROM_ANY;\n        let hostname;\n        let domains;\n        let denyallow;\n        let optionValue;\n        // Start parsing\n        let filterIndexStart = 0;\n        let filterIndexEnd = line.length;\n        // @@filter == Exception\n        if (line.charCodeAt(0) === 64 /* '@' */ && line.charCodeAt(1) === 64 /* '@' */) {\n            filterIndexStart += 2;\n            mask = setBit(mask, NETWORK_FILTER_MASK.isException);\n        }\n        // filter$options == Options\n        // ^     ^\n        // |     |\n        // |     optionsIndex\n        // filterIndexStart\n        const optionsIndex = findLastIndexOfUnescapedCharacter(line, '$');\n        if (optionsIndex !== -1 && line.charCodeAt(optionsIndex + 1) !== 47 /* '/' */) {\n            // Parse options and set flags\n            filterIndexEnd = optionsIndex;\n            // --------------------------------------------------------------------- //\n            // parseOptions\n            // --------------------------------------------------------------------- //\n            for (const rawOption of getFilterOptions(line, optionsIndex + 1, line.length)) {\n                const negation = rawOption[0].charCodeAt(0) === 126; /* '~' */\n                const option = negation === true ? rawOption[0].slice(1) : rawOption[0];\n                const value = rawOption[1];\n                switch (option) {\n                    case 'denyallow': {\n                        denyallow = Domains.parse(value.split('|'), debug);\n                        break;\n                    }\n                    case 'domain':\n                    case 'from': {\n                        // domain list starting or ending with '|' is invalid\n                        if (value.charCodeAt(0) === 124 /* '|' */ ||\n                            value.charCodeAt(value.length - 1) === 124 /* '|' */) {\n                            return null;\n                        }\n                        domains = Domains.parse(value.split('|'), debug);\n                        break;\n                    }\n                    case 'badfilter':\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isBadFilter);\n                        break;\n                    case 'important':\n                        // Note: `negation` should always be `false` here.\n                        if (negation) {\n                            return null;\n                        }\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isImportant);\n                        break;\n                    case 'match-case':\n                        // Note: `negation` should always be `false` here.\n                        if (negation) {\n                            return null;\n                        }\n                        // We currently consider all filters to be case-insensitive.\n                        break;\n                    case '3p':\n                    case 'third-party':\n                        if (negation) {\n                            // ~third-party means we should clear the flag\n                            mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n                        }\n                        else {\n                            // third-party means ~first-party\n                            mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n                        }\n                        break;\n                    case '1p':\n                    case 'first-party':\n                        if (negation) {\n                            // ~first-party means we should clear the flag\n                            mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n                        }\n                        else {\n                            // first-party means ~third-party\n                            mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n                        }\n                        break;\n                    case 'redirect-rule':\n                    case 'redirect':\n                        // Negation of redirection doesn't make sense\n                        if (negation) {\n                            return null;\n                        }\n                        // Ignore this filter if no redirection resource is specified\n                        if (value.length === 0) {\n                            return null;\n                        }\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isRedirect);\n                        if (option === 'redirect-rule') {\n                            mask = setBit(mask, NETWORK_FILTER_MASK.isRedirectRule);\n                        }\n                        optionValue = value;\n                        break;\n                    case 'csp':\n                        if (negation) {\n                            return null;\n                        }\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n                        if (value.length > 0) {\n                            optionValue = value;\n                        }\n                        break;\n                    case 'ehide':\n                    case 'elemhide':\n                        if (negation) {\n                            return null;\n                        }\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n                        break;\n                    case 'shide':\n                    case 'specifichide':\n                        if (negation) {\n                            return null;\n                        }\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n                        break;\n                    case 'ghide':\n                    case 'generichide':\n                        if (negation) {\n                            return null;\n                        }\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n                        break;\n                    case 'inline-script':\n                        if (negation) {\n                            return null;\n                        }\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n                        optionValue =\n                            \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n                        break;\n                    case 'inline-font':\n                        if (negation) {\n                            return null;\n                        }\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n                        optionValue =\n                            \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n                        break;\n                    default: {\n                        // Handle content type options separatly\n                        let optionMask = 0;\n                        switch (option) {\n                            case 'all':\n                                if (negation) {\n                                    return null;\n                                }\n                                // NOTE: Currently a filter cannot be both blocking and CSP, so\n                                // we will have to create multiple filters to keep the semantics\n                                // of 'all'.\n                                // mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n                                // csp = [\n                                //   \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                                //   \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                                // ].join('; ');\n                                break;\n                            case 'image':\n                                optionMask = NETWORK_FILTER_MASK.fromImage;\n                                break;\n                            case 'media':\n                                optionMask = NETWORK_FILTER_MASK.fromMedia;\n                                break;\n                            case 'object':\n                            case 'object-subrequest':\n                                optionMask = NETWORK_FILTER_MASK.fromObject;\n                                break;\n                            case 'other':\n                                optionMask = NETWORK_FILTER_MASK.fromOther;\n                                break;\n                            case 'ping':\n                            case 'beacon':\n                                optionMask = NETWORK_FILTER_MASK.fromPing;\n                                break;\n                            case 'script':\n                                optionMask = NETWORK_FILTER_MASK.fromScript;\n                                break;\n                            case 'css':\n                            case 'stylesheet':\n                                optionMask = NETWORK_FILTER_MASK.fromStylesheet;\n                                break;\n                            case 'frame':\n                            case 'subdocument':\n                                optionMask = NETWORK_FILTER_MASK.fromSubdocument;\n                                break;\n                            case 'xhr':\n                            case 'xmlhttprequest':\n                                optionMask = NETWORK_FILTER_MASK.fromXmlHttpRequest;\n                                break;\n                            case 'websocket':\n                                optionMask = NETWORK_FILTER_MASK.fromWebsocket;\n                                break;\n                            case 'font':\n                                optionMask = NETWORK_FILTER_MASK.fromFont;\n                                break;\n                            case 'doc':\n                            case 'document':\n                                optionMask = NETWORK_FILTER_MASK.fromDocument;\n                                break;\n                            default:\n                                // Disable this filter if we don't support all the options\n                                return null;\n                        }\n                        // We got a valid cpt option, update mask\n                        if (negation) {\n                            cptMaskNegative = clearBit(cptMaskNegative, optionMask);\n                        }\n                        else {\n                            cptMaskPositive = setBit(cptMaskPositive, optionMask);\n                        }\n                        break;\n                    }\n                }\n            }\n            // End of option parsing\n            // --------------------------------------------------------------------- //\n        }\n        if (cptMaskPositive === 0) {\n            mask |= cptMaskNegative;\n        }\n        else if (cptMaskNegative === FROM_ANY) {\n            mask |= cptMaskPositive;\n        }\n        else {\n            mask |= cptMaskPositive & cptMaskNegative;\n        }\n        // Identify kind of pattern\n        let filter;\n        // Detect Regexps (i.e.: /pattern/)\n        if (filterIndexEnd - filterIndexStart >= 2 &&\n            line.charCodeAt(filterIndexStart) === 47 /* '/' */ &&\n            line.charCodeAt(filterIndexEnd - 1) === 47 /* '/' */) {\n            // Some extra ideas which could be applied to RegExp filters:\n            // * convert rules without any special RegExp syntax to plain patterns\n            // * remove extra `isFullRegex` flag since `isRegex` might be enough\n            // * apply some optimizations on the fly: /^https?:\\\\/\\\\/rest => isHttp + isHttps + rest\n            filter = line.slice(filterIndexStart, filterIndexEnd);\n            // Validate RegExp to make sure this rule is fine\n            try {\n                compileRegex(filter, false /* isLeftAnchor */, false /* isRightAnchor */, true /* isFullRegex */);\n            }\n            catch (ex) {\n                return null; // invalid RegExp\n            }\n            mask = setBit(mask, NETWORK_FILTER_MASK.isFullRegex);\n        }\n        else {\n            // Deal with hostname pattern\n            if (filterIndexEnd > 0 && line.charCodeAt(filterIndexEnd - 1) === 124 /* '|' */) {\n                mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n                filterIndexEnd -= 1;\n            }\n            if (filterIndexStart < filterIndexEnd &&\n                line.charCodeAt(filterIndexStart) === 124 /* '|' */) {\n                if (filterIndexStart < filterIndexEnd - 1 &&\n                    line.charCodeAt(filterIndexStart + 1) === 124 /* '|' */) {\n                    mask = setBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n                    filterIndexStart += 2;\n                }\n                else {\n                    mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                    filterIndexStart += 1;\n                }\n            }\n            // const isRegex = checkIsRegex(line, filterIndexStart, filterIndexEnd);\n            // mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isRegex, isRegex);\n            if (getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor)) {\n                // Split at the first character which is not allowed in a hostname\n                let firstSeparator = filterIndexStart;\n                while (firstSeparator < filterIndexEnd &&\n                    isAllowedHostname(line.charCodeAt(firstSeparator)) === true) {\n                    firstSeparator += 1;\n                }\n                // No separator found so hostname has full length\n                if (firstSeparator === filterIndexEnd) {\n                    hostname = line.slice(filterIndexStart, filterIndexEnd);\n                    filterIndexStart = filterIndexEnd;\n                    // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                }\n                else {\n                    // Found a separator\n                    hostname = line.slice(filterIndexStart, firstSeparator);\n                    filterIndexStart = firstSeparator;\n                    const separatorCode = line.charCodeAt(firstSeparator);\n                    if (separatorCode === 94 /* '^' */) {\n                        // If the only symbol remaining for the selector is '^' then ignore it\n                        // but set the filter as right anchored since there should not be any\n                        // other label on the right\n                        if (filterIndexEnd - filterIndexStart === 1) {\n                            filterIndexStart = filterIndexEnd;\n                            mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n                        }\n                        else {\n                            mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n                            mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                        }\n                    }\n                    else if (separatorCode === 42 /* '*' */) {\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n                        // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                    }\n                    else {\n                        mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                    }\n                }\n            }\n            // Remove trailing '*'\n            if (filterIndexEnd - filterIndexStart > 0 &&\n                line.charCodeAt(filterIndexEnd - 1) === 42 /* '*' */) {\n                filterIndexEnd -= 1;\n            }\n            // Remove leading '*' if the filter is not hostname anchored.\n            if (getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor) === false &&\n                filterIndexEnd - filterIndexStart > 0 &&\n                line.charCodeAt(filterIndexStart) === 42 /* '*' */) {\n                mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                filterIndexStart += 1;\n            }\n            // Transform filters on protocol (http, https, ws)\n            if (getBit(mask, NETWORK_FILTER_MASK.isLeftAnchor)) {\n                if (filterIndexEnd - filterIndexStart === 5 &&\n                    fastStartsWithFrom(line, 'ws://', filterIndexStart)) {\n                    mask = setBit(mask, NETWORK_FILTER_MASK.fromWebsocket);\n                    mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                    mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n                    mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n                    filterIndexStart = filterIndexEnd;\n                }\n                else if (filterIndexEnd - filterIndexStart === 7 &&\n                    fastStartsWithFrom(line, 'http://', filterIndexStart)) {\n                    mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n                    mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n                    mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                    filterIndexStart = filterIndexEnd;\n                }\n                else if (filterIndexEnd - filterIndexStart === 8 &&\n                    fastStartsWithFrom(line, 'https://', filterIndexStart)) {\n                    mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n                    mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n                    mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                    filterIndexStart = filterIndexEnd;\n                }\n                else if (filterIndexEnd - filterIndexStart === 8 &&\n                    fastStartsWithFrom(line, 'http*://', filterIndexStart)) {\n                    mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n                    mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n                    mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n                    filterIndexStart = filterIndexEnd;\n                }\n            }\n            if (filterIndexEnd - filterIndexStart > 0) {\n                filter = line.slice(filterIndexStart, filterIndexEnd).toLowerCase();\n                mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, hasUnicode(filter));\n                if (getBit(mask, NETWORK_FILTER_MASK.isRegex) === false) {\n                    mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isRegex, checkIsRegex(filter, 0, filter.length));\n                }\n            }\n            // TODO\n            // - ignore hostname anchor is not hostname provided\n            if (hostname !== undefined) {\n                hostname = hostname.toLowerCase();\n                if (hasUnicode(hostname)) {\n                    mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, true);\n                    hostname = toASCII(hostname);\n                }\n            }\n        }\n        return new NetworkFilter({\n            filter,\n            hostname,\n            mask,\n            domains,\n            denyallow,\n            optionValue,\n            rawLine: debug === true ? line : undefined,\n            regex: undefined,\n        });\n    }\n    /**\n     * Deserialize network filters. The code accessing the buffer should be\n     * symetrical to the one in `serializeNetworkFilter`.\n     */\n    static deserialize(buffer) {\n        const mask = buffer.getUint32();\n        const optionalParts = buffer.getUint8();\n        const isUnicode = getBit(mask, NETWORK_FILTER_MASK.isUnicode);\n        // The order of these statements is important. Since `buffer.getX()` will\n        // internally increment the position of next byte to read, they need to be\n        // retrieved in the exact same order they were serialized (check\n        // `serializeNetworkFilter`).\n        return new NetworkFilter({\n            // Mandatory field\n            mask,\n            // Optional parts\n            filter: (optionalParts & 1) === 1\n                ? isUnicode\n                    ? buffer.getUTF8()\n                    : buffer.getNetworkFilter()\n                : undefined,\n            hostname: (optionalParts & 2) === 2 ? buffer.getNetworkHostname() : undefined,\n            domains: (optionalParts & 4) === 4 ? Domains.deserialize(buffer) : undefined,\n            rawLine: (optionalParts & 8) === 8 ? buffer.getRawNetwork() : undefined,\n            denyallow: (optionalParts & 16) === 16 ? Domains.deserialize(buffer) : undefined,\n            optionValue: (optionalParts & 32) === 32\n                ? getBit(mask, NETWORK_FILTER_MASK.isCSP)\n                    ? buffer.getNetworkCSP()\n                    : getBit(mask, NETWORK_FILTER_MASK.isRedirect)\n                        ? buffer.getNetworkRedirect()\n                        : buffer.getUTF8()\n                : undefined,\n            regex: undefined,\n        });\n    }\n    constructor({ filter, hostname, mask, domains, denyallow, optionValue, rawLine, regex, }) {\n        this.filter = filter;\n        this.hostname = hostname;\n        this.mask = mask;\n        this.domains = domains;\n        this.denyallow = denyallow;\n        this.optionValue = optionValue;\n        this.rawLine = rawLine;\n        this.id = undefined;\n        this.regex = regex;\n    }\n    get csp() {\n        if (!this.isCSP()) {\n            return undefined;\n        }\n        return this.optionValue;\n    }\n    get redirect() {\n        if (!this.isRedirect()) {\n            return undefined;\n        }\n        return this.optionValue;\n    }\n    isCosmeticFilter() {\n        return false;\n    }\n    isNetworkFilter() {\n        return true;\n    }\n    match(request) {\n        return checkOptions(this, request) && checkPattern(this, request);\n    }\n    /**\n     * To allow for a more compact representation of network filters, the\n     * representation is composed of a mandatory header, and some optional\n     *\n     * Header:\n     * =======\n     *\n     *  | opt | mask\n     *     8     32\n     *\n     * For an empty filter having no pattern, hostname, the minimum size is: 42 bits.\n     *\n     * Then for each optional part (filter, hostname optDomains, optNotDomains,\n     * redirect), it takes 16 bits for the length of the string + the length of the\n     * string in bytes.\n     *\n     * The optional parts are written in order of there number of occurrence in the\n     * filter list used by the adblocker. The most common being `hostname`, then\n     * `filter`, `optDomains`, `optNotDomains`, `redirect`.\n     *\n     * Example:\n     * ========\n     *\n     * @@||cliqz.com would result in a serialized version:\n     *\n     * | 1 | mask | 9 | c | l | i | q | z | . | c | o | m  (16 bytes)\n     *\n     * In this case, the serialized version is actually bigger than the original\n     * filter, but faster to deserialize. In the future, we could optimize the\n     * representation to compact small filters better.\n     *\n     * Ideas:\n     *  * variable length encoding for the mask (if not option, take max 1 byte).\n     *  * first byte could contain the mask as well if small enough.\n     *  * when packing ascii string, store several of them in each byte.\n     */\n    serialize(buffer) {\n        buffer.pushUint32(this.mask);\n        const index = buffer.getPos();\n        buffer.pushUint8(0);\n        // This bit-mask indicates which optional parts of the filter were serialized.\n        let optionalParts = 0;\n        if (this.filter !== undefined) {\n            optionalParts |= 1;\n            if (this.isUnicode()) {\n                buffer.pushUTF8(this.filter);\n            }\n            else {\n                buffer.pushNetworkFilter(this.filter);\n            }\n        }\n        if (this.hostname !== undefined) {\n            optionalParts |= 2;\n            buffer.pushNetworkHostname(this.hostname);\n        }\n        if (this.domains !== undefined) {\n            optionalParts |= 4;\n            this.domains.serialize(buffer);\n        }\n        if (this.rawLine !== undefined) {\n            optionalParts |= 8;\n            buffer.pushRawNetwork(this.rawLine);\n        }\n        if (this.denyallow !== undefined) {\n            optionalParts |= 16;\n            this.denyallow.serialize(buffer);\n        }\n        if (this.optionValue !== undefined) {\n            optionalParts |= 32;\n            if (this.isCSP()) {\n                buffer.pushNetworkCSP(this.optionValue);\n            }\n            else if (this.isRedirect()) {\n                buffer.pushNetworkRedirect(this.optionValue);\n            }\n            else {\n                buffer.pushUTF8(this.optionValue);\n            }\n        }\n        buffer.setByte(index, optionalParts);\n    }\n    getSerializedSize(compression) {\n        let estimate = 4 + 1; // mask = 4 bytes // optional parts = 1 byte\n        if (this.filter !== undefined) {\n            if (this.isUnicode() === true) {\n                estimate += sizeOfUTF8(this.filter);\n            }\n            else {\n                estimate += sizeOfNetworkFilter(this.filter, compression);\n            }\n        }\n        if (this.hostname !== undefined) {\n            estimate += sizeOfNetworkHostname(this.hostname, compression);\n        }\n        if (this.domains !== undefined) {\n            estimate += this.domains.getSerializedSize();\n        }\n        if (this.rawLine !== undefined) {\n            estimate += sizeOfRawNetwork(this.rawLine, compression);\n        }\n        if (this.denyallow !== undefined) {\n            estimate += this.denyallow.getSerializedSize();\n        }\n        if (this.optionValue !== undefined) {\n            if (this.isCSP()) {\n                estimate += sizeOfNetworkCSP(this.optionValue, compression);\n            }\n            else if (this.isRedirect()) {\n                estimate += sizeOfNetworkRedirect(this.optionValue, compression);\n            }\n            else {\n                estimate += sizeOfUTF8(this.optionValue);\n            }\n        }\n        return estimate;\n    }\n    /**\n     * Tries to recreate the original representation of the filter (adblock\n     * syntax) from the internal representation. If `rawLine` is set (when filters\n     * are parsed in `debug` mode for example), then it is returned directly.\n     * Otherwise, we try to stick as closely as possible to the original form;\n     * there are things which cannot be recovered though, like domains options\n     * of which only hashes are stored.\n     */\n    toString(modifierReplacer) {\n        if (this.rawLine !== undefined) {\n            return this.rawLine;\n        }\n        let filter = '';\n        if (this.isException()) {\n            filter += '@@';\n        }\n        if (this.isHostnameAnchor()) {\n            filter += '||';\n        }\n        else if (this.fromHttp() !== this.fromHttps()) {\n            if (this.fromHttp()) {\n                filter += '|http://';\n            }\n            else {\n                filter += '|https://';\n            }\n        }\n        else if (this.isLeftAnchor()) {\n            filter += '|';\n        }\n        if (this.hasHostname()) {\n            filter += this.getHostname();\n            filter += '^';\n        }\n        if (this.isFullRegex()) {\n            filter += `/${this.getRegex().source}/`;\n        }\n        else if (this.isRegex()) {\n            filter += this.getRegex().source;\n        }\n        else {\n            filter += this.getFilter();\n        }\n        if (this.isRightAnchor() && filter[filter.length - 1] !== '^') {\n            filter += '|';\n        }\n        // Options\n        const options = [];\n        if (this.fromAny() === false) {\n            const numberOfCptOptions = bitCount(this.getCptMask());\n            const numberOfNegatedOptions = bitCount(FROM_ANY) - numberOfCptOptions;\n            if (numberOfNegatedOptions < numberOfCptOptions) {\n                for (const type of getListOfRequestTypesNegated(this)) {\n                    options.push(`~${type}`);\n                }\n            }\n            else {\n                for (const type of getListOfRequestTypes(this)) {\n                    options.push(type);\n                }\n            }\n        }\n        if (this.isImportant()) {\n            options.push('important');\n        }\n        if (this.isRedirectRule()) {\n            if (this.optionValue === '') {\n                options.push('redirect-rule');\n            }\n            else {\n                options.push(`redirect-rule=${this.optionValue}`);\n            }\n        }\n        else if (this.isRedirect()) {\n            if (this.optionValue === '') {\n                options.push('redirect');\n            }\n            else {\n                options.push(`redirect=${this.optionValue}`);\n            }\n        }\n        if (this.isCSP()) {\n            options.push(`csp=${this.optionValue}`);\n        }\n        if (this.isElemHide()) {\n            options.push('elemhide');\n        }\n        if (this.isSpecificHide()) {\n            options.push('specifichide');\n        }\n        if (this.isGenericHide()) {\n            options.push('generichide');\n        }\n        if (this.firstParty() !== this.thirdParty()) {\n            if (this.firstParty()) {\n                options.push('1p');\n            }\n            if (this.thirdParty()) {\n                options.push('3p');\n            }\n        }\n        if (this.domains !== undefined) {\n            if (this.domains.parts !== undefined) {\n                options.push(`domain=${this.domains.parts}`);\n            }\n            else {\n                options.push('domain=<hashed>');\n            }\n        }\n        if (this.denyallow !== undefined) {\n            if (this.denyallow.parts !== undefined) {\n                options.push(`denyallow=${this.denyallow.parts}`);\n            }\n            else {\n                options.push('denyallow=<hashed>');\n            }\n        }\n        if (this.isBadFilter()) {\n            options.push('badfilter');\n        }\n        if (options.length > 0) {\n            if (typeof modifierReplacer === 'function') {\n                filter += `$${options.map(modifierReplacer).join(',')}`;\n            }\n            else {\n                filter += `$${options.join(',')}`;\n            }\n        }\n        return filter;\n    }\n    // Public API (Read-Only)\n    getIdWithoutBadFilter() {\n        // This method computes the id ignoring the $badfilter option (which will\n        // correspond to the ID of filters being discarded). This allows us to\n        // eliminate bad filters by comparing IDs, which is more robust and faster\n        // than string comparison.\n        return computeFilterId(this.mask & ~NETWORK_FILTER_MASK.isBadFilter, this.filter, this.hostname, this.domains, this.denyallow, this.optionValue);\n    }\n    getId() {\n        if (this.id === undefined) {\n            this.id = computeFilterId(this.mask, this.filter, this.hostname, this.domains, this.denyallow, this.optionValue);\n        }\n        return this.id;\n    }\n    hasFilter() {\n        return this.filter !== undefined;\n    }\n    hasDomains() {\n        return this.domains !== undefined;\n    }\n    getMask() {\n        return this.mask;\n    }\n    getCptMask() {\n        return this.getMask() & FROM_ANY;\n    }\n    isRedirect() {\n        return getBit(this.getMask(), NETWORK_FILTER_MASK.isRedirect);\n    }\n    isRedirectRule() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isRedirectRule);\n    }\n    getRedirect() {\n        var _a;\n        return (_a = this.optionValue) !== null && _a !== void 0 ? _a : '';\n    }\n    hasHostname() {\n        return this.hostname !== undefined;\n    }\n    getHostname() {\n        return this.hostname || '';\n    }\n    getFilter() {\n        return this.filter || '';\n    }\n    getRegex() {\n        if (this.regex === undefined) {\n            this.regex =\n                this.filter !== undefined && this.isRegex()\n                    ? compileRegex(this.filter, this.isLeftAnchor(), this.isRightAnchor(), this.isFullRegex())\n                    : MATCH_ALL;\n        }\n        return this.regex;\n    }\n    getTokens() {\n        TOKENS_BUFFER.reset();\n        // If there is only one domain and no domain negation, we also use this\n        // domain as a token.\n        if (this.domains !== undefined &&\n            this.domains.hostnames !== undefined &&\n            this.domains.entities === undefined &&\n            this.domains.notHostnames === undefined &&\n            this.domains.notEntities === undefined &&\n            this.domains.hostnames.length === 1) {\n            TOKENS_BUFFER.push(this.domains.hostnames[0]);\n        }\n        // Get tokens from filter\n        if (this.isFullRegex() === false) {\n            if (this.filter !== undefined) {\n                const skipLastToken = !this.isRightAnchor();\n                const skipFirstToken = !this.isLeftAnchor();\n                tokenizeWithWildcardsInPlace(this.filter, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n            }\n            // Append tokens from hostname, if any\n            if (this.hostname !== undefined) {\n                tokenizeInPlace(this.hostname, false, this.filter !== undefined && this.filter.charCodeAt(0) === 42 /* '*' */, TOKENS_BUFFER);\n            }\n        }\n        else if (this.filter !== undefined) {\n            tokenizeRegexInPlace(this.filter, TOKENS_BUFFER);\n        }\n        // If we got no tokens for the filter/hostname part, then we will dispatch\n        // this filter in multiple buckets based on the domains option.\n        if (TOKENS_BUFFER.empty() === true &&\n            this.domains !== undefined &&\n            this.domains.hostnames !== undefined &&\n            this.domains.entities === undefined &&\n            this.domains.notHostnames === undefined &&\n            this.domains.notEntities === undefined) {\n            const result = [];\n            for (const hostname of this.domains.hostnames) {\n                const arr = new Uint32Array(1);\n                arr[0] = hostname;\n                result.push(arr);\n            }\n            return result;\n        }\n        // Add optional token for types\n        if (TOKENS_BUFFER.empty() === true && this.fromAny() === false) {\n            const types = getListOfRequestTypes(this);\n            if (types.length !== 0) {\n                const result = [];\n                for (const type of types) {\n                    const arr = new Uint32Array(1);\n                    arr[0] = NORMALIZED_TYPE_TOKEN[type];\n                    result.push(arr);\n                }\n                return result;\n            }\n        }\n        // Add optional token for protocol\n        if (this.fromHttp() === true && this.fromHttps() === false) {\n            TOKENS_BUFFER.push(HTTP_HASH);\n        }\n        else if (this.fromHttps() === true && this.fromHttp() === false) {\n            TOKENS_BUFFER.push(HTTPS_HASH);\n        }\n        return [TOKENS_BUFFER.slice()];\n    }\n    /**\n     * Check if this filter should apply to a request with this content type.\n     */\n    isCptAllowed(cpt) {\n        const mask = REQUEST_TYPE_TO_MASK[cpt];\n        if (mask !== undefined) {\n            return getBit(this.mask, mask);\n        }\n        // If content type is not supported (or not specified), we return `true`\n        // only if the filter does not specify any resource type.\n        return this.fromAny();\n    }\n    isException() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isException);\n    }\n    isHostnameAnchor() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n    }\n    isRightAnchor() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isRightAnchor);\n    }\n    isLeftAnchor() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isLeftAnchor);\n    }\n    isImportant() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isImportant);\n    }\n    isFullRegex() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex);\n    }\n    isRegex() {\n        return (getBit(this.mask, NETWORK_FILTER_MASK.isRegex) ||\n            getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex));\n    }\n    isPlain() {\n        return !this.isRegex();\n    }\n    isCSP() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isCSP);\n    }\n    isElemHide() {\n        return this.isSpecificHide() && this.isGenericHide();\n    }\n    isSpecificHide() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isSpecificHide);\n    }\n    isGenericHide() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isGenericHide);\n    }\n    isBadFilter() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isBadFilter);\n    }\n    isUnicode() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.isUnicode);\n    }\n    fromAny() {\n        return this.getCptMask() === FROM_ANY;\n    }\n    thirdParty() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.thirdParty);\n    }\n    firstParty() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.firstParty);\n    }\n    fromImage() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromImage);\n    }\n    fromMedia() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromMedia);\n    }\n    fromObject() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromObject);\n    }\n    fromOther() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromOther);\n    }\n    fromPing() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromPing);\n    }\n    fromScript() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromScript);\n    }\n    fromStylesheet() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromStylesheet);\n    }\n    fromDocument() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromDocument);\n    }\n    fromSubdocument() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromSubdocument);\n    }\n    fromWebsocket() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromWebsocket);\n    }\n    fromHttp() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromHttp);\n    }\n    fromHttps() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromHttps);\n    }\n    fromXmlHttpRequest() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromXmlHttpRequest);\n    }\n    fromFont() {\n        return getBit(this.mask, NETWORK_FILTER_MASK.fromFont);\n    }\n}\n// ---------------------------------------------------------------------------\n// Filter parsing\n// ---------------------------------------------------------------------------\nfunction setNetworkMask(mask, m, value) {\n    if (value === true) {\n        return setBit(mask, m);\n    }\n    return clearBit(mask, m);\n}\n/**\n * Check if the sub-string contained between the indices start and end is a\n * regex filter (it contains a '*' or '^' char).\n */\nfunction checkIsRegex(filter, start, end) {\n    const indexOfSeparator = filter.indexOf('^', start);\n    if (indexOfSeparator !== -1 && indexOfSeparator < end) {\n        return true;\n    }\n    const indexOfWildcard = filter.indexOf('*', start);\n    return indexOfWildcard !== -1 && indexOfWildcard < end;\n}\n/**\n * Handle hostname anchored filters, given 'hostname' from ||hostname and\n * request's hostname, check if there is a match. This is tricky because\n * filters authors rely and different assumptions. We can have prefix of suffix\n * matches of anchor.\n */\nexport function isAnchoredByHostname(filterHostname, hostname, isFollowedByWildcard) {\n    // Corner-case, if `filterHostname` is empty, then it's a match\n    if (filterHostname.length === 0) {\n        return true;\n    }\n    // `filterHostname` cannot be longer than actual hostname\n    if (filterHostname.length > hostname.length) {\n        return false;\n    }\n    // If they have the same length, they should be equal\n    if (filterHostname.length === hostname.length) {\n        return filterHostname === hostname;\n    }\n    // Check if `filterHostname` appears anywhere in `hostname`\n    const matchIndex = hostname.indexOf(filterHostname);\n    // No match\n    if (matchIndex === -1) {\n        return false;\n    }\n    // `filterHostname` is a prefix of `hostname` and needs to match full a label.\n    //\n    // Examples (filterHostname, hostname):\n    //   * (foo, foo.com)\n    //   * (sub.foo, sub.foo.com)\n    if (matchIndex === 0) {\n        return (isFollowedByWildcard === true ||\n            hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n            filterHostname.charCodeAt(filterHostname.length - 1) === 46 /* '.' */);\n    }\n    // `filterHostname` is a suffix of `hostname`.\n    //\n    // Examples (filterHostname, hostname):\n    //    * (foo.com, sub.foo.com)\n    //    * (com, foo.com)\n    if (hostname.length === matchIndex + filterHostname.length) {\n        return (hostname.charCodeAt(matchIndex - 1) === 46 /* '.' */ ||\n            filterHostname.charCodeAt(0) === 46 /* '.' */);\n    }\n    // `filterHostname` is infix of `hostname` and needs match full labels\n    return ((isFollowedByWildcard === true ||\n        hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n        filterHostname.charCodeAt(filterHostname.length - 1) === 46) /* '.' */ &&\n        (hostname.charCodeAt(matchIndex - 1) === 46 || filterHostname.charCodeAt(0) === 46));\n}\n/**\n * Specialize a network filter depending on its type. It allows for more\n * efficient matching function.\n */\nfunction checkPattern(filter, request) {\n    const pattern = filter.getFilter();\n    if (filter.isHostnameAnchor() === true) {\n        // Make sure request is anchored by hostname before proceeding to matching\n        const filterHostname = filter.getHostname();\n        if (isAnchoredByHostname(filterHostname, request.hostname, filter.filter !== undefined && filter.filter.charCodeAt(0) === 42 /* '*' */) === false) {\n            return false;\n        }\n        // At this point we know request is hostname anchored so we match the rest of the filter.\n        if (filter.isRegex()) {\n            // ||pattern*^\n            return filter\n                .getRegex()\n                .test(request.url.slice(request.url.indexOf(filterHostname) + filterHostname.length));\n        }\n        else if (filter.isRightAnchor() && filter.isLeftAnchor()) {\n            // |||pattern|\n            // Since this is not a regex, the filter pattern must follow the hostname\n            // with nothing in between. So we extract the part of the URL following\n            // after hostname and will perform the matching on it.\n            const urlAfterHostname = request.url.slice(request.url.indexOf(filterHostname) + filterHostname.length);\n            // Since it must follow immediatly after the hostname and be a suffix of\n            // the URL, we conclude that filter must be equal to the part of the\n            // url following the hostname.\n            return pattern === urlAfterHostname;\n        }\n        else if (filter.isRightAnchor()) {\n            // ||pattern|\n            const requestHostname = request.hostname;\n            if (filter.hasFilter() === false) {\n                // In this specific case it means that the specified hostname should match\n                // at the end of the hostname of the request. This allows to prevent false\n                // positive like ||foo.bar which would match https://foo.bar.baz where\n                // ||foo.bar^ would not.\n                return (filterHostname.length === requestHostname.length ||\n                    requestHostname.endsWith(filterHostname));\n            }\n            else {\n                // pattern|\n                return request.url.endsWith(pattern);\n            }\n        }\n        else if (filter.isLeftAnchor()) {\n            // ||pattern + left-anchor => This means that a plain pattern needs to appear\n            // exactly after the hostname, with nothing in between.\n            // Since this is not a regex, the filter pattern must follow the hostname\n            // with nothing in between. So we extract the part of the URL following\n            // after hostname and will perform the matching on it.\n            return fastStartsWithFrom(request.url, pattern, request.url.indexOf(filterHostname) + filterHostname.length);\n        }\n        if (filter.hasFilter() === false) {\n            return true;\n        }\n        // We consider this a match if the plain patter (i.e.: filter) appears anywhere.\n        return (request.url.indexOf(pattern, request.url.indexOf(filterHostname) + filterHostname.length) !==\n            -1);\n    }\n    else if (filter.isRegex()) {\n        // pattern*^\n        return filter.getRegex().test(request.url);\n    }\n    else if (filter.isLeftAnchor() && filter.isRightAnchor()) {\n        // |pattern|\n        return request.url === pattern;\n    }\n    else if (filter.isLeftAnchor()) {\n        // |pattern\n        return fastStartsWith(request.url, pattern);\n    }\n    else if (filter.isRightAnchor()) {\n        // pattern|\n        return request.url.endsWith(pattern);\n    }\n    // pattern\n    if (filter.hasFilter() === false) {\n        return true;\n    }\n    return request.url.indexOf(pattern) !== -1;\n}\nfunction checkOptions(filter, request) {\n    // We first discard requests based on type, protocol and party. This is really\n    // cheap and should be done first.\n    if (filter.isCptAllowed(request.type) === false ||\n        (request.isHttps === true && filter.fromHttps() === false) ||\n        (request.isHttp === true && filter.fromHttp() === false) ||\n        (filter.firstParty() === false && request.isFirstParty === true) ||\n        (filter.thirdParty() === false && request.isThirdParty === true)) {\n        return false;\n    }\n    // If `sourceHostname` is *not* matched by `domain` then the request should be allowed.\n    if (filter.domains !== undefined &&\n        filter.domains.match(request.sourceHostnameHashes, request.sourceEntityHashes) === false) {\n        return false;\n    }\n    // If `hostname` is matched by `denyallow` then the request should be allowed.\n    if (filter.denyallow !== undefined &&\n        filter.denyallow.match(request.getHostnameHashes(), request.getEntityHashes()) === true) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=network.js.map","import { sizeOfUTF8 } from './data-view.js';\nexport class Env extends Map {\n}\nexport var PreprocessorTokens;\n(function (PreprocessorTokens) {\n    PreprocessorTokens[PreprocessorTokens[\"INVALID\"] = 0] = \"INVALID\";\n    PreprocessorTokens[PreprocessorTokens[\"BEGIF\"] = 1] = \"BEGIF\";\n    PreprocessorTokens[PreprocessorTokens[\"ELSE\"] = 2] = \"ELSE\";\n    PreprocessorTokens[PreprocessorTokens[\"ENDIF\"] = 3] = \"ENDIF\";\n})(PreprocessorTokens || (PreprocessorTokens = {}));\nexport function detectPreprocessor(line) {\n    // Minimum size of a valid condition should be 6 for something like: \"!#if x\" or \"!#else\"\n    if (line.length < 6 ||\n        line.charCodeAt(0) !== 33 /* '!' */ ||\n        line.charCodeAt(1) !== 35 /* '#' */) {\n        return PreprocessorTokens.INVALID;\n    }\n    if (line.startsWith('!#if ')) {\n        return PreprocessorTokens.BEGIF;\n    }\n    if (line.startsWith('!#else')) {\n        return PreprocessorTokens.ELSE;\n    }\n    if (line.startsWith('!#endif')) {\n        return PreprocessorTokens.ENDIF;\n    }\n    return PreprocessorTokens.INVALID;\n}\nconst tokenizerPattern = /(!|&&|\\|\\||\\(|\\)|[a-zA-Z0-9_]+)/g;\nconst identifierPattern = /^[a-zA-Z0-9_]+$/;\nconst tokenize = (expression) => expression.match(tokenizerPattern);\nconst isIdentifier = (expression) => identifierPattern.test(expression);\nconst precedence = {\n    '!': 2,\n    '&&': 1,\n    '||': 0,\n};\nconst isOperator = (token) => Object.prototype.hasOwnProperty.call(precedence, token);\nconst testIdentifier = (identifier, env) => {\n    if (identifier === 'true' && !env.has('true')) {\n        return true;\n    }\n    if (identifier === 'false' && !env.has('false')) {\n        return false;\n    }\n    return !!env.get(identifier);\n};\n/// The parsing is done using the [Shunting yard algorithm](https://en.wikipedia.org/wiki/Shunting_yard_algorithm).\n/// This function takes as input a string expression and an environment Map.\n/// The expression is made of constants (identifiers), logical operators\n/// (&&, ||), negations (!constant) and parentheses.\n///\n/// The environment is a simple Map that associates identifiers to boolean values.\n///\n/// The function should return the result of evaluating the expression using\n/// the values from `environment`. The return value of this function is\n/// either `true` or `false`.\nexport const evaluate = (expression, env) => {\n    if (expression.length === 0) {\n        return false;\n    }\n    if (isIdentifier(expression)) {\n        if (expression[0] === '!') {\n            return !testIdentifier(expression.slice(1), env);\n        }\n        return testIdentifier(expression, env);\n    }\n    const tokens = tokenize(expression);\n    if (!tokens || tokens.length === 0) {\n        return false;\n    }\n    // Exit if an unallowed character found.\n    // Since we're tokenizing via String.prototype.match function,\n    // the total length of matched tokens will be different in case\n    // unallowed characters were injected.\n    // However, we expect all spaces were already removed in prior step.\n    if (expression.length !== tokens.reduce((partialSum, token) => partialSum + token.length, 0)) {\n        return false;\n    }\n    const output = [];\n    const stack = [];\n    for (const token of tokens) {\n        if (token === '(') {\n            stack.push(token);\n        }\n        else if (token === ')') {\n            while (stack.length !== 0 && stack[stack.length - 1] !== '(') {\n                output.push(stack.pop());\n            }\n            // If the opening parenthesis doesn't exist\n            if (stack.length === 0) {\n                return false;\n            }\n            stack.pop();\n        }\n        else if (isOperator(token)) {\n            while (stack.length &&\n                isOperator(stack[stack.length - 1]) &&\n                precedence[token] <= precedence[stack[stack.length - 1]]) {\n                output.push(stack.pop());\n            }\n            stack.push(token);\n        }\n        else {\n            output.push(testIdentifier(token, env));\n        }\n    }\n    // If there is incomplete parenthesis\n    if (stack[0] === '(' || stack[0] === ')') {\n        return false;\n    }\n    while (stack.length !== 0) {\n        output.push(stack.pop());\n    }\n    for (const token of output) {\n        if (token === true || token === false) {\n            stack.push(token);\n        }\n        else if (token === '!') {\n            stack.push(!stack.pop());\n        }\n        else if (isOperator(token)) {\n            const right = stack.pop();\n            const left = stack.pop();\n            if (token === '&&') {\n                stack.push(left && right);\n            }\n            else {\n                stack.push(left || right);\n            }\n        }\n    }\n    return stack[0] === true;\n};\nexport default class Preprocessor {\n    static getCondition(line) {\n        return line.slice(5 /* '!#if '.length */).replace(/\\s/g, '');\n    }\n    static parse(line, filterIDs) {\n        return new this({\n            condition: Preprocessor.getCondition(line),\n            filterIDs,\n        });\n    }\n    static deserialize(view) {\n        const condition = view.getUTF8();\n        const filterIDs = new Set();\n        for (let i = 0, l = view.getUint32(); i < l; i++) {\n            filterIDs.add(view.getUint32());\n        }\n        return new this({\n            condition,\n            filterIDs,\n        });\n    }\n    constructor({ condition, filterIDs = new Set(), }) {\n        this.condition = condition;\n        this.filterIDs = filterIDs;\n    }\n    evaluate(env) {\n        return evaluate(this.condition, env);\n    }\n    serialize(view) {\n        view.pushUTF8(this.condition);\n        view.pushUint32(this.filterIDs.size);\n        for (const filterID of this.filterIDs) {\n            view.pushUint32(filterID);\n        }\n    }\n    getSerializedSize() {\n        let estimatedSize = sizeOfUTF8(this.condition);\n        estimatedSize += (1 + this.filterIDs.size) * 4;\n        return estimatedSize;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport Config from './config.js';\nimport CosmeticFilter from './filters/cosmetic.js';\nimport NetworkFilter from './filters/network.js';\nimport Preprocessor, { PreprocessorTokens, detectPreprocessor } from './preprocessor.js';\nimport { fastStartsWith, fastStartsWithFrom } from './utils.js';\nexport var FilterType;\n(function (FilterType) {\n    FilterType[FilterType[\"NOT_SUPPORTED\"] = 0] = \"NOT_SUPPORTED\";\n    FilterType[FilterType[\"NETWORK\"] = 1] = \"NETWORK\";\n    FilterType[FilterType[\"COSMETIC\"] = 2] = \"COSMETIC\";\n    // available only with `extendedNonSupportedTypes` option for #detectFilterType\n    FilterType[FilterType[\"NOT_SUPPORTED_EMPTY\"] = 100] = \"NOT_SUPPORTED_EMPTY\";\n    FilterType[FilterType[\"NOT_SUPPORTED_COMMENT\"] = 101] = \"NOT_SUPPORTED_COMMENT\";\n    FilterType[FilterType[\"NOT_SUPPORTED_ADGUARD\"] = 102] = \"NOT_SUPPORTED_ADGUARD\";\n})(FilterType || (FilterType = {}));\n/**\n * Given a single line (string), checks if this would likely be a cosmetic\n * filter, a network filter or something that is not supported. This check is\n * performed before calling a more specific parser to create an instance of\n * `NetworkFilter` or `CosmeticFilter`.\n */\nexport function detectFilterType(line, { extendedNonSupportedTypes = false } = {}) {\n    // Ignore empty line\n    if (line.length === 0 || line.length === 1) {\n        if (extendedNonSupportedTypes) {\n            return FilterType.NOT_SUPPORTED_EMPTY;\n        }\n        return FilterType.NOT_SUPPORTED;\n    }\n    // Ignore comments\n    const firstCharCode = line.charCodeAt(0);\n    const secondCharCode = line.charCodeAt(1);\n    if (firstCharCode === 33 /* '!' */ ||\n        (firstCharCode === 35 /* '#' */ && secondCharCode <= 32) ||\n        (firstCharCode === 91 /* '[' */ && fastStartsWith(line, '[Adblock'))) {\n        if (extendedNonSupportedTypes) {\n            return FilterType.NOT_SUPPORTED_COMMENT;\n        }\n        return FilterType.NOT_SUPPORTED;\n    }\n    // Fast heuristics to detect network filters\n    const lastCharCode = line.charCodeAt(line.length - 1);\n    if ((firstCharCode === 36 /* '$' */ &&\n        secondCharCode !== 36 &&\n        secondCharCode !== 64) /* $$ and $@ as those may be Adguard HTML filtering rules */ ||\n        firstCharCode === 38 /* '&' */ ||\n        firstCharCode === 42 /* '*' */ ||\n        firstCharCode === 45 /* '-' */ ||\n        firstCharCode === 46 /* '.' */ ||\n        firstCharCode === 47 /* '/' */ ||\n        firstCharCode === 58 /* ':' */ ||\n        firstCharCode === 61 /* '=' */ ||\n        firstCharCode === 63 /* '?' */ ||\n        firstCharCode === 64 /* '@' */ ||\n        firstCharCode === 95 /* '_' */ ||\n        firstCharCode === 124 /* '|' */ ||\n        lastCharCode === 124 /* '|' */) {\n        return FilterType.NETWORK;\n    }\n    // Ignore Adguard cosmetics\n    // `$$` = HTML filtering rules\n    const dollarIndex = line.indexOf('$');\n    if (dollarIndex !== -1 && dollarIndex !== line.length - 1) {\n        const afterDollarIndex = dollarIndex + 1;\n        const afterDollarCharCode = line.charCodeAt(afterDollarIndex);\n        // Ignore Adguard HTML rewrite rules\n        if (afterDollarCharCode === 36 /* '$' */ ||\n            (afterDollarCharCode === 64 /* '@' */ &&\n                fastStartsWithFrom(line, /* $@$ */ '@$', afterDollarIndex))) {\n            if (extendedNonSupportedTypes) {\n                return FilterType.NOT_SUPPORTED_ADGUARD;\n            }\n            return FilterType.NOT_SUPPORTED;\n        }\n    }\n    // Check if filter is cosmetics\n    const sharpIndex = line.indexOf('#');\n    if (sharpIndex !== -1 && sharpIndex !== line.length - 1) {\n        const afterSharpIndex = sharpIndex + 1;\n        const afterSharpCharCode = line.charCodeAt(afterSharpIndex);\n        if (afterSharpCharCode === 35 /* '#'*/ ||\n            (afterSharpCharCode === 64 /* '@' */ &&\n                fastStartsWithFrom(line, /* #@# */ '@#', afterSharpIndex))\n        // TODO - support ADB/AdGuard extended css selectors\n        // || (afterSharpCharCode === 63 /* '?' */ &&\n        //   fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n        ) {\n            // Parse supported cosmetic filter\n            // `##` `#@#`\n            return FilterType.COSMETIC;\n        }\n        else if ((afterSharpCharCode === 64 /* '@'*/ &&\n            (fastStartsWithFrom(line, /* #@$# */ '@$#', afterSharpIndex) ||\n                fastStartsWithFrom(line, /* #@%# */ '@%#', afterSharpIndex) ||\n                fastStartsWithFrom(line, /* #@?# */ '@?#', afterSharpIndex))) ||\n            (afterSharpCharCode === 37 /* '%' */ &&\n                fastStartsWithFrom(line, /* #%# */ '%#', afterSharpIndex)) ||\n            (afterSharpCharCode === 36 /* '$' */ &&\n                (fastStartsWithFrom(line, /* #$# */ '$#', afterSharpIndex) ||\n                    fastStartsWithFrom(line, /* #$?# */ '$?#', afterSharpIndex))) ||\n            (afterSharpCharCode === 63 /* '?' */ &&\n                fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))) {\n            if (extendedNonSupportedTypes) {\n                return FilterType.NOT_SUPPORTED_ADGUARD;\n            }\n            return FilterType.NOT_SUPPORTED;\n        }\n    }\n    // Everything else is a network filter\n    return FilterType.NETWORK;\n}\nexport function parseFilter(filter) {\n    const filterType = detectFilterType(filter);\n    if (filterType === FilterType.NETWORK) {\n        return NetworkFilter.parse(filter, true);\n    }\n    else if (filterType === FilterType.COSMETIC) {\n        return CosmeticFilter.parse(filter, true);\n    }\n    return null;\n}\nexport function f(strings) {\n    return parseFilter(strings[0]);\n}\nexport function parseFilters(list, config = new Config()) {\n    config = new Config(config);\n    const networkFilters = [];\n    const cosmeticFilters = [];\n    const notSupportedFilters = [];\n    const lines = list.split('\\n');\n    const preprocessors = [];\n    const preprocessorStack = [];\n    for (let i = 0; i < lines.length; i += 1) {\n        let line = lines[i];\n        // Check if `line` should be left-trimmed\n        if (line.length !== 0 && line.charCodeAt(0) <= 32) {\n            line = line.trim();\n        }\n        // Handle continuations\n        if (line.length > 2) {\n            while (i < lines.length - 1 &&\n                line.charCodeAt(line.length - 1) === 92 &&\n                line.charCodeAt(line.length - 2) === 32) {\n                line = line.slice(0, -2);\n                const nextLine = lines[i + 1];\n                if (nextLine.length > 4 &&\n                    nextLine.charCodeAt(0) === 32 &&\n                    nextLine.charCodeAt(1) === 32 &&\n                    nextLine.charCodeAt(2) === 32 &&\n                    nextLine.charCodeAt(3) === 32 &&\n                    nextLine.charCodeAt(4) !== 32) {\n                    line += nextLine.slice(4);\n                    i += 1;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        // Check if `line` should be right-trimmed\n        if (line.length !== 0 && line.charCodeAt(line.length - 1) <= 32) {\n            line = line.trim();\n        }\n        // Detect if filter is supported, network or cosmetic\n        const filterType = detectFilterType(line, { extendedNonSupportedTypes: true });\n        if (filterType === FilterType.NETWORK && config.loadNetworkFilters === true) {\n            const filter = NetworkFilter.parse(line, config.debug);\n            if (filter !== null) {\n                networkFilters.push(filter);\n                if (preprocessorStack.length > 0) {\n                    preprocessorStack[preprocessorStack.length - 1].filterIDs.add(filter.getId());\n                }\n            }\n            else {\n                notSupportedFilters.push({\n                    lineNumber: i,\n                    filter: line,\n                    filterType,\n                });\n            }\n        }\n        else if (filterType === FilterType.COSMETIC && config.loadCosmeticFilters === true) {\n            const filter = CosmeticFilter.parse(line, config.debug);\n            if (filter !== null) {\n                if (config.loadGenericCosmeticsFilters === true || filter.isGenericHide() === false) {\n                    cosmeticFilters.push(filter);\n                    if (preprocessorStack.length > 0) {\n                        preprocessorStack[preprocessorStack.length - 1].filterIDs.add(filter.getId());\n                    }\n                }\n            }\n            else {\n                notSupportedFilters.push({\n                    lineNumber: i,\n                    filter: line,\n                    filterType: FilterType.COSMETIC,\n                });\n            }\n        }\n        else if (config.loadPreprocessors) {\n            const preprocessorToken = detectPreprocessor(line);\n            if (preprocessorToken === PreprocessorTokens.BEGIF) {\n                if (preprocessorStack.length > 0) {\n                    preprocessorStack.push(new Preprocessor({\n                        condition: `(${preprocessorStack[preprocessorStack.length - 1].condition})&&(${Preprocessor.getCondition(line)})`,\n                    }));\n                }\n                else {\n                    preprocessorStack.push(Preprocessor.parse(line));\n                }\n            }\n            else if ((preprocessorToken === PreprocessorTokens.ENDIF ||\n                preprocessorToken === PreprocessorTokens.ELSE) &&\n                preprocessorStack.length > 0) {\n                const lastPreprocessor = preprocessorStack.pop();\n                preprocessors.push(lastPreprocessor);\n                if (preprocessorToken === PreprocessorTokens.ELSE) {\n                    preprocessorStack.push(new Preprocessor({\n                        condition: `!(${lastPreprocessor.condition})`,\n                    }));\n                }\n            }\n            else if (filterType === FilterType.NOT_SUPPORTED_ADGUARD) {\n                notSupportedFilters.push({\n                    lineNumber: i,\n                    filter: line,\n                    filterType,\n                });\n            }\n        }\n        else if (filterType === FilterType.NOT_SUPPORTED_ADGUARD) {\n            notSupportedFilters.push({\n                lineNumber: i,\n                filter: line,\n                filterType,\n            });\n        }\n    }\n    return {\n        networkFilters,\n        cosmeticFilters,\n        preprocessors: preprocessors.filter((preprocessor) => preprocessor.filterIDs.size > 0),\n        notSupportedFilters,\n    };\n}\nfunction getFilters(list, config) {\n    const { networkFilters, cosmeticFilters, preprocessors } = parseFilters(list, config);\n    const filters = [];\n    return {\n        filters: filters.concat(networkFilters).concat(cosmeticFilters),\n        preprocessors,\n    };\n}\n/**\n * Helper used to return a set of lines as strings where each line is\n * guaranteed to be a valid filter (i.e.: comments, empty lines and\n * un-supported filters are dropped).\n */\nexport function getLinesWithFilters(list, config = new Config()) {\n    // Set config to `debug` so that we keep track of raw lines for each filter\n    return new Set(getFilters(list, new Config(Object.assign({}, config, { debug: true }))).filters.map(({ rawLine }) => rawLine));\n}\n/**\n * Given two versions of the same subscription (e.g.: EasyList) as a string,\n * generate a raw diff (i.e.: a list of filters added and filters removed, in\n * their raw string form).\n */\nexport function generateDiff(prevRevision, newRevision, config = new Config()) {\n    // Set config to `debug` so that we keep track of raw lines for each filter\n    const debugConfig = new Config(Object.assign({}, config, { debug: true }));\n    const prevRevisionData = getFilters(prevRevision, debugConfig);\n    const prevRevisionIds = new Set(prevRevisionData.filters.map((filter) => filter.getId()));\n    const newRevisionData = getFilters(newRevision, debugConfig);\n    const newRevisionIds = new Set(newRevisionData.filters.map((filter) => filter.getId()));\n    // Check which filters were added, based on ID\n    const added = new Set();\n    for (const filter of newRevisionData.filters) {\n        if (!prevRevisionIds.has(filter.getId())) {\n            added.add(filter.rawLine);\n        }\n    }\n    // Check which filters were removed, based on ID\n    const removed = new Set();\n    for (const filter of prevRevisionData.filters) {\n        if (!newRevisionIds.has(filter.getId())) {\n            removed.add(filter.rawLine);\n        }\n    }\n    // Fast exit if we don't want to handle preprocessors.\n    if (!config.loadPreprocessors) {\n        return {\n            added: Array.from(added),\n            removed: Array.from(removed),\n            preprocessors: {},\n        };\n    }\n    const index = new Map();\n    for (const filter of newRevisionData.filters) {\n        index.set(filter.getId(), filter.rawLine);\n    }\n    for (const filter of prevRevisionData.filters) {\n        index.set(filter.getId(), filter.rawLine);\n    }\n    // Create preprocessor diffs\n    const preprocessors = {};\n    // Get the diff of preprocessors\n    for (const preprocessor of prevRevisionData.preprocessors) {\n        // Find the same preprocessor in `newRevisionData`\n        const newPreprocessor = newRevisionData.preprocessors.find((newPreprocessor) => newPreprocessor.condition === preprocessor.condition);\n        // If the preprocessor in the revision is not found, it means the whole block was removed\n        if (!newPreprocessor) {\n            const removedInScope = new Set();\n            // Remove all filters\n            for (const filterID of preprocessor.filterIDs) {\n                removedInScope.add(index.get(filterID));\n            }\n            preprocessors[preprocessor.condition] = {\n                added: [],\n                removed: Array.from(removedInScope),\n            };\n            continue;\n        }\n        // If the preprocessor in the revision is found, it means the block was updated\n        // Create subsets\n        const scope = {\n            added: new Set(),\n            removed: new Set(),\n        };\n        for (const filterID of preprocessor.filterIDs) {\n            if (!newPreprocessor.filterIDs.has(filterID)) {\n                scope.removed.add(index.get(filterID));\n            }\n        }\n        for (const filterID of newPreprocessor.filterIDs) {\n            if (!preprocessor.filterIDs.has(filterID)) {\n                scope.added.add(index.get(filterID));\n            }\n        }\n        preprocessors[preprocessor.condition] = {\n            added: Array.from(scope.added),\n            removed: Array.from(scope.removed),\n        };\n    }\n    // Iterate over only \"added\" preprocessors\n    for (const preprocessor of newRevisionData.preprocessors) {\n        // If the preprocessor in the previous revision was not found, it means the whole block was added\n        if (!preprocessors[preprocessor.condition]) {\n            const addedInScope = new Set();\n            // Remove all filters\n            for (const filterID of preprocessor.filterIDs) {\n                addedInScope.add(index.get(filterID));\n            }\n            preprocessors[preprocessor.condition] = {\n                added: Array.from(addedInScope),\n                removed: [],\n            };\n        }\n    }\n    for (const [condition, { added, removed }] of Object.entries(preprocessors)) {\n        if (added.length === 0 && removed.length === 0) {\n            delete preprocessors[condition];\n        }\n    }\n    return {\n        added: Array.from(added),\n        removed: Array.from(removed),\n        // For the filters under `preprocessors` property, it doesn't mean those are \"filters\".\n        // Those are \"a list of filters affected by preprocessors\" not the \"filters\" itself.\n        // Therefore, they shouldn't be treated as filters.\n        // Instead, we put \"filters\" in `added` and `removed` properties.\n        // This provides backward-compatibility and simplicity.\n        preprocessors,\n    };\n}\n/**\n * Merge several raw diffs into one, taking care of accumulating added and\n * removed filters, even if several diffs add/remove the same ones.\n */\nexport function mergeDiffs(diffs) {\n    const addedCumul = new Set();\n    const removedCumul = new Set();\n    const preprocessorsCumul = {};\n    for (const { added, removed, preprocessors } of diffs) {\n        if (added !== undefined) {\n            for (const str of added) {\n                if (removedCumul.has(str)) {\n                    removedCumul.delete(str);\n                }\n                addedCumul.add(str);\n            }\n        }\n        if (removed !== undefined) {\n            for (const str of removed) {\n                if (addedCumul.has(str)) {\n                    addedCumul.delete(str);\n                }\n                removedCumul.add(str);\n            }\n        }\n        if (!preprocessors) {\n            continue;\n        }\n        for (const [condition, details] of Object.entries(preprocessors)) {\n            if (!preprocessorsCumul[condition]) {\n                preprocessorsCumul[condition] = {\n                    added: details.added !== undefined ? new Set(details.added) : new Set(),\n                    removed: details.removed !== undefined ? new Set(details.removed) : new Set(),\n                };\n            }\n            else {\n                if (details.added !== undefined) {\n                    for (const str of details.added) {\n                        if (preprocessorsCumul[condition].removed.has(str)) {\n                            preprocessorsCumul[condition].removed.delete(str);\n                        }\n                        preprocessorsCumul[condition].added.add(str);\n                    }\n                }\n                if (details.removed !== undefined) {\n                    for (const str of details.removed) {\n                        if (preprocessorsCumul[condition].added.has(str)) {\n                            preprocessorsCumul[condition].added.delete(str);\n                        }\n                        preprocessorsCumul[condition].removed.add(str);\n                    }\n                }\n            }\n        }\n    }\n    return {\n        added: Array.from(addedCumul),\n        removed: Array.from(removedCumul),\n        preprocessors: Object.fromEntries(Object.entries(preprocessorsCumul).map(([condition, details]) => [\n            condition,\n            {\n                added: Array.from(details.added),\n                removed: Array.from(details.removed),\n            },\n        ])),\n    };\n}\n//# sourceMappingURL=lists.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { getResourceForMime } from '@remusao/small';\nimport { sizeOfUTF8, sizeOfASCII, sizeOfByte } from './data-view.js';\n// Polyfill for `btoa`\nfunction btoaPolyfill(buffer) {\n    if (typeof btoa !== 'undefined') {\n        return btoa(buffer);\n    }\n    else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(buffer).toString('base64');\n    }\n    return buffer;\n}\n// TODO - support # alias\n// TODO - support empty resource body\n/**\n * Abstraction on top of resources.txt used for redirections as well as script\n * injections. It contains logic to parse, serialize and get resources by name\n * for use in the engine.\n */\nexport default class Resources {\n    static deserialize(buffer) {\n        const checksum = buffer.getASCII();\n        // Deserialize `resources`\n        const resources = new Map();\n        const numberOfResources = buffer.getUint16();\n        for (let i = 0; i < numberOfResources; i += 1) {\n            resources.set(buffer.getASCII(), {\n                contentType: buffer.getASCII(),\n                body: buffer.getUTF8(),\n            });\n        }\n        // Deserialize `js`\n        const js = new Map();\n        resources.forEach(({ contentType, body }, name) => {\n            if (contentType === 'application/javascript') {\n                js.set(name, body);\n            }\n        });\n        return new Resources({\n            checksum,\n            js,\n            resources,\n        });\n    }\n    static parse(data, { checksum }) {\n        const typeToResource = new Map();\n        const trimComments = (str) => str.replace(/^\\s*#.*$/gm, '');\n        const chunks = data.split('\\n\\n');\n        for (const chunk of chunks) {\n            const resource = trimComments(chunk).trim();\n            if (resource.length !== 0) {\n                const firstNewLine = resource.indexOf('\\n');\n                const split = resource.slice(0, firstNewLine).split(/\\s+/);\n                const name = split[0];\n                const type = split[1];\n                const body = resource.slice(firstNewLine + 1);\n                if (name === undefined || type === undefined || body === undefined) {\n                    continue;\n                }\n                let resources = typeToResource.get(type);\n                if (resources === undefined) {\n                    resources = new Map();\n                    typeToResource.set(type, resources);\n                }\n                resources.set(name, body);\n            }\n        }\n        // The resource containing javascirpts to be injected\n        const js = typeToResource.get('application/javascript') || new Map();\n        for (const [key, value] of js.entries()) {\n            if (key.endsWith('.js')) {\n                js.set(key.slice(0, -3), value);\n            }\n        }\n        // Create a mapping from resource name to { contentType, data }\n        // used for request redirection.\n        const resourcesByName = new Map();\n        typeToResource.forEach((resources, contentType) => {\n            resources.forEach((resource, name) => {\n                resourcesByName.set(name, {\n                    contentType,\n                    body: resource,\n                });\n            });\n        });\n        return new Resources({\n            checksum,\n            js,\n            resources: resourcesByName,\n        });\n    }\n    constructor({ checksum = '', js = new Map(), resources = new Map() } = {}) {\n        this.checksum = checksum;\n        this.js = js;\n        this.resources = resources;\n    }\n    getResource(name) {\n        const { body, contentType } = this.resources.get(name) || getResourceForMime(name);\n        let dataUrl;\n        if (contentType.indexOf(';') !== -1) {\n            dataUrl = `data:${contentType},${body}`;\n        }\n        else {\n            dataUrl = `data:${contentType};base64,${btoaPolyfill(body)}`;\n        }\n        return { body, contentType, dataUrl };\n    }\n    getSerializedSize() {\n        let estimatedSize = sizeOfASCII(this.checksum) + 2 * sizeOfByte(); // resources.size\n        this.resources.forEach(({ contentType, body }, name) => {\n            estimatedSize += sizeOfASCII(name) + sizeOfASCII(contentType) + sizeOfUTF8(body);\n        });\n        return estimatedSize;\n    }\n    serialize(buffer) {\n        // Serialize `checksum`\n        buffer.pushASCII(this.checksum);\n        // Serialize `resources`\n        buffer.pushUint16(this.resources.size);\n        this.resources.forEach(({ contentType, body }, name) => {\n            buffer.pushASCII(name);\n            buffer.pushASCII(contentType);\n            buffer.pushUTF8(body);\n        });\n    }\n}\n//# sourceMappingURL=resources.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nexport function compactTokens(tokens) {\n    const sorted = tokens.sort();\n    let lastIndex = 1;\n    for (let i = 1; i < sorted.length; i += 1) {\n        if (sorted[lastIndex - 1] !== sorted[i]) {\n            sorted[lastIndex++] = sorted[i];\n        }\n    }\n    return sorted.subarray(0, lastIndex);\n}\nexport function hasEmptyIntersection(s1, s2) {\n    let i = 0;\n    let j = 0;\n    while (i < s1.length && j < s2.length && s1[i] !== s2[j]) {\n        if (s1[i] < s2[j]) {\n            i += 1;\n        }\n        else {\n            j += 1;\n        }\n    }\n    return i === s1.length || j === s2.length;\n}\nconst EMPTY_UINT32_ARRAY = new Uint32Array(0);\nexport function concatTypedArrays(arrays) {\n    if (arrays.length === 0) {\n        return EMPTY_UINT32_ARRAY;\n    }\n    if (arrays.length === 1) {\n        return arrays[0];\n    }\n    let totalSize = 0;\n    for (let i = 0; i < arrays.length; i += 1) {\n        totalSize += arrays[i].length;\n    }\n    const result = new Uint32Array(totalSize);\n    let index = 0;\n    for (let i = 0; i < arrays.length; i += 1) {\n        const array = arrays[i];\n        for (let j = 0; j < array.length; j += 1) {\n            result[index++] = array[j];\n        }\n    }\n    return result;\n}\nexport function mergeCompactSets(arrays) {\n    return compactTokens(concatTypedArrays(arrays));\n}\n//# sourceMappingURL=compact-set.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport NetworkFilter, { NETWORK_FILTER_MASK } from '../filters/network.js';\nimport { setBit } from '../utils.js';\nimport { Domains } from '../engine/domains.js';\nfunction processRegex(r) {\n    return `(?:${r.source})`;\n}\nfunction escape(s) {\n    return `(?:${s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')})`;\n}\nfunction setWithDefault(map, key, value) {\n    let bucket = map.get(key);\n    if (bucket === undefined) {\n        bucket = [];\n        map.set(key, bucket);\n    }\n    bucket.push(value);\n}\nfunction groupBy(filters, criteria) {\n    const grouped = new Map();\n    for (const filter of filters) {\n        setWithDefault(grouped, criteria(filter), filter);\n    }\n    return Array.from(grouped.values());\n}\nfunction splitBy(filters, condition) {\n    const positive = [];\n    const negative = [];\n    for (const filter of filters) {\n        if (condition(filter)) {\n            positive.push(filter);\n        }\n        else {\n            negative.push(filter);\n        }\n    }\n    return {\n        negative,\n        positive,\n    };\n}\nconst OPTIMIZATIONS = [\n    {\n        description: 'Remove duplicated filters by ID',\n        fusion: (filters) => filters[0],\n        groupByCriteria: (filter) => '' + filter.getId(),\n        select: () => true,\n    },\n    {\n        description: 'Group idential filter with same mask but different domains in single filters',\n        fusion: (filters) => {\n            const parts = [];\n            const hostnames = new Set();\n            const notHostnames = new Set();\n            const entities = new Set();\n            const notEntities = new Set();\n            for (const { domains } of filters) {\n                if (domains !== undefined) {\n                    if (domains.parts !== undefined) {\n                        parts.push(domains.parts);\n                    }\n                    if (domains.hostnames !== undefined) {\n                        for (const hash of domains.hostnames) {\n                            hostnames.add(hash);\n                        }\n                    }\n                    if (domains.entities !== undefined) {\n                        for (const hash of domains.entities) {\n                            entities.add(hash);\n                        }\n                    }\n                    if (domains.notHostnames !== undefined) {\n                        for (const hash of domains.notHostnames) {\n                            notHostnames.add(hash);\n                        }\n                    }\n                    if (domains.notEntities !== undefined) {\n                        for (const hash of domains.notEntities) {\n                            notEntities.add(hash);\n                        }\n                    }\n                }\n            }\n            return new NetworkFilter(Object.assign({}, filters[0], {\n                domains: new Domains({\n                    hostnames: hostnames.size !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n                    entities: entities.size !== 0 ? new Uint32Array(entities).sort() : undefined,\n                    notHostnames: notHostnames.size !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n                    notEntities: notEntities.size !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n                    parts: parts.length !== 0 ? parts.join(',') : undefined,\n                }),\n                rawLine: filters[0].rawLine !== undefined\n                    ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n                    : undefined,\n            }));\n        },\n        groupByCriteria: (filter) => filter.getHostname() + filter.getFilter() + filter.getMask() + filter.getRedirect(),\n        select: (filter) => !filter.isCSP() && filter.denyallow === undefined && filter.domains !== undefined,\n    },\n    {\n        description: 'Group simple patterns, into a single filter',\n        fusion: (filters) => {\n            const patterns = [];\n            for (const f of filters) {\n                if (f.isRegex()) {\n                    patterns.push(processRegex(f.getRegex()));\n                }\n                else if (f.isRightAnchor()) {\n                    patterns.push(`${escape(f.getFilter())}$`);\n                }\n                else if (f.isLeftAnchor()) {\n                    patterns.push(`^${escape(f.getFilter())}`);\n                }\n                else {\n                    patterns.push(escape(f.getFilter()));\n                }\n            }\n            return new NetworkFilter(Object.assign({}, filters[0], {\n                mask: setBit(filters[0].mask, NETWORK_FILTER_MASK.isRegex),\n                rawLine: filters[0].rawLine !== undefined\n                    ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n                    : undefined,\n                regex: new RegExp(patterns.join('|')),\n            }));\n        },\n        groupByCriteria: (filter) => '' + (filter.getMask() & ~NETWORK_FILTER_MASK.isRegex & ~NETWORK_FILTER_MASK.isFullRegex),\n        select: (filter) => filter.domains === undefined &&\n            filter.denyallow === undefined &&\n            !filter.isHostnameAnchor() &&\n            !filter.isRedirect() &&\n            !filter.isCSP(),\n    },\n];\n/**\n * Optimizer which returns the list of original filters.\n */\nexport function noopOptimizeNetwork(filters) {\n    return filters;\n}\nexport function noopOptimizeCosmetic(filters) {\n    return filters;\n}\n/**\n * Fusion a set of `filters` by applying optimizations sequentially.\n */\nexport function optimizeNetwork(filters) {\n    const fused = [];\n    let toFuse = filters;\n    for (const { select, fusion, groupByCriteria } of OPTIMIZATIONS) {\n        const { positive, negative } = splitBy(toFuse, select);\n        toFuse = negative;\n        const groups = groupBy(positive, groupByCriteria);\n        for (const group of groups) {\n            if (group.length > 1) {\n                fused.push(fusion(group));\n            }\n            else {\n                toFuse.push(group[0]);\n            }\n        }\n    }\n    for (const filter of toFuse) {\n        fused.push(filter);\n    }\n    return fused;\n}\n//# sourceMappingURL=optimizer.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { StaticDataView, EMPTY_UINT32_ARRAY, sizeOfBytes } from '../data-view.js';\n// https://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2\nexport function nextPow2(v) {\n    v--;\n    v |= v >> 1;\n    v |= v >> 2;\n    v |= v >> 4;\n    v |= v >> 8;\n    v |= v >> 16;\n    v++;\n    return v;\n}\n/**\n * Generate unique IDs for requests, which is used to avoid matching the same\n * buckets multiple times on the same request (which can happen if a token\n * appears more than once in a URL).\n */\nlet UID = 1;\nfunction getNextId() {\n    const id = UID;\n    UID = (UID + 1) % 1000000000;\n    return id;\n}\nconst EMPTY_BUCKET = Number.MAX_SAFE_INTEGER >>> 0;\n/**\n * The ReverseIndex is an accelerating data structure which allows finding a\n * subset of the filters given a list of tokens seen in a URL. It is the core\n * of the adblocker's matching capabilities and speed.\n *\n * It has mainly two caracteristics:\n * 1. It is very compact and is able to load fast.\n * 2. It is *very fast* in finding potential candidates.\n *\n * Conceptually, the reverse index dispatches filters in \"buckets\" (an array of\n * one or more filters). Filters living in the same bucket are guaranteed to\n * share at least one of their tokens (appearing in the pattern). For example:\n *\n *   - Bucket 1 (ads):\n *       - /ads.js\n *       - /script/ads/tracking.js\n *       - /ads/\n *   - Bucket 2 (tracking)\n *       - /tracking.js\n *       - ||tracking.com/cdn\n *\n * We see that filters in \"Bucket 1\" are indexed using the token \"ads\" and\n * \"Bucket 2\" using token \"tracking\".\n *\n * This property allows to quickly discard most of the filters when we match a\n * URL. To achieve this, the URL is tokenized in the same way filters are\n * tokenized and for each token, we check if there are some filters available.\n *\n * For example:\n *\n *  URL \"https://tracking.com/\" has the following tokens: \"https\", \"tracking\"\n *  and \"com\". We immediatly see that we only check the two filters in the\n *  \"tracking\" bucket since they are the only ones having a common token with\n *  the URL.\n *\n * How do we pick the token for each filter?\n * =========================================\n *\n * Each filter is only indexed *once*, which means that we need to pick one of\n * the tokens appearing in the pattern. We choose the token such that each\n * filter is indexed using the token which was the *least seen* globally. In\n * other words, we pick the most discriminative token for each filter. This is\n * done using the following algorithm:\n *   1. Tokenize all the filters which will be stored in the index\n *   2. Compute a histogram of frequency of each token (globally)\n *   3. Select the best token for each filter (lowest frequency)\n */\nexport default class ReverseIndex {\n    static deserialize(buffer, deserialize, optimize, config) {\n        const tokensLookupIndexSize = buffer.getUint32();\n        const bucketsIndexSize = buffer.getUint32();\n        const numberOfFilters = buffer.getUint32();\n        // Alignement to 4 bytes is important here since `view` (Uint8Array) can\n        // appear at any offset of `buffer`. But to be sure we can read back\n        // Uint32Array directly from raw buffer, the alignement has to be a\n        // multiple of 4. The same alignement is taken care of in `serialize`.\n        const view = StaticDataView.fromUint8Array(buffer.getBytes(true /* align */), config);\n        const tokensLookupIndex = view.getUint32ArrayView(tokensLookupIndexSize);\n        const bucketsIndex = view.getUint32ArrayView(bucketsIndexSize);\n        const filtersIndexStart = view.pos;\n        view.seekZero(); // not strictly needed but make sure reverse index can be compared with deep equal\n        return new ReverseIndex({\n            config,\n            deserialize,\n            filters: [],\n            optimize,\n        }).updateInternals({\n            bucketsIndex,\n            filtersIndexStart,\n            numberOfFilters,\n            tokensLookupIndex,\n            view,\n        });\n    }\n    constructor({ deserialize, filters, optimize, config, }) {\n        // Internal, compact representation of the reverse index. It contains three\n        // distinct parts stored in the same typed array:\n        //\n        // 1. \"tokens lookup index\" allows to identify a sub-set of buckets which\n        // likely contain filters for a given token. It is an approximate dispatch\n        // table which maps a mask of N bits (N being smaller than 31 bits, the size\n        // of a token) to a list of buckets having a 'token' sharing these same N\n        // bits sub-set. If the binary representation of the token for bucket1 is\n        // 101010 and suffix has size 3, then we would lookup the \"tokens lookup\n        // index\" using the last 3 bits \"010\" which would give us the offset in our\n        // typed array where we can start reading the filters of buckets having a\n        // token ending with the same 3 bits. The value of N is always a power of 2\n        // depending on the total number of filters stored in the index; determined\n        // at the time `update(...)` is called.\n        //\n        // 2. \"buckets index\" is an array which associates tokens to filters. The\n        // structure is: token, filter, token, filter, etc. To identify all the\n        // filters indexed with 'token' a naive approach would be to iterate on\n        // \"buckets index\" and collect all the filters indexed with 'token'. This\n        // would be *very inefficient*! To make this process faster, filters in\n        // \"buckets index\" are grouped so that buckets sharing the same suffix of N\n        // bits in their indexing token (see \"tokens lookup index\") are stored side\n        // by side in the typed array. To know where this section start given a\n        // particular token, we use \"tokens lookup index\" which associated the suffix\n        // of size N to an index in \"buckets index\". From there we can iterate on the\n        // candidates.\n        //\n        // 3. \"filters index\" contains the filters themselves. \"buckets index\"\n        // presented earlier does not contain filters, but an index to the \"filters\n        // index\". This allows a filter to be indexed multiple times without\n        // introducing any overhead; the filter can be associated with multiple\n        // tokens in \"buckets index\" (each pointing to the same place in \"filters\n        // index\") but its actual representation is stored only once in \"filters\n        // index\".\n        this.bucketsIndex = EMPTY_UINT32_ARRAY;\n        this.filtersIndexStart = 0;\n        this.numberOfFilters = 0;\n        this.tokensLookupIndex = EMPTY_UINT32_ARRAY;\n        // In-memory cache used to keep track of buckets which have been loaded from\n        // the compact representation (i.e.: this.view). It is not strictly necessary\n        // but will speed-up retrival of popular filters (since we do not have to\n        // perform the lookup in \"tokens index\" and \"buckets index\" everytime).\n        this.cache = new Map();\n        this.view = StaticDataView.empty(config);\n        this.deserializeFilter = deserialize;\n        this.optimize = optimize;\n        this.config = config;\n        if (filters.length !== 0) {\n            this.update(filters, undefined);\n        }\n    }\n    /**\n     * Load all filters from this index in memory (i.e.: deserialize them from\n     * the byte array into NetworkFilter or CosmeticFilter instances). This is\n     * mostly useful for debugging or testing purposes.\n     */\n    getFilters() {\n        const filters = [];\n        if (this.numberOfFilters === 0) {\n            return filters;\n        }\n        // set view cursor at the start of \"filters index\"\n        this.view.setPos(this.filtersIndexStart);\n        for (let i = 0; i < this.numberOfFilters; i += 1) {\n            filters.push(this.deserializeFilter(this.view));\n        }\n        this.view.seekZero();\n        return filters;\n    }\n    /**\n     * Return an array of all the tokens currently used as keys of the \"buckets index\".\n     */\n    getTokens() {\n        const tokens = new Set();\n        for (let i = 0; i < this.bucketsIndex.length; i += 2) {\n            tokens.add(this.bucketsIndex[i]);\n        }\n        return new Uint32Array(tokens);\n    }\n    /**\n     * Estimate the number of bytes needed to serialize this instance of `ReverseIndex`.\n     */\n    getSerializedSize() {\n        // 12 = 4 bytes (tokensLookupIndex.length) + 4 bytes (bucketsIndex.length) + 4 bytes (numberOfFilters)\n        return 12 + sizeOfBytes(this.view.buffer, true /* align */);\n    }\n    /**\n     * Dump this index to `buffer`.\n     */\n    serialize(buffer) {\n        buffer.pushUint32(this.tokensLookupIndex.length);\n        buffer.pushUint32(this.bucketsIndex.length);\n        buffer.pushUint32(this.numberOfFilters);\n        // Aligmenent is crucial here, see comment in `deserialize` for more info.\n        buffer.pushBytes(this.view.buffer, true /* align */);\n    }\n    /**\n     * Iterate on all filters found in buckets associated with the given list of\n     * tokens. The callback is called on each of them. Early termination can be\n     * achieved if the callback returns `false`.\n     *\n     * This will not check if each filter returned would match a given request but\n     * is instead used as a list of potential candidates (much smaller than the\n     * total set of filters; typically between 5 and 10 filters will be checked).\n     */\n    iterMatchingFilters(tokens, cb) {\n        // Each request is assigned an ID so that we can keep track of the last\n        // request seen by each bucket in the reverse index. This provides a cheap\n        // way to prevent filters from being inspected more than once per request\n        // (which could happen if the same token appears more than once in the URL).\n        const requestId = getNextId();\n        for (const token of tokens) {\n            if (this.iterBucket(token, requestId, cb) === false) {\n                return;\n            }\n        }\n        // Fallback to 0 (i.e.: wildcard bucket) bucket if nothing was found before.\n        this.iterBucket(0, requestId, cb);\n    }\n    /**\n     * Re-create the internal data-structure of the reverse index *in-place*. It\n     * needs to be called with a list of new filters and optionally a list of ids\n     * (as returned by either NetworkFilter.getId() or CosmeticFilter.getId())\n     * which need to be removed from the index.\n     */\n    update(newFilters, removedFilters) {\n        // Reset internal cache on each update\n        if (this.cache.size !== 0) {\n            this.cache.clear();\n        }\n        const compression = this.config.enableCompression;\n        let totalNumberOfTokens = 0;\n        let totalNumberOfIndexedFilters = 0;\n        const filtersTokens = [];\n        // Keep track of the final size of the buckets index. `bucketsIndexSize` is\n        // the number of indexed filters, multiplied by 2 (since we store both the\n        // token a filter is indexed with and the index of the filter).\n        let bucketsIndexSize = 0;\n        // Re-use the current size of \"filters index\" as a starting point so that\n        // we only need to update with new or removed filters. This saves time if\n        // we perform a small update on an existing index.\n        let estimatedBufferSize = this.view.buffer.byteLength - this.filtersIndexStart;\n        // Create a list of all filters which will be part of the index. This means\n        // loading existing filters, removing the ones that need to be deleted and\n        // adding the new ones.  At the same time, we update the estimation of\n        // buffer size needed to store this index.\n        let filters = this.getFilters();\n        if (filters.length !== 0) {\n            // If there is at least one existing filter, then we check if some should\n            // be removed. We subtract their size from the total estimated buffer\n            // size.\n            if (removedFilters !== undefined && removedFilters.size !== 0) {\n                filters = filters.filter((f) => {\n                    if (removedFilters.has(f.getId())) {\n                        estimatedBufferSize -= f.getSerializedSize(compression);\n                        return false;\n                    }\n                    return true;\n                });\n            }\n            // Add new filters to the list and also update estimated size\n            for (const filter of newFilters) {\n                estimatedBufferSize += filter.getSerializedSize(compression);\n                filters.push(filter);\n            }\n        }\n        else {\n            // In the case where there is no existing filter in the index (happens on\n            // initialization), then we can take a fast-path and not check removed\n            // filters at all. There is also no need to copy the array of filters.\n            filters = newFilters;\n            for (const filter of newFilters) {\n                estimatedBufferSize += filter.getSerializedSize(compression);\n            }\n        }\n        // No filters given; reset to empty index and abort.\n        if (filters.length === 0) {\n            this.updateInternals({\n                bucketsIndex: EMPTY_UINT32_ARRAY,\n                filtersIndexStart: 0,\n                numberOfFilters: 0,\n                tokensLookupIndex: EMPTY_UINT32_ARRAY,\n                view: StaticDataView.empty(this.config),\n            });\n            return;\n        }\n        // When we run in `debug` mode, we enable fully deterministic updates of\n        // internal data-structures. To this effect, we sort all filters before\n        // insertion.\n        if (this.config.debug === true) {\n            filters.sort((f1, f2) => f1.getId() - f2.getId());\n        }\n        const histogram = new Uint32Array(Math.max(nextPow2(2 * filters.length), 256));\n        // Tokenize all filters stored in this index. And compute a histogram of\n        // tokens so that we can decide how to index each filter efficiently.\n        for (const filter of filters) {\n            // Tokenize `filter` and store the result in `filtersTokens` which will\n            // be used in the next step to select the best token for each filter.\n            const multiTokens = filter.getTokens();\n            filtersTokens.push(multiTokens);\n            // Update estimated size of \"buckets index\" based on number of times this\n            // particular filter will be indexed.\n            bucketsIndexSize += 2 * multiTokens.length; // token + filter index\n            totalNumberOfIndexedFilters += multiTokens.length;\n            // Each filter can be indexed more than once, so `getTokens(...)` returns\n            // multiple sets of tokens. We iterate on all of them and update the\n            // histogram for each.\n            for (const tokens of multiTokens) {\n                totalNumberOfTokens += tokens.length;\n                for (const token of tokens) {\n                    histogram[token % histogram.length] += 1;\n                }\n            }\n        }\n        // Add size of bucketsIndex to total size (x4 because these are 32 bits numbers)\n        estimatedBufferSize += bucketsIndexSize * 4;\n        // Prepare \"tokens index\" (see documentation in constructor of `ReverseIndex` class above).\n        const tokensLookupIndexSize = Math.max(2, nextPow2(totalNumberOfIndexedFilters));\n        const mask = tokensLookupIndexSize - 1;\n        const suffixes = [];\n        for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n            suffixes.push([]);\n        }\n        // Add size of tokensLookupIndex to total size (x4 because these are 32 bits numbers)\n        estimatedBufferSize += tokensLookupIndexSize * 4;\n        // At this point we know the number of bytes needed for the compact\n        // representation of this reverse index (\"tokens index\" + \"buckets index\" +\n        // \"filters index\"). We allocate it at once and proceed with populating it.\n        const buffer = StaticDataView.allocate(estimatedBufferSize, this.config);\n        const tokensLookupIndex = buffer.getUint32ArrayView(tokensLookupIndexSize);\n        const bucketsIndex = buffer.getUint32ArrayView(bucketsIndexSize);\n        const filtersIndexStart = buffer.getPos();\n        // For each filter, find the best token (least seen) based on histogram.\n        // Since we are iterating again on the filters, we populate \"filters index\"\n        // in the same loop and keep track of their indices so that we can later\n        // populate \"buckets index\".\n        for (let i = 0; i < filtersTokens.length; i += 1) {\n            const filter = filters[i];\n            const multiTokens = filtersTokens[i];\n            // Serialize this filter and keep track of its index in the byte array;\n            // it will be used in \"buckets index\" to point to this filter.\n            const filterIndex = buffer.pos;\n            filter.serialize(buffer);\n            // Index the filter once per \"tokens\"\n            for (const tokens of multiTokens) {\n                // Find best token (least seen) from `tokens` using `histogram`.\n                let bestToken = 0; // default = wildcard bucket\n                let minCount = totalNumberOfTokens + 1;\n                for (const token of tokens) {\n                    const tokenCount = histogram[token % histogram.length];\n                    if (tokenCount < minCount) {\n                        minCount = tokenCount;\n                        bestToken = token;\n                        // Fast path, if the current token has only been seen once, we can\n                        // stop iterating since we will not find a better alternarive!\n                        if (minCount === 1) {\n                            break;\n                        }\n                    }\n                }\n                // `bestToken & mask` represents the N last bits of `bestToken`. We\n                // group all filters indexed with a token sharing the same N bits.\n                suffixes[bestToken & mask].push([bestToken, filterIndex]);\n            }\n        }\n        // Populate \"tokens index\" and \"buckets index\" based on best token found for each filter.\n        let indexInBucketsIndex = 0;\n        for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n            const filtersForMask = suffixes[i];\n            tokensLookupIndex[i] = indexInBucketsIndex;\n            for (const [token, filterIndex] of filtersForMask) {\n                bucketsIndex[indexInBucketsIndex++] = token;\n                bucketsIndex[indexInBucketsIndex++] = filterIndex;\n            }\n        }\n        // Update internals\n        buffer.seekZero();\n        this.updateInternals({\n            bucketsIndex,\n            filtersIndexStart,\n            numberOfFilters: filtersTokens.length,\n            tokensLookupIndex,\n            view: buffer,\n        });\n    }\n    updateInternals({ bucketsIndex, filtersIndexStart, numberOfFilters, tokensLookupIndex, view, }) {\n        this.bucketsIndex = bucketsIndex;\n        this.filtersIndexStart = filtersIndexStart;\n        this.numberOfFilters = numberOfFilters;\n        this.tokensLookupIndex = tokensLookupIndex;\n        this.view = view;\n        view.seekZero();\n        return this;\n    }\n    /**\n     * If a bucket exists for the given token, call the callback on each filter\n     * found inside. An early termination mechanism is built-in, to stop iterating\n     * as soon as `false` is returned from the callback.\n     */\n    iterBucket(token, requestId, cb) {\n        let bucket = this.config.enableInMemoryCache === true ? this.cache.get(token) : undefined;\n        // Lazily create bucket if it does not yet exist in memory. Lookup the\n        // compact bucket representation and find all filters being associated with\n        // `token`. Create a `Bucket` out of them and store them in cache.\n        if (bucket === undefined) {\n            const offset = token & (this.tokensLookupIndex.length - 1);\n            const startOfBucket = this.tokensLookupIndex[offset];\n            // We do not have any filters for this token\n            if (startOfBucket === EMPTY_BUCKET) {\n                return true;\n            }\n            // Since we do not store explicitly the number of filters in each\n            // \"bucket\", we check the index of the next one and use it to infer the\n            // number of filters (each filter being stored as a token + index to the\n            // \"filters store\")\n            const endOfBucket = offset === this.tokensLookupIndex.length - 1\n                ? this.bucketsIndex.length\n                : this.tokensLookupIndex[offset + 1];\n            // Get indices of filters indexed with `token`, if any.\n            const filtersIndices = [];\n            for (let i = startOfBucket; i < endOfBucket; i += 2) {\n                const currentToken = this.bucketsIndex[i];\n                if (currentToken === token) {\n                    filtersIndices.push(this.bucketsIndex[i + 1]);\n                }\n            }\n            // No filter indexed with `token`.\n            if (filtersIndices.length === 0) {\n                return true; // continue looking for a match\n            }\n            // If we have filters for `token` then deserialize filters in memory and\n            // create a `Bucket` instance to hold them for future access.\n            const filters = [];\n            const view = this.view;\n            for (let i = 0; i < filtersIndices.length; i += 1) {\n                view.setPos(filtersIndices[i]);\n                filters.push(this.deserializeFilter(view));\n            }\n            // Create new bucket with found filters (only optimize if we have more\n            // than one filter).\n            bucket = {\n                filters: filters.length > 1 ? this.optimize(filters) : filters,\n                lastRequestSeen: -1, // safe because all ids are positive\n            };\n            if (this.config.enableInMemoryCache === true) {\n                this.cache.set(token, bucket);\n            }\n        }\n        // Look for matching filter in this bucket\n        if (bucket.lastRequestSeen !== requestId) {\n            bucket.lastRequestSeen = requestId;\n            const filters = bucket.filters;\n            for (let i = 0; i < filters.length; i += 1) {\n                // Break the loop if the callback returns `false`\n                if (cb(filters[i]) === false) {\n                    // Whenever we get a match from a filter, we also swap it one\n                    // position up in the list. This way, over time, popular filters will\n                    // be first and might match earlier. This should decrease the time\n                    // needed to get a match.\n                    if (i > 0) {\n                        const filter = filters[i];\n                        filters[i] = filters[i - 1];\n                        filters[i - 1] = filter;\n                    }\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=reverse-index.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { StaticDataView, sizeOfBytes } from '../../data-view.js';\n// Empty filters is 4 bytes because we need at least one 32 bits number to keep\n// track of the number of filters in the container. If there is no filter then\n// the number will be 0.\nconst EMPTY_FILTERS = new Uint8Array(4);\n/**\n * Generic filters container (for both CosmeticFilter and NetworkFilter\n * instances). This abstracts away some of the logic to serialize/lazy-load\n * lists of filters (which is useful for things like generic cosmetic filters\n * or $badfilter).\n */\nexport default class FiltersContainer {\n    static deserialize(buffer, deserialize, config) {\n        const container = new FiltersContainer({ deserialize, config, filters: [] });\n        container.filters = buffer.getBytes();\n        return container;\n    }\n    constructor({ config, deserialize, filters, }) {\n        this.deserialize = deserialize;\n        this.filters = EMPTY_FILTERS;\n        this.config = config;\n        if (filters.length !== 0) {\n            this.update(filters, undefined);\n        }\n    }\n    /**\n     * Update filters based on `newFilters` and `removedFilters`.\n     */\n    update(newFilters, removedFilters) {\n        // Estimate size of the buffer we will need to store filters. This avoids\n        // having to allocate a big chunk of memory up-front if it's not needed.\n        // We start with the current size of `this.filters` then update it with\n        // removed/added filters.\n        let bufferSizeEstimation = this.filters.byteLength;\n        let selected = [];\n        const compression = this.config.enableCompression;\n        // Add existing rules (removing the ones with ids in `removedFilters`)\n        const currentFilters = this.getFilters();\n        if (currentFilters.length !== 0) {\n            // If no filter was removed (we only add new ones), we don't need to\n            // filter out removed existing filters. So we just assign the array to\n            // `selected` directly to save a bit of effort.\n            if (removedFilters === undefined || removedFilters.size === 0) {\n                selected = currentFilters;\n            }\n            else {\n                // There might be some removed selected filters, so we iterate through\n                // them and make sure we keep only the ones not having been deleted.\n                for (const filter of currentFilters) {\n                    if (removedFilters.has(filter.getId()) === false) {\n                        selected.push(filter);\n                    }\n                    else {\n                        bufferSizeEstimation -= filter.getSerializedSize(compression);\n                    }\n                }\n            }\n        }\n        // If `selected` and `currentFilters` have the same length then no filter was removed.\n        const storedFiltersRemoved = selected.length !== currentFilters.length;\n        // Add new rules.\n        const numberOfExistingFilters = selected.length;\n        for (const filter of newFilters) {\n            bufferSizeEstimation += filter.getSerializedSize(compression);\n            selected.push(filter);\n        }\n        // Check if any new filter was added in `selected` (from `newFilters`).\n        const storedFiltersAdded = selected.length > numberOfExistingFilters;\n        // If selected changed, then update the compact representation of filters.\n        if (selected.length === 0) {\n            this.filters = EMPTY_FILTERS;\n        }\n        else if (storedFiltersAdded === true || storedFiltersRemoved === true) {\n            // Store filters in their compact form\n            const buffer = StaticDataView.allocate(bufferSizeEstimation, this.config);\n            buffer.pushUint32(selected.length);\n            // When we run in `debug` mode, we enable fully deterministic updates of\n            // internal data-structure. To this effect, we sort all filters before\n            // insertion.\n            if (this.config.debug === true) {\n                selected.sort((f1, f2) => f1.getId() - f2.getId());\n            }\n            for (const filter of selected) {\n                filter.serialize(buffer);\n            }\n            // Update internals\n            this.filters = buffer.buffer;\n        }\n    }\n    getSerializedSize() {\n        return sizeOfBytes(this.filters, false /* no alignement */);\n    }\n    serialize(buffer) {\n        buffer.pushBytes(this.filters);\n    }\n    getFilters() {\n        // No filter stored in the container\n        if (this.filters.byteLength <= 4) {\n            return [];\n        }\n        // Load all filters in memory and store them in `cache`\n        const filters = [];\n        const buffer = StaticDataView.fromUint8Array(this.filters, this.config);\n        const numberOfFilters = buffer.getUint32();\n        for (let i = 0; i < numberOfFilters; i += 1) {\n            filters.push(this.deserialize(buffer));\n        }\n        return filters;\n    }\n}\n//# sourceMappingURL=filters.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { compactTokens, concatTypedArrays } from '../../compact-set.js';\nimport CosmeticFilter, { DEFAULT_HIDDING_STYLE } from '../../filters/cosmetic.js';\nimport { getEntityHashesFromLabelsBackward, getHostnameHashesFromLabelsBackward, } from '../../request.js';\nimport { hashStrings, tokenizeNoSkip } from '../../utils.js';\nimport { noopOptimizeCosmetic } from '../optimizer.js';\nimport ReverseIndex from '../reverse-index.js';\nimport FiltersContainer from './filters.js';\n/**\n * Given a list of CSS selectors, create a valid stylesheet ready to be\n * injected in the page. This also takes care to no create rules with too many\n * selectors for Chrome, see: https://crbug.com/804179\n */\nexport function createStylesheet(rules, style) {\n    if (rules.length === 0) {\n        return '';\n    }\n    const maximumNumberOfSelectors = 1024;\n    const parts = [];\n    const styleStr = ` { ${style} }`;\n    for (let i = 0; i < rules.length; i += maximumNumberOfSelectors) {\n        // Accumulate up to `maximumNumberOfSelectors` selectors into `selector`.\n        // We use string concatenation here since it's faster than using\n        // `Array.prototype.join`.\n        let selector = rules[i];\n        for (let j = i + 1, end = Math.min(rules.length, i + maximumNumberOfSelectors); j < end; j += 1) {\n            selector += ',\\n' + rules[j];\n        }\n        // Insert CSS after last selector (e.g.: `{ display: none }`)\n        selector += styleStr;\n        // If `rules` has less than the limit, we can short-circuit here\n        if (rules.length < maximumNumberOfSelectors) {\n            return selector;\n        }\n        // Keep track of this chunk and process next ones\n        parts.push(selector);\n    }\n    // Join all chunks together\n    return parts.join('\\n');\n}\n/**\n * If at least one filter from `rules` has a custom style (e.g.: `##.foo\n * :style(...)`) then we fallback to `createStylesheetFromRulesWithCustomStyles`\n * which is slower than `createStylesheetFromRules`.\n */\nfunction createStylesheetFromRulesWithCustomStyles(rules) {\n    const selectorsPerStyle = new Map();\n    for (const rule of rules) {\n        const style = rule.getStyle();\n        const selectors = selectorsPerStyle.get(style);\n        if (selectors === undefined) {\n            selectorsPerStyle.set(style, [rule.getSelector()]);\n        }\n        else {\n            selectors.push(rule.getSelector());\n        }\n    }\n    const stylesheets = [];\n    const selectorsPerStyleArray = Array.from(selectorsPerStyle.entries());\n    for (const [style, selectors] of selectorsPerStyleArray) {\n        stylesheets.push(createStylesheet(selectors, style));\n    }\n    return stylesheets.join('\\n\\n');\n}\n/**\n * Given a list of cosmetic filters, create a stylesheet ready to be injected.\n * This function is optimistic and will assume there is no `:style` filter in\n * `rules`. In case one is found on the way, we fallback to the slower\n * `createStylesheetFromRulesWithCustomStyles` function.\n */\nfunction createStylesheetFromRules(rules) {\n    const selectors = [];\n    for (const rule of rules) {\n        if (rule.hasCustomStyle()) {\n            return createStylesheetFromRulesWithCustomStyles(rules);\n        }\n        selectors.push(rule.selector);\n    }\n    return createStylesheet(selectors, DEFAULT_HIDDING_STYLE);\n}\nfunction createLookupTokens(hostname, domain) {\n    const hostnamesHashes = getHostnameHashesFromLabelsBackward(hostname, domain);\n    const entitiesHashes = getEntityHashesFromLabelsBackward(hostname, domain);\n    const tokens = new Uint32Array(hostnamesHashes.length + entitiesHashes.length);\n    let index = 0;\n    for (const hash of hostnamesHashes) {\n        tokens[index++] = hash;\n    }\n    for (const hash of entitiesHashes) {\n        tokens[index++] = hash;\n    }\n    return tokens;\n}\n/**\n * Efficient container for CosmeticFilter instances. Allows to quickly\n * retrieved scripts and stylesheets to inject in pages for a specific\n * hostname/domain.\n */\nexport default class CosmeticFilterBucket {\n    static deserialize(buffer, config) {\n        const bucket = new CosmeticFilterBucket({ config });\n        bucket.genericRules = FiltersContainer.deserialize(buffer, CosmeticFilter.deserialize, config);\n        bucket.classesIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.hostnameIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.hrefsIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.htmlIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.idsIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.unhideIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        return bucket;\n    }\n    constructor({ filters = [], config }) {\n        this.genericRules = new FiltersContainer({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n        });\n        this.classesIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.hostnameIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.hrefsIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.htmlIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.idsIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.unhideIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        // In-memory cache, lazily initialized\n        this.baseStylesheet = null;\n        this.extraGenericRules = null;\n        if (filters.length !== 0) {\n            this.update(filters, undefined, config);\n        }\n    }\n    getFilters() {\n        const filters = [];\n        return filters.concat(this.genericRules.getFilters(), this.classesIndex.getFilters(), this.hostnameIndex.getFilters(), this.hrefsIndex.getFilters(), this.htmlIndex.getFilters(), this.idsIndex.getFilters(), this.unhideIndex.getFilters());\n    }\n    update(newFilters, removedFilters, config) {\n        const classSelectors = [];\n        const genericHideRules = [];\n        const hostnameSpecificRules = [];\n        const hrefSelectors = [];\n        const htmlRules = [];\n        const idSelectors = [];\n        const unHideRules = [];\n        for (const rule of newFilters) {\n            if (rule.isUnhide()) {\n                unHideRules.push(rule);\n            }\n            else if (rule.isHtmlFiltering()) {\n                htmlRules.push(rule);\n            }\n            else if (rule.isGenericHide()) {\n                if (rule.isClassSelector()) {\n                    classSelectors.push(rule);\n                }\n                else if (rule.isIdSelector()) {\n                    idSelectors.push(rule);\n                }\n                else if (rule.isHrefSelector()) {\n                    hrefSelectors.push(rule);\n                }\n                else {\n                    genericHideRules.push(rule);\n                }\n            }\n            else if (rule.isExtended() === false || config.loadExtendedSelectors === true) {\n                hostnameSpecificRules.push(rule);\n            }\n        }\n        this.genericRules.update(genericHideRules, removedFilters);\n        this.classesIndex.update(classSelectors, removedFilters);\n        this.hostnameIndex.update(hostnameSpecificRules, removedFilters);\n        this.hrefsIndex.update(hrefSelectors, removedFilters);\n        this.htmlIndex.update(htmlRules, removedFilters);\n        this.idsIndex.update(idSelectors, removedFilters);\n        this.unhideIndex.update(unHideRules, removedFilters);\n    }\n    getSerializedSize() {\n        return (this.genericRules.getSerializedSize() +\n            this.classesIndex.getSerializedSize() +\n            this.hostnameIndex.getSerializedSize() +\n            this.hrefsIndex.getSerializedSize() +\n            this.htmlIndex.getSerializedSize() +\n            this.idsIndex.getSerializedSize() +\n            this.unhideIndex.getSerializedSize());\n    }\n    serialize(buffer) {\n        this.genericRules.serialize(buffer);\n        this.classesIndex.serialize(buffer);\n        this.hostnameIndex.serialize(buffer);\n        this.hrefsIndex.serialize(buffer);\n        this.htmlIndex.serialize(buffer);\n        this.idsIndex.serialize(buffer);\n        this.unhideIndex.serialize(buffer);\n    }\n    getHtmlFilters({ domain, hostname, isFilterExcluded, }) {\n        const filters = [];\n        // Tokens from `hostname` and `domain` which will be used to lookup filters\n        // from the reverse index. The same tokens are re-used for multiple indices.\n        const hostnameTokens = createLookupTokens(hostname, domain);\n        this.htmlIndex.iterMatchingFilters(hostnameTokens, (rule) => {\n            if (rule.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                filters.push(rule);\n            }\n            return true;\n        });\n        const unhides = [];\n        // If we found at least one candidate, check if we have unhidden rules.\n        if (filters.length !== 0) {\n            this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule) => {\n                if (rule.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                    unhides.push(rule);\n                }\n                return true;\n            });\n        }\n        return { filters, unhides };\n    }\n    /**\n     * Request cosmetics and scripts to inject in a page.\n     */\n    getCosmeticsFilters({ domain, hostname, classes = [], hrefs = [], ids = [], allowGenericHides = true, allowSpecificHides = true, \n    // Allows to specify which rules to return\n    getRulesFromDOM = true, getRulesFromHostname = true, isFilterExcluded, }) {\n        // Tokens from `hostname` and `domain` which will be used to lookup filters\n        // from the reverse index. The same tokens are re-used for multiple indices.\n        const hostnameTokens = createLookupTokens(hostname, domain);\n        const filters = [];\n        // =======================================================================\n        // Rules: hostname-specific\n        // =======================================================================\n        // Collect matching rules which specify a hostname constraint.\n        if (getRulesFromHostname === true) {\n            this.hostnameIndex.iterMatchingFilters(hostnameTokens, (filter) => {\n                // A hostname-specific filter is considered if it's a scriptlet (not\n                // impacted by disabling of specific filters) or specific hides are\n                // allowed.\n                if ((allowSpecificHides === true || filter.isScriptInject() === true) &&\n                    filter.match(hostname, domain) &&\n                    !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                    filters.push(filter);\n                }\n                return true;\n            });\n        }\n        // =======================================================================\n        // Rules: generic hide\n        // =======================================================================\n        // Optionally, collect genericHide rules. We need to make sure the `rule`\n        // matches the hostname and domain since some generic rules can specify\n        // negated hostnames and entities (e.g.: ~foo.*##generic).\n        if (allowGenericHides === true && getRulesFromHostname === true) {\n            const genericRules = this.getGenericRules();\n            for (const filter of genericRules) {\n                if (filter.match(hostname, domain) === true && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                    filters.push(filter);\n                }\n            }\n        }\n        // =======================================================================\n        // Class selector based\n        // =======================================================================\n        if (allowGenericHides === true && getRulesFromDOM === true && classes.length !== 0) {\n            this.classesIndex.iterMatchingFilters(hashStrings(classes), (filter) => {\n                if (filter.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                    filters.push(filter);\n                }\n                return true;\n            });\n        }\n        // =======================================================================\n        // Id selector based\n        // =======================================================================\n        if (allowGenericHides === true && getRulesFromDOM === true && ids.length !== 0) {\n            this.idsIndex.iterMatchingFilters(hashStrings(ids), (filter) => {\n                if (filter.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                    filters.push(filter);\n                }\n                return true;\n            });\n        }\n        // =======================================================================\n        // Href selector based\n        // =======================================================================\n        if (allowGenericHides === true && getRulesFromDOM === true && hrefs.length !== 0) {\n            this.hrefsIndex.iterMatchingFilters(compactTokens(concatTypedArrays(hrefs.map((href) => tokenizeNoSkip(href)))), (filter) => {\n                if (filter.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                    filters.push(filter);\n                }\n                return true;\n            });\n        }\n        const unhides = [];\n        // If we found at least one candidate, check if we have unhidden rules,\n        // apply them and dispatch rules into `injections` (i.e.: '+js(...)'),\n        // `extended` (i.e. :not(...)), and `styles` (i.e.: '##rule').\n        if (filters.length !== 0) {\n            // =======================================================================\n            // Rules: unhide\n            // =======================================================================\n            // Collect unhidden selectors. They will be used to filter-out canceled\n            // rules from other indices.\n            this.unhideIndex.iterMatchingFilters(hostnameTokens, (filter) => {\n                if (filter.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                    unhides.push(filter);\n                }\n                return true;\n            });\n        }\n        return {\n            filters,\n            unhides,\n        };\n    }\n    getStylesheetsFromFilters({ filters, extendedFilters, }, { getBaseRules, allowGenericHides, }) {\n        let stylesheet = getBaseRules === false || allowGenericHides === false ? '' : this.getBaseStylesheet();\n        if (filters.length !== 0) {\n            if (stylesheet.length !== 0) {\n                stylesheet += '\\n\\n';\n            }\n            stylesheet += createStylesheetFromRules(filters);\n        }\n        const extended = [];\n        if (extendedFilters.length !== 0) {\n            const extendedStyles = new Map();\n            for (const filter of extendedFilters) {\n                const ast = filter.getSelectorAST();\n                if (ast !== undefined) {\n                    const attribute = filter.isRemove() ? undefined : filter.getStyleAttributeHash();\n                    if (attribute !== undefined) {\n                        extendedStyles.set(filter.getStyle(), attribute);\n                    }\n                    extended.push({\n                        ast,\n                        remove: filter.isRemove(),\n                        attribute,\n                    });\n                }\n            }\n            if (extendedStyles.size !== 0) {\n                if (stylesheet.length !== 0) {\n                    stylesheet += '\\n\\n';\n                }\n                stylesheet += [...extendedStyles.entries()]\n                    .map(([style, attribute]) => `[${attribute}] { ${style} }`)\n                    .join('\\n\\n');\n            }\n        }\n        return { stylesheet, extended };\n    }\n    /**\n     * Return the list of filters which can potentially be un-hidden by another\n     * rule currently contained in the cosmetic bucket.\n     */\n    getGenericRules() {\n        if (this.extraGenericRules === null) {\n            return this.lazyPopulateGenericRulesCache().genericRules;\n        }\n        return this.extraGenericRules;\n    }\n    /**\n     * The base stylesheet is made of generic filters (not specific to any\n     * hostname) which cannot be hidden (i.e.: there is currently no rule which\n     * might hide their selector). This means that it will never change and is\n     * the same for all sites. We generate it once and re-use it any-time we want\n     * to inject it.\n     */\n    getBaseStylesheet() {\n        if (this.baseStylesheet === null) {\n            return this.lazyPopulateGenericRulesCache().baseStylesheet;\n        }\n        return this.baseStylesheet;\n    }\n    /**\n     * This is used to lazily generate both the list of generic rules which can\n     * *potentially be un-hidden* (i.e.: there exists at least one unhide rule\n     * for the selector) and a stylesheet containing all selectors which cannot\n     * be un-hidden. Since this list will not change between updates we can\n     * generate once and use many times.\n     */\n    lazyPopulateGenericRulesCache() {\n        if (this.baseStylesheet === null || this.extraGenericRules === null) {\n            // Collect all selectors which can be subjected to an unhide rule\n            const unHideRules = this.unhideIndex.getFilters();\n            const canBeHiddenSelectors = new Set();\n            for (const rule of unHideRules) {\n                canBeHiddenSelectors.add(rule.getSelector());\n            }\n            // Split generic rules into two groups:\n            // 1. Rules which cannot be hidden\n            // 2. Rules which can be hidden on some domains\n            //\n            // This allows to create a base stylesheet which we know will never\n            // change then keep a minority of rules in-memory which can potentially\n            // be hidden.\n            const genericRules = this.genericRules.getFilters();\n            const cannotBeHiddenRules = [];\n            const canBeHiddenRules = [];\n            for (const rule of genericRules) {\n                if (rule.hasCustomStyle() ||\n                    rule.isScriptInject() ||\n                    rule.hasHostnameConstraint() ||\n                    canBeHiddenSelectors.has(rule.getSelector())) {\n                    canBeHiddenRules.push(rule);\n                }\n                else {\n                    cannotBeHiddenRules.push(rule);\n                }\n            }\n            this.baseStylesheet = createStylesheetFromRules(cannotBeHiddenRules);\n            this.extraGenericRules = canBeHiddenRules;\n        }\n        return {\n            baseStylesheet: this.baseStylesheet,\n            genericRules: this.extraGenericRules,\n        };\n    }\n}\n//# sourceMappingURL=cosmetic.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport NetworkFilter from '../../filters/network.js';\nimport { noopOptimizeNetwork, optimizeNetwork } from '../optimizer.js';\nimport ReverseIndex from '../reverse-index.js';\nimport FiltersContainer from './filters.js';\n/**\n * Accelerating data structure for network filters matching.\n */\nexport default class NetworkFilterBucket {\n    static deserialize(buffer, config) {\n        const bucket = new NetworkFilterBucket({ config });\n        bucket.index = ReverseIndex.deserialize(buffer, NetworkFilter.deserialize, config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork, config);\n        bucket.badFilters = FiltersContainer.deserialize(buffer, NetworkFilter.deserialize, config);\n        return bucket;\n    }\n    constructor({ filters = [], config }) {\n        this.index = new ReverseIndex({\n            config,\n            deserialize: NetworkFilter.deserialize,\n            filters: [],\n            optimize: config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n        });\n        this.badFiltersIds = null;\n        this.badFilters = new FiltersContainer({\n            config,\n            deserialize: NetworkFilter.deserialize,\n            filters: [],\n        });\n        if (filters.length !== 0) {\n            this.update(filters, undefined);\n        }\n    }\n    getFilters() {\n        const filters = [];\n        return filters.concat(this.badFilters.getFilters(), this.index.getFilters());\n    }\n    update(newFilters, removedFilters) {\n        const badFilters = [];\n        const remaining = [];\n        for (const filter of newFilters) {\n            if (filter.isBadFilter()) {\n                badFilters.push(filter);\n            }\n            else {\n                remaining.push(filter);\n            }\n        }\n        this.badFilters.update(badFilters, removedFilters);\n        this.index.update(remaining, removedFilters);\n        this.badFiltersIds = null;\n    }\n    getSerializedSize() {\n        return this.badFilters.getSerializedSize() + this.index.getSerializedSize();\n    }\n    serialize(buffer) {\n        this.index.serialize(buffer);\n        this.badFilters.serialize(buffer);\n    }\n    matchAll(request, isFilterExcluded) {\n        const filters = [];\n        this.index.iterMatchingFilters(request.getTokens(), (filter) => {\n            if (filter.match(request) &&\n                this.isFilterDisabled(filter) === false &&\n                !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                filters.push(filter);\n            }\n            return true;\n        });\n        return filters;\n    }\n    match(request, isFilterExcluded) {\n        let match;\n        this.index.iterMatchingFilters(request.getTokens(), (filter) => {\n            if (filter.match(request) &&\n                this.isFilterDisabled(filter) === false &&\n                !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                match = filter;\n                return false;\n            }\n            return true;\n        });\n        return match;\n    }\n    /**\n     * Given a matching filter, check if it is disabled by a $badfilter.\n     */\n    isFilterDisabled(filter) {\n        // Lazily load information about bad filters in memory. The only thing we\n        // keep in memory is the list of IDs from $badfilter (ignoring the\n        // $badfilter option from mask). This allows to check if a matching filter\n        // should be ignored just by doing a lookup in a set of IDs.\n        if (this.badFiltersIds === null) {\n            const badFilters = this.badFilters.getFilters();\n            // Shortcut if there is no badfilter in this bucket\n            if (badFilters.length === 0) {\n                return false;\n            }\n            // Create in-memory list of disabled filter IDs\n            const badFiltersIds = new Set();\n            for (const badFilter of badFilters) {\n                badFiltersIds.add(badFilter.getIdWithoutBadFilter());\n            }\n            this.badFiltersIds = badFiltersIds;\n        }\n        return this.badFiltersIds.has(filter.getId());\n    }\n}\n//# sourceMappingURL=network.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { StaticDataView, sizeOfBytes, EMPTY_UINT32_ARRAY } from '../data-view.js';\nimport { nextPow2 } from './reverse-index.js';\nconst EMPTY_BUCKET = Number.MAX_SAFE_INTEGER >>> 0;\n/**\n * This is a simpler version of reverse-index data structure which implements\n * a simple Map-like class, backed by compact typed arrays. This means that\n * the structure can be serialized to a typed array very quickly and loaded\n * back instantly.\n */\nexport class CompactMap {\n    static deserialize(buffer, deserialize) {\n        const tokensLookupIndexSize = buffer.getUint32();\n        const bucketsIndexSize = buffer.getUint32();\n        const numberOfValues = buffer.getUint32();\n        // Alignement to 4 bytes is important here since `view` (Uint8Array) can\n        // appear at any offset of `buffer`. But to be sure we can read back\n        // Uint32Array directly from raw buffer, the alignement has to be a\n        // multiple of 4. The same alignement is taken care of in `serialize`.\n        const view = StaticDataView.fromUint8Array(buffer.getBytes(true /* align */), {\n            enableCompression: false,\n        });\n        const tokensLookupIndex = view.getUint32ArrayView(tokensLookupIndexSize);\n        const bucketsIndex = view.getUint32ArrayView(bucketsIndexSize);\n        const valuesIndexStart = view.pos;\n        view.seekZero(); // not strictly needed but make sure reverse index can be compared with deep equal\n        return new CompactMap({\n            deserialize,\n            // Left empty on purpose since we don't need these to deserialize (all\n            // the data is already in the serialized data).\n            values: [],\n            getKeys: () => [],\n            getSerializedSize: () => 0,\n            serialize: () => {\n                /* Empty */\n            },\n        }).updateInternals({\n            bucketsIndex,\n            valuesIndexStart,\n            numberOfValues,\n            tokensLookupIndex,\n            view,\n        });\n    }\n    constructor({ serialize, deserialize, getKeys, getSerializedSize, values, }) {\n        // In-memory cache used to keep track of metadata which has already been\n        // loaded from the compact representation (i.e.: this.view). It is not\n        // strictly necessary but will speed-up retrival of popular patterns\n        // (since we do not have to perform the lookup again).\n        this.cache = new Map();\n        this.bucketsIndex = EMPTY_UINT32_ARRAY;\n        this.tokensLookupIndex = EMPTY_UINT32_ARRAY;\n        this.valuesIndexStart = 0;\n        this.numberOfValues = 0;\n        this.view = StaticDataView.empty({ enableCompression: false });\n        this.deserializeValue = deserialize;\n        if (values.length !== 0) {\n            const patternsKeys = [];\n            // Keep track of the final size of the buckets index. `bucketsIndexSize`\n            // is the number of indexed values, multiplied by 2 (since we store both\n            // the `key` a value is indexed with and the index of the value itself).\n            let bucketsIndexSize = 0;\n            // Create a list of all values which will be part of the map. This means\n            // computing an estimation of the buffer size needed to store this index.\n            let estimatedBufferSize = 0;\n            for (const value of values) {\n                estimatedBufferSize += getSerializedSize(value);\n            }\n            // No values given; reset to empty index and abort.\n            if (values.length === 0) {\n                this.updateInternals({\n                    bucketsIndex: EMPTY_UINT32_ARRAY,\n                    valuesIndexStart: 0,\n                    numberOfValues: 0,\n                    tokensLookupIndex: EMPTY_UINT32_ARRAY,\n                    view: StaticDataView.empty({ enableCompression: false }),\n                });\n                return;\n            }\n            for (const value of values) {\n                // Get keys from `value` and store the result in `patternsKeys` which\n                // will be used in the next step to select the best key for each value.\n                const keys = getKeys(value);\n                patternsKeys.push(keys);\n                bucketsIndexSize += 2 * keys.length; // key + value index\n            }\n            // Add size of bucketsIndex to total size (x4 because these are 32 bits numbers)\n            estimatedBufferSize += bucketsIndexSize * 4;\n            // Prepare \"tokens index\" (see documentation in constructor of `ReverseIndex` class).\n            const tokensLookupIndexSize = Math.max(2, nextPow2(values.length));\n            const mask = tokensLookupIndexSize - 1;\n            const suffixes = [];\n            for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n                suffixes.push([]);\n            }\n            // Add size of tokensLookupIndex to total size (x4 because these are 32 bits numbers)\n            estimatedBufferSize += tokensLookupIndexSize * 4;\n            // At this point we know the number of bytes needed for the compact\n            // representation of this map (\"tokens index\" + \"buckets index\" +\n            // \"values index\"). We allocate it at once and proceed with populating it.\n            const buffer = StaticDataView.allocate(estimatedBufferSize, { enableCompression: false });\n            const tokensLookupIndex = buffer.getUint32ArrayView(tokensLookupIndexSize);\n            const bucketsIndex = buffer.getUint32ArrayView(bucketsIndexSize);\n            const valuesIndexStart = buffer.getPos();\n            // For each value, find the best token (least seen) based on histogram.\n            // Since we are iterating again on the values, we populate \"values index\"\n            // in the same loop and keep track of their indices so that we can later\n            // populate \"buckets index\".\n            for (let i = 0; i < patternsKeys.length; i += 1) {\n                const value = values[i];\n                const keys = patternsKeys[i];\n                // Serialize this value and keep track of its index in the byte array;\n                // it will be used in \"buckets index\" to point to this value.\n                const valueIndex = buffer.pos;\n                serialize(value, buffer);\n                for (const key of keys) {\n                    // `key & mask` represents the N last bits of `key`. We group all\n                    // values indexed with the same `key` sharing the same N bits.\n                    suffixes[key & mask].push([key, valueIndex]);\n                }\n            }\n            // Populate \"tokens index\" and \"buckets index\" based on keys for each value.\n            let indexInBucketsIndex = 0;\n            for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n                const valuesForMask = suffixes[i];\n                tokensLookupIndex[i] = indexInBucketsIndex;\n                for (const [token, valueIndex] of valuesForMask) {\n                    bucketsIndex[indexInBucketsIndex++] = token;\n                    bucketsIndex[indexInBucketsIndex++] = valueIndex;\n                }\n            }\n            // Update internals\n            this.updateInternals({\n                bucketsIndex,\n                valuesIndexStart,\n                numberOfValues: patternsKeys.length,\n                tokensLookupIndex,\n                view: buffer,\n            });\n        }\n    }\n    updateInternals({ bucketsIndex, valuesIndexStart, numberOfValues, tokensLookupIndex, view, }) {\n        this.bucketsIndex = bucketsIndex;\n        this.valuesIndexStart = valuesIndexStart;\n        this.numberOfValues = numberOfValues;\n        this.tokensLookupIndex = tokensLookupIndex;\n        this.view = view;\n        view.seekZero();\n        return this;\n    }\n    getValues() {\n        const values = [];\n        if (this.numberOfValues === 0) {\n            return values;\n        }\n        // set view cursor at the start of \"values index\"\n        this.view.setPos(this.valuesIndexStart);\n        for (let i = 0; i < this.numberOfValues; i += 1) {\n            values.push(this.deserializeValue(this.view));\n        }\n        this.view.seekZero();\n        return values;\n    }\n    /**\n     * Estimate the number of bytes needed to serialize this instance of `Map`.\n     */\n    getSerializedSize() {\n        // 12 = 4 bytes (tokensLookupIndex.length) + 4 bytes (bucketsIndex.length) + 4 bytes (numberOfValues)\n        return 12 + sizeOfBytes(this.view.buffer, true /* align */);\n    }\n    /**\n     * Dump this index to `buffer`.\n     */\n    serialize(buffer) {\n        buffer.pushUint32(this.tokensLookupIndex.length);\n        buffer.pushUint32(this.bucketsIndex.length);\n        buffer.pushUint32(this.numberOfValues);\n        // Aligmenent is crucial here, see comment in `deserialize` for more info.\n        buffer.pushBytes(this.view.buffer, true /* align */);\n    }\n    get(key) {\n        const cachedValues = this.cache.get(key);\n        if (cachedValues !== undefined) {\n            return cachedValues;\n        }\n        const offset = key & (this.tokensLookupIndex.length - 1);\n        const startOfBucket = this.tokensLookupIndex[offset];\n        // We do not have any values for this token\n        if (startOfBucket === EMPTY_BUCKET) {\n            return [];\n        }\n        // Since we do not store explicitly the number of values in each\n        // \"bucket\", we check the index of the next one and use it to infer the\n        // number of values (each value being stored as a token + index to the\n        // \"values store\")\n        const endOfBucket = offset === this.tokensLookupIndex.length - 1\n            ? this.bucketsIndex.length\n            : this.tokensLookupIndex[offset + 1];\n        // Get indices of values indexed with `token`, if any.\n        const valuesIndices = [];\n        for (let i = startOfBucket; i < endOfBucket; i += 2) {\n            const currentToken = this.bucketsIndex[i];\n            if (currentToken === key) {\n                valuesIndices.push(this.bucketsIndex[i + 1]);\n            }\n        }\n        // No value indexed with `token`.\n        if (valuesIndices.length === 0) {\n            return []; // continue looking for a match\n        }\n        // If we have values for `token` then deserialize values in memory and\n        // create a `Bucket` instance to hold them for future access.\n        const values = [];\n        const view = this.view;\n        for (let i = 0; i < valuesIndices.length; i += 1) {\n            view.setPos(valuesIndices[i]);\n            values.push(this.deserializeValue(view));\n        }\n        this.cache.set(key, values);\n        return values;\n    }\n}\n//# sourceMappingURL=map.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { CompactMap } from '../map.js';\nimport { sizeOfUTF8 } from '../../data-view.js';\nimport { fastHash } from '../../utils.js';\nexport function isValid(category) {\n    if (category === null) {\n        return false;\n    }\n    if (typeof category !== 'object') {\n        return false;\n    }\n    const { key, name, color, description } = category;\n    if (typeof key !== 'string') {\n        return false;\n    }\n    if (typeof name !== 'string') {\n        return false;\n    }\n    if (typeof color !== 'string') {\n        return false;\n    }\n    if (typeof description !== 'string') {\n        return false;\n    }\n    return true;\n}\nexport function getKey(category) {\n    return fastHash(category.key);\n}\nexport function getSerializedSize(category) {\n    return (sizeOfUTF8(category.key) +\n        sizeOfUTF8(category.name) +\n        sizeOfUTF8(category.color) +\n        sizeOfUTF8(category.description));\n}\nexport function serialize(category, view) {\n    view.pushUTF8(category.key);\n    view.pushUTF8(category.name);\n    view.pushUTF8(category.color);\n    view.pushUTF8(category.description);\n}\nexport function deserialize(view) {\n    return {\n        key: view.getUTF8(),\n        name: view.getUTF8(),\n        color: view.getUTF8(),\n        description: view.getUTF8(),\n    };\n}\nexport function createMap(categories) {\n    return new CompactMap({\n        getSerializedSize,\n        getKeys: (category) => [getKey(category)],\n        serialize,\n        deserialize,\n        values: categories,\n    });\n}\n//# sourceMappingURL=categories.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { CompactMap } from '../map.js';\nimport { sizeOfUTF8 } from '../../data-view.js';\nimport { fastHash } from '../../utils.js';\n/**\n * This function takes an object representing an organization from TrackerDB\n * dump and validates its shape. The result is the same object, but strongly\n * typed.\n */\nexport function isValid(organization) {\n    if (organization === null) {\n        return false;\n    }\n    if (typeof organization !== 'object') {\n        return false;\n    }\n    const { key, name, description, country, website_url: websiteUrl, privacy_policy_url: privacyPolicyUrl, privacy_contact: privacyContact, ghostery_id: ghosteryId, } = organization;\n    if (typeof key !== 'string') {\n        return false;\n    }\n    if (typeof name !== 'string') {\n        return false;\n    }\n    if (description !== null && typeof description !== 'string') {\n        return false;\n    }\n    if (country !== null && typeof country !== 'string') {\n        return false;\n    }\n    if (websiteUrl !== null && typeof websiteUrl !== 'string') {\n        return false;\n    }\n    if (privacyPolicyUrl !== null && typeof privacyPolicyUrl !== 'string') {\n        return false;\n    }\n    if (privacyContact !== null && typeof privacyContact !== 'string') {\n        return false;\n    }\n    if (ghosteryId !== null && typeof ghosteryId !== 'string') {\n        return false;\n    }\n    return true;\n}\nexport function getKey(organization) {\n    return fastHash(organization.key);\n}\nexport function getSerializedSize(organization) {\n    return (sizeOfUTF8(organization.key) +\n        sizeOfUTF8(organization.name) +\n        sizeOfUTF8(organization.description || '') +\n        sizeOfUTF8(organization.website_url || '') +\n        sizeOfUTF8(organization.country || '') +\n        sizeOfUTF8(organization.privacy_policy_url || '') +\n        sizeOfUTF8(organization.privacy_contact || '') +\n        sizeOfUTF8(organization.ghostery_id || ''));\n}\nexport function serialize(organization, view) {\n    view.pushUTF8(organization.key);\n    view.pushUTF8(organization.name);\n    view.pushUTF8(organization.description || '');\n    view.pushUTF8(organization.website_url || '');\n    view.pushUTF8(organization.country || '');\n    view.pushUTF8(organization.privacy_policy_url || '');\n    view.pushUTF8(organization.privacy_contact || '');\n    view.pushUTF8(organization.ghostery_id || '');\n}\nexport function deserialize(view) {\n    return {\n        key: view.getUTF8(),\n        name: view.getUTF8(),\n        description: view.getUTF8() || null,\n        website_url: view.getUTF8() || null,\n        country: view.getUTF8() || null,\n        privacy_policy_url: view.getUTF8() || null,\n        privacy_contact: view.getUTF8() || null,\n        ghostery_id: view.getUTF8() || null,\n    };\n}\nexport function createMap(organizations) {\n    return new CompactMap({\n        getSerializedSize,\n        getKeys: (organization) => [getKey(organization)],\n        serialize,\n        deserialize,\n        values: organizations,\n    });\n}\n//# sourceMappingURL=organizations.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { CompactMap } from '../map.js';\nimport { sizeOfUTF8, sizeOfLength } from '../../data-view.js';\nimport NetworkFilter from '../../filters/network.js';\n/**\n * This function takes an object representing a pattern from TrackerDB dump\n * and validates its shape. The result is the same object, but strongly typed.\n */\nexport function isValid(pattern) {\n    if (pattern === null) {\n        return false;\n    }\n    if (typeof pattern !== 'object') {\n        return false;\n    }\n    const { key, name, category, organization, alias, website_url: websiteUrl, domains, filters, } = pattern;\n    if (typeof key !== 'string') {\n        return false;\n    }\n    if (typeof name !== 'string') {\n        return false;\n    }\n    if (typeof category !== 'string') {\n        return false;\n    }\n    if (organization !== null && typeof organization !== 'string') {\n        return false;\n    }\n    if (typeof alias !== 'string' && alias !== null) {\n        return false;\n    }\n    if (websiteUrl !== null && typeof websiteUrl !== 'string') {\n        return false;\n    }\n    if (!Array.isArray(domains) || !domains.every((domain) => typeof domain === 'string')) {\n        return false;\n    }\n    if (!Array.isArray(filters) || !filters.every((filter) => typeof filter === 'string')) {\n        return false;\n    }\n    return true;\n}\nexport function getKeys(pattern) {\n    const keys = [];\n    for (const filter of pattern.filters) {\n        const parsedFilter = NetworkFilter.parse(filter);\n        if (parsedFilter !== null) {\n            keys.push(parsedFilter.getId());\n        }\n    }\n    for (const domain of pattern.domains) {\n        const parsedFilter = NetworkFilter.parse(`||${domain}^`);\n        if (parsedFilter !== null) {\n            keys.push(parsedFilter.getId());\n        }\n    }\n    return [...new Set(keys)];\n}\nexport function getSerializedSize(pattern) {\n    let sizeOfDomains = sizeOfLength(pattern.domains.length);\n    for (const domain of pattern.domains) {\n        sizeOfDomains += sizeOfUTF8(domain);\n    }\n    let sizeOfFilters = sizeOfLength(pattern.filters.length);\n    for (const filter of pattern.filters) {\n        sizeOfFilters += sizeOfUTF8(filter);\n    }\n    return (sizeOfUTF8(pattern.key) +\n        sizeOfUTF8(pattern.name) +\n        sizeOfUTF8(pattern.category) +\n        sizeOfUTF8(pattern.organization || '') +\n        sizeOfUTF8(pattern.alias || '') +\n        sizeOfUTF8(pattern.website_url || '') +\n        sizeOfUTF8(pattern.ghostery_id || '') +\n        sizeOfDomains +\n        sizeOfFilters);\n}\nexport function serialize(pattern, view) {\n    view.pushUTF8(pattern.key);\n    view.pushUTF8(pattern.name);\n    view.pushUTF8(pattern.category);\n    view.pushUTF8(pattern.organization || '');\n    view.pushUTF8(pattern.alias || '');\n    view.pushUTF8(pattern.website_url || '');\n    view.pushUTF8(pattern.ghostery_id || '');\n    view.pushLength(pattern.domains.length);\n    for (const domain of pattern.domains) {\n        view.pushUTF8(domain);\n    }\n    view.pushLength(pattern.filters.length);\n    for (const filter of pattern.filters) {\n        view.pushUTF8(filter);\n    }\n}\nexport function deserialize(view) {\n    const key = view.getUTF8();\n    const name = view.getUTF8();\n    const category = view.getUTF8();\n    const organization = view.getUTF8() || null;\n    const alias = view.getUTF8() || null;\n    const website_url = view.getUTF8() || null;\n    const ghostery_id = view.getUTF8() || null;\n    const numberOfDomains = view.getLength();\n    const domains = [];\n    for (let i = 0; i < numberOfDomains; i += 1) {\n        domains.push(view.getUTF8());\n    }\n    const numberOfFilters = view.getLength();\n    const filters = [];\n    for (let i = 0; i < numberOfFilters; i += 1) {\n        filters.push(view.getUTF8());\n    }\n    return {\n        key,\n        name,\n        category,\n        organization,\n        alias,\n        website_url,\n        ghostery_id,\n        domains,\n        filters,\n    };\n}\nexport function createMap(patterns) {\n    return new CompactMap({\n        getSerializedSize,\n        getKeys,\n        serialize,\n        deserialize,\n        values: patterns,\n    });\n}\n//# sourceMappingURL=patterns.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { CompactMap } from './map.js';\nimport NetworkFilter from '../filters/network.js';\nimport { createMap as createCategoriesMap, isValid as isValidCategory, deserialize as deserializeCategory, getKey as getCategoryKey, } from './metadata/categories.js';\nimport { createMap as createOrganizationsMap, isValid as isValidOrganization, deserialize as deserializeOrganization, getKey as getOrganizationKey, } from './metadata/organizations.js';\nimport { createMap as createPatternsMap, isValid as isValidPattern, deserialize as deserializePattern, } from './metadata/patterns.js';\n// Optionally, we can also compress their names and descriptions but I think that should not be necessary as it's probably pretty small.\n// Usage in MV3 extension\n// ======================\n// 1. The extension will load the binary engine containing metadata and store it locally\n// 2. Either on webRequest events or DNR filter IDs (requires to synchronize the IDs), we tag the request with their metadata\n// (2.) At runtime, we will either feed it a request and we expect to get metadata (match, get filter, then from filter ID, get metadata)\n//    Or we feed it the filter ID directly, from the DNR engine (but then it means we need to use the filter hash as an ID there as well and hope for no collision)\nexport class Metadata {\n    static deserialize(buffer) {\n        const metadata = new Metadata(null);\n        metadata.categories = CompactMap.deserialize(buffer, deserializeCategory);\n        metadata.organizations = CompactMap.deserialize(buffer, deserializeOrganization);\n        metadata.patterns = CompactMap.deserialize(buffer, deserializePattern);\n        return metadata;\n    }\n    constructor(rawTrackerDB) {\n        if (!rawTrackerDB) {\n            this.organizations = createOrganizationsMap([]);\n            this.categories = createCategoriesMap([]);\n            this.patterns = createPatternsMap([]);\n            return;\n        }\n        const { patterns: rawPatterns, organizations: rawOrganizations, categories: rawCategories, } = rawTrackerDB;\n        // Type-check categories\n        const categories = [];\n        if (typeof rawCategories === 'object') {\n            for (const [key, category] of Object.entries(rawCategories)) {\n                if (typeof category !== 'object') {\n                    continue;\n                }\n                const categoryWithKey = { key, ...category };\n                if (isValidCategory(categoryWithKey)) {\n                    categories.push(categoryWithKey);\n                }\n                else {\n                    console.error('?? invalid category', categoryWithKey);\n                }\n            }\n        }\n        this.categories = createCategoriesMap(categories);\n        // Type-check organizations\n        const organizations = [];\n        if (typeof rawOrganizations === 'object') {\n            for (const [key, organization] of Object.entries(rawOrganizations)) {\n                if (typeof organization !== 'object') {\n                    continue;\n                }\n                const organizationWithKey = { key, ...organization };\n                if (isValidOrganization(organizationWithKey)) {\n                    organizations.push(organizationWithKey);\n                }\n                else {\n                    console.error('?? invalid organization', organizationWithKey);\n                }\n            }\n        }\n        this.organizations = createOrganizationsMap(organizations);\n        // Type-check patterns\n        const patterns = [];\n        if (typeof rawPatterns === 'object') {\n            for (const [key, pattern] of Object.entries(rawPatterns)) {\n                if (typeof pattern !== 'object') {\n                    continue;\n                }\n                const patternWithKey = { key, ...pattern };\n                if (isValidPattern(patternWithKey)) {\n                    patterns.push(patternWithKey);\n                }\n                else {\n                    console.error('?? invalid pattern', patternWithKey);\n                }\n            }\n        }\n        this.patterns = createPatternsMap(patterns);\n    }\n    getCategories() {\n        return this.categories.getValues();\n    }\n    getOrganizations() {\n        return this.organizations.getValues();\n    }\n    getPatterns() {\n        return this.patterns.getValues();\n    }\n    /**\n     * Estimate the total serialized size of this Metadata instance.\n     */\n    getSerializedSize() {\n        return (this.categories.getSerializedSize() +\n            this.organizations.getSerializedSize() +\n            this.patterns.getSerializedSize());\n    }\n    /**\n     * Serialize this instance of Metadata into `view`\n     */\n    serialize(buffer) {\n        this.categories.serialize(buffer);\n        this.organizations.serialize(buffer);\n        this.patterns.serialize(buffer);\n    }\n    /**\n     * Given an instance of NetworkFilter, retrieve pattern, organization and\n     * category information.\n     */\n    fromFilter(filter) {\n        return this.fromId(filter.getId());\n    }\n    /**\n     * Given a domain, retrieve pattern, organization and category information.\n     */\n    fromDomain(domain) {\n        const domainParts = domain.split('.');\n        for (; domainParts.length >= 2; domainParts.shift()) {\n            const subdomain = domainParts.join('.');\n            const parsedDomainFilter = NetworkFilter.parse(`||${subdomain}^`);\n            if (parsedDomainFilter === null) {\n                continue;\n            }\n            const patterns = this.fromId(parsedDomainFilter.getId());\n            if (patterns.length > 0) {\n                return patterns;\n            }\n        }\n        return [];\n    }\n    /**\n     * Given an `id` from filter, retrieve using the NetworkFilter.getId() method,\n     * lookup associated patterns (including organization and category) in an\n     * efficient way.\n     */\n    fromId(id) {\n        var _a, _b;\n        const results = [];\n        for (const pattern of this.patterns.get(id)) {\n            results.push({\n                pattern,\n                category: (_a = this.categories.get(getCategoryKey({ key: pattern.category }))) === null || _a === void 0 ? void 0 : _a[0],\n                organization: pattern.organization !== null\n                    ? (_b = this.organizations.get(getOrganizationKey({ key: pattern.organization }))) === null || _b === void 0 ? void 0 : _b[0]\n                    : null,\n            });\n        }\n        return results;\n    }\n}\n//# sourceMappingURL=metadata.js.map","import Preprocessor from '../../preprocessor.js';\nexport default class PreprocessorBucket {\n    static deserialize(view) {\n        const excluded = new Set();\n        for (let i = 0, l = view.getUint32(); i < l; i++) {\n            excluded.add(view.getUint32());\n        }\n        const preprocessors = [];\n        for (let i = 0, l = view.getUint32(); i < l; i++) {\n            preprocessors.push(Preprocessor.deserialize(view));\n        }\n        return new this({\n            excluded,\n            preprocessors,\n        });\n    }\n    constructor({ excluded = new Set(), preprocessors = [], }) {\n        this.excluded = excluded;\n        this.preprocessors = preprocessors;\n    }\n    isFilterExcluded(filter) {\n        return this.excluded.has(filter.getId());\n    }\n    updateEnv(env) {\n        // Update excluded filter ids based on bindings\n        this.excluded.clear();\n        for (const preprocessor of this.preprocessors) {\n            if (!preprocessor.evaluate(env)) {\n                for (const filterID of preprocessor.filterIDs) {\n                    this.excluded.add(filterID);\n                }\n            }\n        }\n    }\n    update({ added, removed, }, env) {\n        if (removed) {\n            for (const preprocessor of removed) {\n                const local = this.preprocessors.find((local) => local.condition === preprocessor.condition);\n                // Skip if we don't have any preprocessor on local\n                // In the context of filters updates from CDN this should never happen.\n                if (!local) {\n                    continue;\n                }\n                for (const filterID of preprocessor.filterIDs) {\n                    local.filterIDs.delete(filterID);\n                }\n            }\n        }\n        if (added) {\n            for (const preprocessor of added) {\n                const local = this.preprocessors.find((local) => local.condition === preprocessor.condition);\n                if (!local) {\n                    this.preprocessors.push(preprocessor);\n                    continue;\n                }\n                for (const filterID of preprocessor.filterIDs) {\n                    local.filterIDs.add(filterID);\n                }\n            }\n        }\n        if ((removed && removed.length !== 0) || (added && added.length !== 0)) {\n            this.updateEnv(env);\n        }\n    }\n    serialize(view) {\n        view.pushUint32(this.excluded.size);\n        for (const filterID of this.excluded) {\n            view.pushUint32(filterID);\n        }\n        view.pushUint32(this.preprocessors.length);\n        for (const preprocessor of this.preprocessors) {\n            preprocessor.serialize(view);\n        }\n    }\n    getSerializedSize() {\n        let estimatedSize = (1 + this.excluded.size) * 4;\n        estimatedSize += 4;\n        for (const preprocessor of this.preprocessors) {\n            estimatedSize += preprocessor.getSerializedSize();\n        }\n        return estimatedSize;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport Config from '../config.js';\nimport { StaticDataView, sizeOfASCII, sizeOfByte, sizeOfBool } from '../data-view.js';\nimport { EventEmitter } from '../events.js';\nimport { adsAndTrackingLists, adsLists, fetchLists, fetchResources, fullLists, } from '../fetch.js';\nimport { block } from '../filters/dsl.js';\nimport { FilterType, parseFilters } from '../lists.js';\nimport Request from '../request.js';\nimport Resources from '../resources.js';\nimport CosmeticFilterBucket from './bucket/cosmetic.js';\nimport NetworkFilterBucket from './bucket/network.js';\nimport { Metadata } from './metadata.js';\nimport Preprocessor, { Env } from '../preprocessor.js';\nimport PreprocessorBucket from './bucket/preprocessor.js';\nimport { fastHash } from '../utils.js';\nexport const ENGINE_VERSION = 665;\nfunction shouldApplyHideException(filters) {\n    if (filters.length === 0) {\n        return false;\n    }\n    // Get $Xhide filter with highest priority:\n    // $Xhide,important > $Xhide > @@$Xhide\n    let genericHideFilter;\n    let currentScore = 0;\n    for (const filter of filters) {\n        // To encode priority between filters, we create a bitmask with the following:\n        // $important,Xhide = 100 (takes precedence)\n        // $Xhide           = 010 (exception to @@$Xhide)\n        // @@$Xhide         = 001 (forbids Xhide filters)\n        const score = (filter.isImportant() ? 4 : 0) | (filter.isException() ? 1 : 2);\n        // Highest `score` has precedence\n        if (score >= currentScore) {\n            currentScore = score;\n            genericHideFilter = filter;\n        }\n    }\n    if (genericHideFilter === undefined) {\n        return false;\n    }\n    // Check that there is at least one $generichide match and no exception\n    return genericHideFilter.isException();\n}\nexport default class FilterEngine extends EventEmitter {\n    static fromCached(init, caching) {\n        if (caching === undefined) {\n            return init();\n        }\n        const { path, read, write } = caching;\n        return read(path)\n            .then((buffer) => this.deserialize(buffer))\n            .catch(() => init().then((engine) => write(path, engine.serialize()).then(() => engine)));\n    }\n    static empty(config = {}) {\n        return new this({ config });\n    }\n    /**\n     * Create an instance of `FiltersEngine` (or subclass like `ElectronBlocker`,\n     * etc.), from the list of subscriptions provided as argument (e.g.:\n     * EasyList).\n     *\n     * Lists are fetched using the instance of `fetch` provided as a first\n     * argument. Optionally resources.txt and config can be provided.\n     */\n    static fromLists(fetch, urls, config = {}, caching) {\n        return this.fromCached(() => {\n            const listsPromises = fetchLists(fetch, urls);\n            const resourcesPromise = fetchResources(fetch);\n            return Promise.all([listsPromises, resourcesPromise]).then(([lists, resources]) => {\n                const engine = this.parse(lists.join('\\n'), config);\n                if (resources !== undefined) {\n                    engine.updateResources(resources, '' + resources.length);\n                }\n                return engine;\n            });\n        }, caching);\n    }\n    /**\n     * Initialize blocker of *ads only*.\n     *\n     * Attempt to initialize a blocking engine using a pre-built version served\n     * from Ghostery's CDN. If this fails (e.g.: if no pre-built engine is available\n     * for this version of the library), then falls-back to using `fromLists(...)`\n     * method with the same subscriptions.\n     */\n    static fromPrebuiltAdsOnly(fetchImpl = fetch, caching) {\n        return this.fromLists(fetchImpl, adsLists, {}, caching);\n    }\n    /**\n     * Same as `fromPrebuiltAdsOnly(...)` but also contains rules to block\n     * tracking (i.e.: using extra lists such as EasyPrivacy and more).\n     */\n    static fromPrebuiltAdsAndTracking(fetchImpl = fetch, caching) {\n        return this.fromLists(fetchImpl, adsAndTrackingLists, {}, caching);\n    }\n    /**\n     * Same as `fromPrebuiltAdsAndTracking(...)` but also contains annoyances\n     * rules to block things like cookie notices.\n     */\n    static fromPrebuiltFull(fetchImpl = fetch, caching) {\n        return this.fromLists(fetchImpl, fullLists, {}, caching);\n    }\n    static fromTrackerDB(rawJsonDump, options = {}) {\n        const config = new Config(options);\n        const metadata = new Metadata(rawJsonDump);\n        const filters = [];\n        for (const pattern of metadata.getPatterns()) {\n            filters.push(...pattern.filters);\n        }\n        const engine = this.parse(filters.join('\\n'), config);\n        engine.metadata = metadata;\n        return engine;\n    }\n    static merge(engines) {\n        if (!engines || engines.length < 2) {\n            throw new Error('merging engines requires at least two engines');\n        }\n        const config = engines[0].config;\n        const lists = new Map();\n        const networkFilters = new Map();\n        const cosmeticFilters = new Map();\n        const preprocessors = [];\n        const metadata = {\n            organizations: {},\n            categories: {},\n            patterns: {},\n        };\n        const resources = new Map();\n        const compatibleConfigKeys = [];\n        const configKeysMustMatch = Object.keys(config).filter(function (key) {\n            return (typeof config[key] === 'boolean' && !compatibleConfigKeys.includes(key));\n        });\n        for (const engine of engines) {\n            // Validate the config\n            for (const configKey of configKeysMustMatch) {\n                if (config[configKey] !== engine.config[configKey]) {\n                    throw new Error(`config \"${configKey}\" of all merged engines must be the same`);\n                }\n            }\n            const filters = engine.getFilters();\n            for (const networkFilter of filters.networkFilters) {\n                networkFilters.set(networkFilter.getId(), networkFilter);\n            }\n            for (const cosmeticFilter of filters.cosmeticFilters) {\n                cosmeticFilters.set(cosmeticFilter.getId(), cosmeticFilter);\n            }\n            for (const preprocessor of engine.preprocessors.preprocessors) {\n                preprocessors.push(preprocessor);\n            }\n            for (const [key, value] of engine.lists) {\n                if (lists.has(key)) {\n                    continue;\n                }\n                lists.set(key, value);\n            }\n            if (engine.metadata !== undefined) {\n                for (const organization of engine.metadata.organizations.getValues()) {\n                    if (metadata.organizations[organization.key] === undefined) {\n                        metadata.organizations[organization.key] = organization;\n                    }\n                }\n                for (const category of engine.metadata.categories.getValues()) {\n                    if (metadata.categories[category.key] === undefined) {\n                        metadata.categories[category.key] = category;\n                    }\n                }\n                for (const pattern of engine.metadata.patterns.getValues()) {\n                    if (metadata.patterns[pattern.key] === undefined) {\n                        metadata.patterns[pattern.key] = pattern;\n                    }\n                }\n            }\n            for (const [name, resource] of engine.resources.resources) {\n                if (!resources.has(name)) {\n                    resources.set(name, resource);\n                }\n            }\n        }\n        const resourcesText = [...resources.entries()]\n            .reduce((state, [name, resource]) => {\n            return [...state, `${name} ${resource.contentType}\\n${resource.body}`];\n        }, [])\n            .join('\\n\\n');\n        const engine = new this({\n            networkFilters: Array.from(networkFilters.values()),\n            cosmeticFilters: Array.from(cosmeticFilters.values()),\n            preprocessors,\n            lists,\n            config,\n        });\n        if (Object.keys(metadata.categories).length +\n            Object.keys(metadata.organizations).length +\n            Object.keys(metadata.patterns).length !==\n            0) {\n            engine.metadata = new Metadata(metadata);\n        }\n        engine.resources = Resources.parse(resourcesText, {\n            checksum: fastHash(resourcesText).toString(16),\n        });\n        return engine;\n    }\n    static parse(filters, options = {}) {\n        const config = new Config(options);\n        return new this({\n            ...parseFilters(filters, config),\n            config,\n        });\n    }\n    static deserialize(serialized) {\n        const buffer = StaticDataView.fromUint8Array(serialized, {\n            enableCompression: false,\n        });\n        // Before starting deserialization, we make sure that the version of the\n        // serialized engine is the same as the current source code. If not, we\n        // start fresh and create a new engine from the lists.\n        const serializedEngineVersion = buffer.getUint16();\n        if (ENGINE_VERSION !== serializedEngineVersion) {\n            throw new Error(`serialized engine version mismatch, expected ${ENGINE_VERSION} but got ${serializedEngineVersion}`);\n        }\n        // Create a new engine with same options\n        const config = Config.deserialize(buffer);\n        // Optionally turn compression ON\n        if (config.enableCompression) {\n            buffer.enableCompression();\n        }\n        // Also make sure that the built-in checksum is correct. This allows to\n        // detect data corruption and start fresh if the serialized version was\n        // altered.\n        if (config.integrityCheck) {\n            const currentPos = buffer.pos;\n            buffer.pos = serialized.length - 4;\n            const checksum = buffer.checksum();\n            const expected = buffer.getUint32();\n            if (checksum !== expected) {\n                throw new Error(`serialized engine checksum mismatch, expected ${expected} but got ${checksum}`);\n            }\n            buffer.pos = currentPos;\n        }\n        const engine = new this({ config });\n        // Deserialize resources\n        engine.resources = Resources.deserialize(buffer);\n        // Deserialize lists\n        const lists = new Map();\n        const numberOfLists = buffer.getUint16();\n        for (let i = 0; i < numberOfLists; i += 1) {\n            lists.set(buffer.getASCII(), buffer.getASCII());\n        }\n        engine.lists = lists;\n        // Deserialize preprocessors\n        engine.preprocessors = PreprocessorBucket.deserialize(buffer);\n        // Deserialize buckets\n        engine.importants = NetworkFilterBucket.deserialize(buffer, config);\n        engine.redirects = NetworkFilterBucket.deserialize(buffer, config);\n        engine.filters = NetworkFilterBucket.deserialize(buffer, config);\n        engine.exceptions = NetworkFilterBucket.deserialize(buffer, config);\n        engine.csp = NetworkFilterBucket.deserialize(buffer, config);\n        engine.cosmetics = CosmeticFilterBucket.deserialize(buffer, config);\n        engine.hideExceptions = NetworkFilterBucket.deserialize(buffer, config);\n        // Optionally deserialize metadata\n        const hasMetadata = buffer.getBool();\n        if (hasMetadata) {\n            engine.metadata = Metadata.deserialize(buffer);\n        }\n        buffer.seekZero();\n        return engine;\n    }\n    constructor({ \n    // Optionally initialize the engine with filters\n    cosmeticFilters = [], networkFilters = [], preprocessors = [], config = new Config(), lists = new Map(), } = {}) {\n        super(); // init super-class EventEmitter\n        this.config = new Config(config);\n        // Subscription management: disabled by default\n        this.lists = lists;\n        // Preprocessors\n        this.preprocessors = new PreprocessorBucket({});\n        // $csp=\n        this.csp = new NetworkFilterBucket({ config: this.config });\n        // $elemhide\n        // $generichide\n        // $specifichide\n        this.hideExceptions = new NetworkFilterBucket({ config: this.config });\n        // @@filter\n        this.exceptions = new NetworkFilterBucket({ config: this.config });\n        // $important\n        this.importants = new NetworkFilterBucket({ config: this.config });\n        // $redirect\n        this.redirects = new NetworkFilterBucket({ config: this.config });\n        // All other filters\n        this.filters = new NetworkFilterBucket({ config: this.config });\n        // Cosmetic filters\n        this.cosmetics = new CosmeticFilterBucket({ config: this.config });\n        // Injections\n        this.resources = new Resources();\n        if (networkFilters.length !== 0 || cosmeticFilters.length !== 0) {\n            this.update({\n                newCosmeticFilters: cosmeticFilters,\n                newNetworkFilters: networkFilters,\n                newPreprocessors: preprocessors,\n            });\n        }\n    }\n    isFilterExcluded(filter) {\n        return this.preprocessors.isFilterExcluded(filter);\n    }\n    updateEnv(env) {\n        this.preprocessors.updateEnv(env);\n    }\n    /**\n     * Estimate the number of bytes needed to serialize this instance of\n     * `FiltersEngine` using the `serialize(...)` method. It is used internally\n     * by `serialize(...)` to allocate a buffer of the right size and you should\n     * not have to call it yourself most of the time.\n     *\n     * There are cases where we cannot estimate statically the exact size of the\n     * resulting buffer (due to alignement which needs to be performed); this\n     * method will return a safe estimate which will always be at least equal to\n     * the real number of bytes needed, or bigger (usually of a few bytes only:\n     * ~20 bytes is to be expected).\n     */\n    getSerializedSize() {\n        let estimatedSize = sizeOfByte() + // engine version\n            this.config.getSerializedSize() +\n            this.resources.getSerializedSize() +\n            this.preprocessors.getSerializedSize() +\n            this.filters.getSerializedSize() +\n            this.exceptions.getSerializedSize() +\n            this.importants.getSerializedSize() +\n            this.redirects.getSerializedSize() +\n            this.csp.getSerializedSize() +\n            this.cosmetics.getSerializedSize() +\n            this.hideExceptions.getSerializedSize() +\n            4; // checksum\n        // Estimate size of `this.lists` which stores information of checksum for each list.\n        for (const [name, checksum] of this.lists) {\n            estimatedSize += sizeOfASCII(name) + sizeOfASCII(checksum);\n        }\n        estimatedSize += sizeOfBool();\n        if (this.metadata !== undefined) {\n            estimatedSize += this.metadata.getSerializedSize();\n        }\n        return estimatedSize;\n    }\n    /**\n     * Creates a binary representation of the full engine. It can be stored\n     * on-disk for faster loading of the adblocker. The `deserialize` static\n     * method of Engine can be used to restore the engine.\n     */\n    serialize(array) {\n        const buffer = StaticDataView.fromUint8Array(array || new Uint8Array(this.getSerializedSize()), this.config);\n        buffer.pushUint16(ENGINE_VERSION);\n        // Config\n        this.config.serialize(buffer);\n        // Resources (js, resources)\n        this.resources.serialize(buffer);\n        // Serialize the state of lists (names and checksums)\n        buffer.pushUint16(this.lists.size);\n        for (const [name, value] of Array.from(this.lists.entries()).sort()) {\n            buffer.pushASCII(name);\n            buffer.pushASCII(value);\n        }\n        // Preprocessors\n        this.preprocessors.serialize(buffer);\n        // Filters buckets\n        this.importants.serialize(buffer);\n        this.redirects.serialize(buffer);\n        this.filters.serialize(buffer);\n        this.exceptions.serialize(buffer);\n        this.csp.serialize(buffer);\n        this.cosmetics.serialize(buffer);\n        this.hideExceptions.serialize(buffer);\n        // Optionally serialize metadata\n        buffer.pushBool(this.metadata !== undefined);\n        if (this.metadata !== undefined) {\n            this.metadata.serialize(buffer);\n        }\n        // Optionally append a checksum at the end\n        if (this.config.integrityCheck) {\n            buffer.pushUint32(buffer.checksum());\n        }\n        return buffer.subarray();\n    }\n    /**\n     * Update engine with new filters or resources.\n     */\n    loadedLists() {\n        return Array.from(this.lists.keys());\n    }\n    hasList(name, checksum) {\n        return this.lists.has(name) && this.lists.get(name) === checksum;\n    }\n    /**\n     * Update engine with `resources.txt` content.\n     */\n    updateResources(data, checksum) {\n        if (this.resources.checksum === checksum) {\n            return false;\n        }\n        this.resources = Resources.parse(data, { checksum });\n        return true;\n    }\n    getFilters() {\n        const cosmeticFilters = [];\n        const networkFilters = [];\n        return {\n            cosmeticFilters: cosmeticFilters.concat(this.cosmetics.getFilters()),\n            networkFilters: networkFilters.concat(this.filters.getFilters(), this.exceptions.getFilters(), this.importants.getFilters(), this.redirects.getFilters(), this.csp.getFilters(), this.hideExceptions.getFilters()),\n        };\n    }\n    /**\n     * Update engine with new filters as well as optionally removed filters.\n     */\n    update({ newNetworkFilters = [], newCosmeticFilters = [], newPreprocessors = [], removedCosmeticFilters = [], removedNetworkFilters = [], removedPreprocessors = [], }, env = new Env()) {\n        let updated = false;\n        // Update preprocessors\n        if (this.config.loadPreprocessors &&\n            (newPreprocessors.length !== 0 || removedPreprocessors.length !== 0)) {\n            updated = true;\n            this.preprocessors.update({\n                added: newPreprocessors,\n                removed: removedPreprocessors,\n            }, env);\n        }\n        // Update cosmetic filters\n        if (this.config.loadCosmeticFilters &&\n            (newCosmeticFilters.length !== 0 || removedCosmeticFilters.length !== 0)) {\n            updated = true;\n            this.cosmetics.update(newCosmeticFilters, removedCosmeticFilters.length === 0 ? undefined : new Set(removedCosmeticFilters), this.config);\n        }\n        // Update network filters\n        if (this.config.loadNetworkFilters &&\n            (newNetworkFilters.length !== 0 || removedNetworkFilters.length !== 0)) {\n            updated = true;\n            const filters = [];\n            const csp = [];\n            const exceptions = [];\n            const importants = [];\n            const redirects = [];\n            const hideExceptions = [];\n            for (const filter of newNetworkFilters) {\n                // NOTE: it's important to check for $generichide, $elemhide,\n                // $specifichide and $csp before exceptions and important as we store\n                // all of them in the same filter bucket. The check for exceptions is\n                // done at match-time directly.\n                if (filter.isCSP()) {\n                    csp.push(filter);\n                }\n                else if (filter.isGenericHide() || filter.isSpecificHide()) {\n                    hideExceptions.push(filter);\n                }\n                else if (filter.isException()) {\n                    exceptions.push(filter);\n                }\n                else if (filter.isImportant()) {\n                    importants.push(filter);\n                }\n                else if (filter.isRedirect()) {\n                    redirects.push(filter);\n                }\n                else {\n                    filters.push(filter);\n                }\n            }\n            const removedNetworkFiltersSet = removedNetworkFilters.length === 0 ? undefined : new Set(removedNetworkFilters);\n            // Update buckets in-place\n            this.importants.update(importants, removedNetworkFiltersSet);\n            this.redirects.update(redirects, removedNetworkFiltersSet);\n            this.filters.update(filters, removedNetworkFiltersSet);\n            if (this.config.loadExceptionFilters === true) {\n                this.exceptions.update(exceptions, removedNetworkFiltersSet);\n            }\n            if (this.config.loadCSPFilters === true) {\n                this.csp.update(csp, removedNetworkFiltersSet);\n            }\n            this.hideExceptions.update(hideExceptions, removedNetworkFiltersSet);\n        }\n        return updated;\n    }\n    updateFromDiff({ added, removed, preprocessors }, env) {\n        const newCosmeticFilters = [];\n        const newNetworkFilters = [];\n        const newPreprocessors = [];\n        const removedCosmeticFilters = [];\n        const removedNetworkFilters = [];\n        const removedPreprocessors = [];\n        if (removed !== undefined && removed.length !== 0) {\n            const { networkFilters, cosmeticFilters } = parseFilters(removed.join('\\n'), this.config);\n            Array.prototype.push.apply(removedCosmeticFilters, cosmeticFilters);\n            Array.prototype.push.apply(removedNetworkFilters, networkFilters);\n        }\n        if (added !== undefined && added.length !== 0) {\n            const { networkFilters, cosmeticFilters } = parseFilters(added.join('\\n'), this.config);\n            Array.prototype.push.apply(newCosmeticFilters, cosmeticFilters);\n            Array.prototype.push.apply(newNetworkFilters, networkFilters);\n        }\n        if (preprocessors !== undefined) {\n            for (const [condition, details] of Object.entries(preprocessors)) {\n                if (details.removed !== undefined && details.removed.length !== 0) {\n                    const { networkFilters, cosmeticFilters } = parseFilters(details.removed.join('\\n'), this.config);\n                    const filterIDs = new Set([]\n                        .concat(cosmeticFilters.map((filter) => filter.getId()))\n                        .concat(networkFilters.map((filter) => filter.getId())));\n                    removedPreprocessors.push(new Preprocessor({\n                        condition,\n                        filterIDs,\n                    }));\n                }\n                if (details.added !== undefined && details.added.length !== 0) {\n                    const { networkFilters, cosmeticFilters } = parseFilters(details.added.join('\\n'), this.config);\n                    const filterIDs = new Set([]\n                        .concat(cosmeticFilters.map((filter) => filter.getId()))\n                        .concat(networkFilters.map((filter) => filter.getId())));\n                    newPreprocessors.push(new Preprocessor({\n                        condition,\n                        filterIDs,\n                    }));\n                }\n            }\n        }\n        return this.update({\n            newCosmeticFilters,\n            newNetworkFilters,\n            newPreprocessors,\n            removedCosmeticFilters: removedCosmeticFilters.map((f) => f.getId()),\n            removedNetworkFilters: removedNetworkFilters.map((f) => f.getId()),\n            removedPreprocessors,\n        }, env);\n    }\n    /**\n     * Return a list of HTML filtering rules.\n     */\n    getHtmlFilters({ \n    // Page information\n    url, hostname, domain, callerContext, }) {\n        const htmlSelectors = [];\n        if (this.config.enableHtmlFiltering === false || this.config.loadCosmeticFilters === false) {\n            return htmlSelectors;\n        }\n        domain || (domain = '');\n        const { filters, unhides } = this.cosmetics.getHtmlFilters({\n            domain,\n            hostname,\n            isFilterExcluded: this.isFilterExcluded.bind(this),\n        });\n        const exceptions = new Map(unhides.map((unhide) => [unhide.getSelector(), unhide]));\n        for (const filter of filters) {\n            const extended = filter.getExtendedSelector();\n            if (extended === undefined) {\n                continue;\n            }\n            const exception = exceptions.get(filter.getSelector());\n            if (exception !== undefined) {\n                htmlSelectors.push(extended);\n            }\n            this.emit('filter-matched', { filter, exception }, {\n                url,\n                callerContext,\n                filterType: FilterType.COSMETIC,\n            });\n        }\n        if (htmlSelectors.length !== 0) {\n            this.emit('html-filtered', htmlSelectors, url);\n        }\n        return htmlSelectors;\n    }\n    /**\n     * Given `hostname` and `domain` of a page (or frame), return the list of\n     * styles and scripts to inject in the page.\n     */\n    getCosmeticsFilters({ \n    // Page information\n    url, hostname, domain, \n    // DOM information\n    classes, hrefs, ids, \n    // Allows to specify which rules to return\n    getBaseRules = true, getInjectionRules = true, getExtendedRules = true, getRulesFromDOM = true, getRulesFromHostname = true, callerContext, }) {\n        if (this.config.loadCosmeticFilters === false) {\n            return {\n                active: false,\n                extended: [],\n                scripts: [],\n                styles: '',\n            };\n        }\n        domain || (domain = '');\n        let allowGenericHides = true;\n        let allowSpecificHides = true;\n        const exceptions = this.hideExceptions.matchAll(Request.fromRawDetails({\n            domain,\n            hostname,\n            url,\n            sourceDomain: '',\n            sourceHostname: '',\n            sourceUrl: '',\n        }), this.isFilterExcluded.bind(this));\n        const genericHides = [];\n        const specificHides = [];\n        for (const filter of exceptions) {\n            if (filter.isElemHide()) {\n                allowGenericHides = false;\n                allowSpecificHides = false;\n                break;\n            }\n            if (filter.isSpecificHide()) {\n                specificHides.push(filter);\n            }\n            else if (filter.isGenericHide()) {\n                genericHides.push(filter);\n            }\n        }\n        if (allowGenericHides === true) {\n            allowGenericHides = shouldApplyHideException(genericHides) === false;\n        }\n        if (allowSpecificHides === true) {\n            allowSpecificHides = shouldApplyHideException(specificHides) === false;\n        }\n        // Lookup injections as well as stylesheets\n        const { filters, unhides } = this.cosmetics.getCosmeticsFilters({\n            domain,\n            hostname,\n            classes,\n            hrefs,\n            ids,\n            allowGenericHides,\n            allowSpecificHides,\n            getRulesFromDOM,\n            getRulesFromHostname,\n            isFilterExcluded: this.isFilterExcluded.bind(this),\n        });\n        let injectionsDisabled = false;\n        const unhideExceptions = new Map();\n        for (const unhide of unhides) {\n            if (unhide.isScriptInject() === true &&\n                unhide.isUnhide() === true &&\n                unhide.getSelector().length === 0) {\n                injectionsDisabled = true;\n            }\n            unhideExceptions.set(unhide.getSelector(), unhide);\n        }\n        const injections = [];\n        const styleFilters = [];\n        const extendedFilters = [];\n        if (filters.length !== 0) {\n            // Apply unhide rules + dispatch\n            for (const filter of filters) {\n                // Make sure `rule` is not un-hidden by a #@# filter\n                const exception = unhideExceptions.get(filter.getSelector());\n                if (exception !== undefined) {\n                    continue;\n                }\n                let applied = false;\n                // Dispatch filters in `injections` or `styles` depending on type\n                if (filter.isScriptInject() === true) {\n                    if (getInjectionRules === true && injectionsDisabled === false) {\n                        injections.push(filter);\n                        applied = true;\n                    }\n                }\n                else if (filter.isExtended()) {\n                    if (getExtendedRules === true) {\n                        extendedFilters.push(filter);\n                        applied = true;\n                    }\n                }\n                else {\n                    styleFilters.push(filter);\n                    applied = true;\n                }\n                if (applied) {\n                    this.emit('filter-matched', {\n                        filter,\n                        exception,\n                    }, {\n                        url,\n                        callerContext,\n                        filterType: FilterType.COSMETIC,\n                    });\n                }\n            }\n        }\n        // Perform interpolation for injected scripts\n        const scripts = [];\n        for (const injection of injections) {\n            const script = injection.getScript(this.resources.js);\n            if (script !== undefined) {\n                this.emit('script-injected', script, url);\n                scripts.push(script);\n            }\n        }\n        const { stylesheet, extended } = this.cosmetics.getStylesheetsFromFilters({\n            filters: styleFilters,\n            extendedFilters,\n        }, { getBaseRules, allowGenericHides });\n        // Emit events\n        if (stylesheet.length !== 0) {\n            this.emit('style-injected', stylesheet, url);\n        }\n        return {\n            active: true,\n            extended,\n            scripts,\n            styles: stylesheet,\n        };\n    }\n    /**\n     * Given a `request`, return all matching network filters found in the engine.\n     */\n    matchAll(request) {\n        const filters = [];\n        if (request.isSupported) {\n            Array.prototype.push.apply(filters, this.importants.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.filters.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.exceptions.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.csp.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.hideExceptions.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.redirects.matchAll(request, this.isFilterExcluded.bind(this)));\n        }\n        return new Set(filters);\n    }\n    /**\n     * Given a \"main_frame\" request, check if some content security policies\n     * should be injected in the page.\n     */\n    getCSPDirectives(request) {\n        if (!this.config.loadNetworkFilters) {\n            return undefined;\n        }\n        if (request.isSupported !== true || request.isMainFrame() === false) {\n            return undefined;\n        }\n        const matches = this.csp.matchAll(request, this.isFilterExcluded.bind(this));\n        // No $csp filter found\n        if (matches.length === 0) {\n            return undefined;\n        }\n        // Collect all CSP directives and keep track of exceptions\n        const cspExceptions = new Map();\n        const cspFilters = [];\n        for (const filter of matches) {\n            if (filter.isException()) {\n                if (filter.csp === undefined) {\n                    // All CSP directives are disabled for this site\n                    this.emit('filter-matched', { exception: filter }, { request, filterType: FilterType.NETWORK });\n                    return undefined;\n                }\n                cspExceptions.set(filter.csp, filter);\n            }\n            else {\n                cspFilters.push(filter);\n            }\n        }\n        if (cspFilters.length === 0) {\n            return undefined;\n        }\n        const enabledCsp = new Set();\n        // Combine all CSPs (except the black-listed ones)\n        for (const filter of cspFilters.values()) {\n            const exception = cspExceptions.get(filter.csp);\n            if (exception === undefined) {\n                enabledCsp.add(filter.csp);\n            }\n            this.emit('filter-matched', { filter, exception }, { request, filterType: FilterType.NETWORK });\n        }\n        const csps = Array.from(enabledCsp).join('; ');\n        if (csps.length > 0) {\n            this.emit('csp-injected', request, csps);\n        }\n        return csps;\n    }\n    /**\n     * Decide if a network request (usually from WebRequest API) should be\n     * blocked, redirected or allowed.\n     */\n    match(request, withMetadata = false) {\n        const result = {\n            exception: undefined,\n            filter: undefined,\n            match: false,\n            redirect: undefined,\n            metadata: undefined,\n        };\n        if (!this.config.loadNetworkFilters) {\n            return result;\n        }\n        if (request.isSupported) {\n            // Check the filters in the following order:\n            // 1. $important (not subject to exceptions)\n            // 2. redirection ($redirect=resource)\n            // 3. normal filters\n            // 4. exceptions\n            result.filter = this.importants.match(request, this.isFilterExcluded.bind(this));\n            let redirectNone;\n            let redirectRule;\n            // If `result.filter` is `undefined`, it means there was no $important\n            // filter found so far. We look for a $redirect filter.  There is some\n            // extra logic to handle special cases like redirect-rule and\n            // redirect=none.\n            //\n            // * If redirect=none is found, then cancel all redirects.\n            // * Else if redirect-rule is found, only redirect if request would be blocked.\n            // * Else if redirect is found, redirect.\n            if (result.filter === undefined) {\n                const redirects = this.redirects.matchAll(request, this.isFilterExcluded.bind(this));\n                if (redirects.length !== 0) {\n                    for (const filter of redirects) {\n                        if (filter.getRedirect() === 'none') {\n                            redirectNone = filter;\n                        }\n                        else if (filter.isRedirectRule()) {\n                            redirectRule = filter;\n                        }\n                        else {\n                            result.filter = filter;\n                        }\n                    }\n                }\n                // If `result.filter` is still `undefined`, it means that there was no\n                // redirection rule triggered for the request. We look for a normal\n                // match.\n                if (result.filter === undefined) {\n                    result.filter = this.filters.match(request, this.isFilterExcluded.bind(this));\n                    // If we found a match, and a `$redirect-rule` as found previously,\n                    // then we transform the match into a redirect, following the\n                    // semantics of redirect-rule.\n                    if (redirectRule !== undefined && result.filter !== undefined) {\n                        result.filter = redirectRule;\n                    }\n                }\n                // If we found either a redirection rule or a normal match, then check\n                // for exceptions which could apply on the request and un-block it.\n                if (result.filter !== undefined) {\n                    result.exception = this.exceptions.match(request, this.isFilterExcluded.bind(this));\n                }\n            }\n            // If there was a redirect match and no exception was found, then we\n            // proceed and process the redirect rule. This means two things:\n            //\n            // 1. Check if a redirect=none rule was found, which acts as exception.\n            // 2. If no exception was found, prepare `result.redirect` response.\n            if (result.filter !== undefined &&\n                result.exception === undefined &&\n                result.filter.isRedirect()) {\n                if (redirectNone !== undefined) {\n                    result.exception = redirectNone;\n                }\n                else {\n                    result.redirect = this.resources.getResource(result.filter.getRedirect());\n                }\n            }\n        }\n        result.match = result.exception === undefined && result.filter !== undefined;\n        if (result.filter) {\n            this.emit('filter-matched', { filter: result.filter, exception: result.exception }, { request, filterType: FilterType.NETWORK });\n        }\n        if (result.exception !== undefined) {\n            this.emit('request-whitelisted', request, result);\n        }\n        else if (result.redirect !== undefined) {\n            this.emit('request-redirected', request, result);\n        }\n        else if (result.filter !== undefined) {\n            this.emit('request-blocked', request, result);\n        }\n        else {\n            this.emit('request-allowed', request, result);\n        }\n        if (withMetadata === true && result.filter !== undefined && this.metadata) {\n            result.metadata = this.metadata.fromFilter(result.filter);\n        }\n        return result;\n    }\n    getPatternMetadata(request, { getDomainMetadata = false } = {}) {\n        if (this.metadata === undefined) {\n            return [];\n        }\n        const seenPatterns = new Set();\n        const patterns = [];\n        for (const filter of this.matchAll(request)) {\n            for (const patternInfo of this.metadata.fromFilter(filter)) {\n                if (!seenPatterns.has(patternInfo.pattern.key)) {\n                    seenPatterns.add(patternInfo.pattern.key);\n                    patterns.push(patternInfo);\n                }\n            }\n        }\n        if (getDomainMetadata) {\n            for (const patternInfo of this.metadata.fromDomain(request.hostname)) {\n                if (!seenPatterns.has(patternInfo.pattern.key)) {\n                    seenPatterns.add(patternInfo.pattern.key);\n                    patterns.push(patternInfo);\n                }\n            }\n        }\n        return patterns;\n    }\n    blockScripts() {\n        this.updateFromDiff({\n            added: [block().scripts().redirectTo('javascript').toString()],\n        });\n        return this;\n    }\n    blockImages() {\n        this.updateFromDiff({\n            added: [block().images().redirectTo('png').toString()],\n        });\n        return this;\n    }\n    blockMedias() {\n        this.updateFromDiff({\n            added: [block().medias().redirectTo('mp4').toString()],\n        });\n        return this;\n    }\n    blockFrames() {\n        this.updateFromDiff({\n            added: [block().frames().redirectTo('html').toString()],\n        });\n        return this;\n    }\n    blockFonts() {\n        this.updateFromDiff({\n            added: [block().fonts().toString()],\n        });\n        return this;\n    }\n    blockStyles() {\n        this.updateFromDiff({\n            added: [block().styles().toString()],\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=engine.js.map","/*!\n * Copyright (c) 2017-present Ghostery GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/*!\n * Copyright (c) 2008-2009 Bjoern Hoehrmann <bjoern@hoehrmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n// From http://bjoern.hoehrmann.de/utf-8/decoder/dfa/\nconst utf8d = new Uint8Array([\n    /* eslint-disable prettier/prettier */\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 00..1f\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 20..3f\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 40..5f\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 60..7f\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, // 80..9f\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, // a0..bf\n    8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, // c0..df\n    0xa, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x4, 0x3, 0x3, // e0..ef\n    0xb, 0x6, 0x6, 0x6, 0x5, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, // f0..ff\n    0x0, 0x1, 0x2, 0x3, 0x5, 0x8, 0x7, 0x1, 0x1, 0x1, 0x4, 0x6, 0x1, 0x1, 0x1, 0x1, // s0..s0\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, // s1..s2\n    1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, // s3..s4\n    1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, // s5..s6\n    1, 3, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // s7..s8\n    /* eslint-enable prettier/prettier */\n]);\nfunction isAscii(bytes) {\n    if (bytes.length === 0) {\n        return true;\n    }\n    for (let i = 0; i < bytes.length; i += 1) {\n        if (bytes[i] > 127) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isUTF8(bytes) {\n    if (bytes.length === 0) {\n        return true;\n    }\n    if (isAscii(bytes) === true) {\n        return true;\n    }\n    let state = 0;\n    for (let i = 0; i < bytes.length; i += 1) {\n        const type = utf8d[bytes[i]];\n        state = utf8d[256 + state * 16 + type];\n        if (state === 1 || state === undefined) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=encoding.js.map"],"names":["cosmeticSelectorCodebook","networkCSPCodebook","networkFilterCodebook","networkHostnameCodebook","networkRedirectCodebook","networkRawCodebook","cosmeticRawCodebook","Compression","constructor","this","cosmeticSelector","Smaz","networkCSP","networkRedirect","networkHostname","networkFilter","networkRaw","cosmeticRaw","T","c","table","Int32Array","n","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","error","type","RangeError","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","Math","floor","decode","input","output","inputLength","length","i","bias","basic","lastIndexOf","j","charCodeAt","push","index","oldi","w","codePoint","t","baseMinusT","out","splice","String","fromCodePoint","apply","encode","str","counter","value","extra","ucs2decode","currentValue","fromCharCode","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","join","toASCII","labels","replace","split","encoded","test","EMPTY_UINT8_ARRAY","Uint8Array","EMPTY_UINT32_ARRAY","Uint32Array","LITTLE_ENDIAN","Int8Array","Int16Array","buffer","promise","getCompressionSingleton","COMPRESSION","sizeOfLength","sizeOfBytes","array","align","sizeOfBytesWithLength","sizeOfASCII","sizeOfUTF8","encodedLength","sizeOfUint32Array","byteLength","StaticDataView","empty","options","fromUint8Array","allocate","capacity","enableCompression","Error","pos","compression","checksum","buf","start","end","C","L","crc32","dataAvailable","setPos","getPos","seekZero","slice","checkSize","subarray","align4","set","pushBool","bool","pushByte","Number","getBool","Boolean","getByte","setByte","byte","octet","pushUint8","getUint8","pushBytes","bytes","pushLength","getBytes","numberOfBytes","getLength","getUint32ArrayView","desiredSize","view","byteOffset","uint8","pushUint16","uint16","getUint16","pushUint32","uint32","getUint32","pushUint32Array","arr","getUint32Array","pushUTF8","raw","getUTF8","pushASCII","getASCII","pushNetworkRedirect","undefined","compress","getNetworkRedirect","decompress","pushNetworkHostname","getNetworkHostname","pushNetworkCSP","getNetworkCSP","pushNetworkFilter","getNetworkFilter","pushCosmeticSelector","getCosmeticSelector","pushRawCosmetic","getRawCosmetic","pushRawNetwork","getRawNetwork","lengthShort","Config","deserialize","debug","enableHtmlFiltering","enableInMemoryCache","enableMutationObserver","enableOptimizations","enablePushInjectionsOnNavigationEvents","guessRequestTypeFromUrl","integrityCheck","loadCSPFilters","loadCosmeticFilters","loadExceptionFilters","loadExtendedSelectors","loadGenericCosmeticsFilters","loadNetworkFilters","loadPreprocessors","getSerializedSize","serialize","queueMicrotask","window","cb","Promise","resolve","then","catch","err","setTimeout","registerCallback","event","callback","listeners","listenersForEvent","get","unregisterCallback","indexOfCallback","indexOf","triggerCallback","args","size","listener","EventEmitter","onceListeners","Map","onListeners","on","once","unsubscribe","emit","delete","fetchWithRetry","fetch","url","retry","fetchWrapper","ex","reject","fetchResource","response","text","PREFIX","adsLists","adsAndTrackingLists","fullLists","fetchLists","urls","all","map","fetchResources","NetworkBuilder","Set","prefix","infix","suffix","redirect","blockRequestsWithType","has","add","images","scripts","frames","fonts","medias","styles","redirectTo","urlContains","urlStartsWith","urlEndsWith","withHostname","hostname","toString","parts","option","block","TOKENS_BUFFER","reset","token","full","remaining","HASH_INTERNAL_MULT","HASH_SEED","bitCount","getBit","mask","setBit","clearBit","fastHashBetween","begin","hash","fastHash","hashStrings","strings","result","fastStartsWith","haystack","needle","ceil","fastStartsWithFrom","isDigit","ch","isAlpha","isAllowedCode","isAlphaExtended","isCyrillic","tokenizeInPlace","pattern","skipFirstToken","skipLastToken","len","min","inside","tokenizeNoSkipInPlace","tokenizeNoSkip","binLookup","elt","low","high","mid","midVal","binSearch","hasUnicodeRe","hasUnicode","TLDTS_OPTIONS","extractHostname","mixedInputs","validateHostname","NORMALIZED_TYPE_TOKEN","beacon","cspReport","csp_report","cspviolationreport","document","eventsource","font","image","imageset","mainFrame","main_frame","manifest","media","object","object_subrequest","other","ping","prefetch","preflight","script","signedexchange","speculative","stylesheet","subFrame","sub_frame","texttrack","webSocket","web_manifest","websocket","xhr","xml_dtd","xmlhttprequest","xslt","hashHostnameBackward","getHashesFromLabelsBackward","startOfDomain","code","getEntityHashesFromLabelsBackward","domain","hostnameWithoutPublicSuffix","indexOfDot","publicSuffix","getHostnameWithoutPublicSuffix","getHostnameHashesFromLabelsBackward","Request","fromRawDetails","requestId","tabId","sourceUrl","sourceHostname","sourceDomain","_originalRequestDetails","toLowerCase","parsed","parse","tokens","hostnameHashes","entityHashes","id","sourceHostnameHashes","sourceEntityHashes","isThirdParty","isFirstParty","isSupported","startsWith","isHttp","isHttps","indexOfComa","getHostnameHashes","getEntityHashes","getTokens","isMainFrame","isSubFrame","guessTypeOfRequest","currentType","guessUrlType","Domains","entities","notEntities","hostnames","notHostnames","negation","entity","sort","optionalParts","updateId","notHostname","notEntity","estimate","match","extractHTMLSelectorFromRule","rule","selectors","currentParsingDepth","startOfSelectorIndex","prev","tagShouldBeRemoved","tag","plainPatterns","regexpPatterns","EMPTY_TOKENS","DEFAULT_HIDDING_STYLE","REGEXP_UNICODE_COMMA","RegExp","REGEXP_UNICODE_BACKSLASH","REGEXP_ESCAPED_COMMA","isSimpleSelector","selector","nextCode","isSimpleHrefSelector","isValidCss","div","createElement","matches","validSelectorRe","COSMETICS_MASK","CosmeticFilter","line","rawLine","domains","style","sharpIndex","afterSharpIndex","suffixStartIndex","unhide","endsWith","remove","extended","indexOfStyle","scriptInject","selectorType","classifySelector","SelectorType","Extended","Invalid","isUnicode","c0","c1","c2","isClassSelector","isIdSelector","isHrefSelector","isCosmeticFilter","isNetworkFilter","getCompressedSize","sizeOfCosmeticSelector","sizeOfRawCosmetic","filter","isUnhide","isScriptInject","hasHostnameConstraint","endOfSelector","getSelector","hrefIndex","hrefEnd","tokenize","parseScript","lastComaIndex","inDoubleQuotes","inSingleQuotes","inRegexp","objectNesting","lastCharIsBackslash","inArgument","char","trim","part","substring","name","getScript","js","arg","getId","computeFilterId","hasCustomStyle","getStyle","getStyleAttributeHash","getSelectorAST","parseCssSelector","getExtendedSelector","isExtended","isRemove","isCSS","isHtmlFiltering","isGenericHide","_a","_b","HTTP_HASH","HTTPS_HASH","NETWORK_FILTER_MASK","FROM_ANY","fromDocument","fromFont","fromImage","fromMedia","fromObject","fromOther","fromPing","fromScript","fromStylesheet","fromSubdocument","fromWebsocket","fromXmlHttpRequest","REQUEST_TYPE_TO_MASK","getListOfRequestTypes","types","denyallow","optionValue","compileRegex","isLeftAnchor","isRightAnchor","isFullRegex","getFilterOptionName","getFilterOptionValue","MATCH_ALL","NetworkFilter","thirdParty","firstParty","fromHttps","fromHttp","cptMaskPositive","cptMaskNegative","filterIndexStart","filterIndexEnd","isException","optionsIndex","character","lastIndex","findLastIndexOfUnescapedCharacter","rawOption","getFilterOptions","isBadFilter","isImportant","isRedirect","isRedirectRule","isCSP","isSpecificHide","optionMask","isHostnameAnchor","firstSeparator","separatorCode","isRegex","setNetworkMask","indexOfSeparator","indexOfWildcard","checkIsRegex","regex","csp","request","isCptAllowed","checkOptions","getFilter","filterHostname","getHostname","isFollowedByWildcard","matchIndex","isAnchoredByHostname","getRegex","requestHostname","hasFilter","checkPattern","sizeOfNetworkFilter","sizeOfNetworkHostname","sizeOfRawNetwork","sizeOfNetworkCSP","sizeOfNetworkRedirect","modifierReplacer","hasHostname","source","fromAny","numberOfCptOptions","getCptMask","getListOfRequestTypesNegated","isElemHide","getIdWithoutBadFilter","hasDomains","getMask","getRedirect","precedingCh","tokenizeWithWildcardsInPlace","tokenizeRegexInPlace","cpt","isPlain","Env","PreprocessorTokens","detectPreprocessor","INVALID","BEGIF","ELSE","ENDIF","tokenizerPattern","identifierPattern","precedence","isOperator","Object","prototype","hasOwnProperty","call","testIdentifier","identifier","env","evaluate","expression","isIdentifier","reduce","partialSum","stack","pop","right","left","Preprocessor","getCondition","filterIDs","condition","l","filterID","estimatedSize","FilterType","detectFilterType","extendedNonSupportedTypes","NOT_SUPPORTED_EMPTY","NOT_SUPPORTED","firstCharCode","secondCharCode","NOT_SUPPORTED_COMMENT","lastCharCode","NETWORK","dollarIndex","afterDollarIndex","afterDollarCharCode","NOT_SUPPORTED_ADGUARD","afterSharpCharCode","COSMETIC","parseFilter","filterType","parseFilters","list","config","networkFilters","cosmeticFilters","notSupportedFilters","lines","preprocessors","preprocessorStack","nextLine","lineNumber","preprocessorToken","lastPreprocessor","preprocessor","getFilters","filters","concat","exports","Resources","resources","numberOfResources","contentType","body","forEach","data","typeToResource","chunks","chunk","resource","firstNewLine","key","entries","resourcesByName","getResource","getResourceForMime","dataUrl","btoa","Buffer","from","escape","s","setWithDefault","bucket","groupBy","criteria","grouped","Array","values","splitBy","positive","negative","OPTIMIZATIONS","description","fusion","groupByCriteria","select","assign","patterns","f","noopOptimizeNetwork","noopOptimizeCosmetic","optimizeNetwork","fused","toFuse","groups","group","nextPow2","v","UID","EMPTY_BUCKET","MAX_SAFE_INTEGER","ReverseIndex","optimize","tokensLookupIndexSize","bucketsIndexSize","numberOfFilters","tokensLookupIndex","bucketsIndex","filtersIndexStart","updateInternals","cache","deserializeFilter","update","iterMatchingFilters","getNextId","iterBucket","newFilters","removedFilters","clear","totalNumberOfTokens","totalNumberOfIndexedFilters","filtersTokens","estimatedBufferSize","f1","f2","histogram","max","multiTokens","suffixes","filterIndex","bestToken","minCount","tokenCount","indexInBucketsIndex","filtersForMask","offset","startOfBucket","endOfBucket","filtersIndices","lastRequestSeen","EMPTY_FILTERS","FiltersContainer","container","bufferSizeEstimation","selected","currentFilters","storedFiltersRemoved","numberOfExistingFilters","storedFiltersAdded","createStylesheet","rules","maximumNumberOfSelectors","styleStr","createStylesheetFromRulesWithCustomStyles","selectorsPerStyle","stylesheets","selectorsPerStyleArray","createStylesheetFromRules","createLookupTokens","hostnamesHashes","entitiesHashes","CosmeticFilterBucket","genericRules","classesIndex","hostnameIndex","hrefsIndex","htmlIndex","idsIndex","unhideIndex","baseStylesheet","extraGenericRules","classSelectors","genericHideRules","hostnameSpecificRules","hrefSelectors","htmlRules","idSelectors","unHideRules","getHtmlFilters","isFilterExcluded","hostnameTokens","unhides","getCosmeticsFilters","classes","hrefs","ids","allowGenericHides","allowSpecificHides","getRulesFromDOM","getRulesFromHostname","getGenericRules","sorted","compactTokens","arrays","totalSize","concatTypedArrays","href","getStylesheetsFromFilters","extendedFilters","getBaseRules","getBaseStylesheet","extendedStyles","ast","attribute","lazyPopulateGenericRulesCache","canBeHiddenSelectors","cannotBeHiddenRules","canBeHiddenRules","NetworkFilterBucket","badFilters","badFiltersIds","matchAll","isFilterDisabled","badFilter","CompactMap","numberOfValues","valuesIndexStart","getKeys","deserializeValue","patternsKeys","keys","valueIndex","valuesForMask","getValues","cachedValues","valuesIndices","isValid","category","color","getKey","createMap","categories","organization","country","website_url","websiteUrl","privacy_policy_url","privacyPolicyUrl","privacy_contact","privacyContact","ghostery_id","ghosteryId","organizations","alias","isArray","every","parsedFilter","sizeOfDomains","sizeOfFilters","numberOfDomains","Metadata","metadata","deserializeCategory","deserializeOrganization","deserializePattern","rawTrackerDB","createOrganizationsMap","createCategoriesMap","createPatternsMap","rawPatterns","rawOrganizations","rawCategories","categoryWithKey","isValidCategory","console","organizationWithKey","isValidOrganization","patternWithKey","isValidPattern","getCategories","getOrganizations","getPatterns","fromFilter","fromId","fromDomain","domainParts","shift","subdomain","parsedDomainFilter","results","getCategoryKey","getOrganizationKey","PreprocessorBucket","excluded","updateEnv","added","removed","local","find","ENGINE_VERSION","shouldApplyHideException","genericHideFilter","currentScore","score","utf8d","fromCached","init","caching","path","read","write","engine","fromLists","listsPromises","resourcesPromise","lists","updateResources","fromPrebuiltAdsOnly","fetchImpl","fromPrebuiltAdsAndTracking","fromPrebuiltFull","fromTrackerDB","rawJsonDump","merge","engines","compatibleConfigKeys","configKeysMustMatch","includes","configKey","cosmeticFilter","resourcesText","state","serialized","serializedEngineVersion","currentPos","expected","numberOfLists","importants","redirects","exceptions","cosmetics","hideExceptions","super","newCosmeticFilters","newNetworkFilters","newPreprocessors","loadedLists","hasList","removedCosmeticFilters","removedNetworkFilters","removedPreprocessors","updated","removedNetworkFiltersSet","updateFromDiff","details","callerContext","htmlSelectors","bind","exception","getInjectionRules","getExtendedRules","active","genericHides","specificHides","injectionsDisabled","unhideExceptions","injections","styleFilters","applied","injection","getCSPDirectives","cspExceptions","cspFilters","enabledCsp","csps","withMetadata","redirectNone","redirectRule","getPatternMetadata","getDomainMetadata","seenPatterns","patternInfo","blockScripts","blockImages","blockMedias","blockFrames","blockFonts","blockStyles","extractSelectorsFromRules","flush","tags","rest","html","endOfLastTag","endOfTagIndex","indexOfClosingTag","lastClosingTagIndex","indexOfNextTag","extractTagsFromHtml","toRemove","filteredHtml","reverse","removeTagsFromHtml","selectTagsToRemove","prevRevision","newRevision","debugConfig","prevRevisionData","prevRevisionIds","newRevisionData","newRevisionIds","newPreprocessor","removedInScope","scope","addedInScope","isAscii","diffs","addedCumul","removedCumul","preprocessorsCumul","fromEntries"],"mappings":"mmBAQe,IAAAA,EAAA,CACX,qIACA,qIACA,qIACA,qIACA,4HACA,yFACA,0EACA,sEACA,8DACA,qDACA,kDACA,kDACA,kDACA,6CACA,2CACA,0CACA,yCACA,uCACA,mCACA,iCACA,iCACA,+BACA,+BACA,6BACA,6BACA,4BACA,2BACA,2BACA,2BACA,2BACA,0BACA,sBACA,qBACA,qBACA,oBACA,oBACA,oBACA,mBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,gBACA,eACA,cACA,cACA,cACA,cACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PWC,EAAA,CACX,qJACA,mDACA,+CACA,8CACA,wCACA,qCACA,mCACA,iCACA,gCACA,+BACA,2BACA,0BACA,0BACA,wBACA,qBACA,oBACA,oBACA,oBACA,mBACA,kBACA,eACA,eACA,cACA,aACA,aACA,aACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCzGWC,EAAA,CACX,0DACA,yDACA,uDACA,sDACA,+CACA,uCACA,4BACA,2BACA,yBACA,wBACA,uBACA,uBACA,uBACA,sBACA,mBACA,kBACA,iBACA,iBACA,kBACA,eACA,iBACA,eACA,eACA,cACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PWC,EAAA,CACX,6BACA,oBACA,oBACA,oBACA,kBACA,aACA,aACA,YACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PWC,EAAA,CACX,oCACA,mCACA,8BACA,2BACA,0BACA,uBACA,mBACA,mBACA,kBACA,iBACA,gBACA,gBACA,gBACA,eACA,eACA,cACA,aACA,aACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,SACA,QACA,QACA,OACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCjFWC,EAAA,CACX,uBACA,oBACA,oBACA,oBACA,mBACA,kBACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,cACA,cACA,aACA,YACA,WACA,WACA,WACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PWC,EAAA,CACX,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,mBACA,iBACA,gBACA,eACA,eACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,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"}